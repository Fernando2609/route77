-- phpMyAdmin SQL Dump
-- version 5.1.0
-- https://www.phpmyadmin.net/
--
-- Servidor: 127.0.0.1
-- Tiempo de generación: 19-04-2022 a las 11:45:38
-- Versión del servidor: 10.4.19-MariaDB
-- Versión de PHP: 8.0.6

SET SQL_MODE = "NO_AUTO_VALUE_ON_ZERO";
START TRANSACTION;
SET time_zone = "+00:00";


/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8mb4 */;

--
-- Base de datos: `db_route77`
--

DELIMITER $$
--
-- Procedimientos
--
CREATE  PROCEDURE `CRUD_CATEGORIA` (IN `PI_COD_STATUS` INT(11), IN `PV_DESCRIPCION` VARCHAR(100), IN `PV_NOMBRE` VARCHAR(50), IN `PV_PORTADA` VARCHAR(200), IN `PI_CREADO_POR` BIGINT(20), IN `PI_MODIFICADO_POR` BIGINT(20), IN `PV_RUTA` VARCHAR(255), IN `MODO` CHAR(1), IN `COD` BIGINT(20))  BEGIN
START TRANSACTION;
	-- INSERT EN LA TABLA CATEGORIA
    IF MODO='I' THEN
     INSERT INTO TBL_CATEGORIA(COD_STATUS,DESCRIPCION,NOMBRE,PORTADA,RUTA,CREADO_POR,FECHA_CREACION) 
	  VALUES(PI_COD_STATUS,PV_DESCRIPCION,PV_NOMBRE,PV_PORTADA,PV_RUTA,PI_CREADO_POR,NOW());
	-- UPDATE EN LA TABLA CATEGORIA
     ELSEIF MODO='U' THEN
		UPDATE TBL_CATEGORIA 
        SET COD_STATUS=PI_COD_STATUS,DESCRIPCION=PV_DESCRIPCION, NOMBRE=PV_NOMBRE, PORTADA=PV_PORTADA,RUTA=PV_RUTA, MODIFICADO_POR=PI_MODIFICADO_POR,
        FECHA_MODIFICACION=NOW()
        WHERE COD_CATEGORIA = COD;
	-- VIEW EN LA TABLA CATEGORÍA
	ELSEIF MODO='V' THEN
		SELECT C.COD_CATEGORIA, C.NOMBRE, C.DESCRIPCION, C.PORTADA, C.DESCRIPCION, C.FECHA_CREACION,C.RUTA,C.CREADO_POR,C.FECHA_MODIFICACION,C.MODIFICADO_POR, C.COD_STATUS, S.DESCRIPCION AS STATUS
		FROM TBL_CATEGORIA C
        INNER JOIN TBL_STATUS S ON C.COD_STATUS = S.COD_STATUS
        WHERE C.COD_STATUS!=0;
	-- READ EN LA TABLA CATEGORÍA
     ELSEIF MODO='R' THEN
		SELECT C.COD_CATEGORIA, C.NOMBRE, C.DESCRIPCION, C.PORTADA, C.COD_STATUS, S.DESCRIPCION AS STATUS
        FROM TBL_CATEGORIA C 
        INNER JOIN TBL_STATUS S ON C.COD_STATUS = S. COD_STATUS
         WHERE C.COD_CATEGORIA = COD;
	-- DELETE EN LA TABLA CATEGORÍA (UNICAMENTE SE CAMBIA EL STATUS)
     ELSEIF MODO='D' THEN
		UPDATE TBL_CATEGORIA SET COD_STATUS = 0 WHERE COD_CATEGORIA =COD; 
	-- Valida insertar
    ELSEIF MODO='A' THEN
    SELECT * FROM TBL_CATEGORIA WHERE nombre = PV_NOMBRE;
    -- Valida update
    ELSEIF MODO='B' THEN
    SELECT * FROM TBL_CATEGORIA 
    WHERE nombre = PV_NOMBRE AND COD_CATEGORIA != COD;
     -- Valida DELETE
    ELSEIF MODO='F' THEN
    SELECT * FROM TBL_PRODUCTOS P WHERE P.COD_CATEGORIA = COD;
    END IF;
COMMIT;
END$$

CREATE  PROCEDURE `CRUD_CLIENTE` (IN `PV_NOMBRES` VARCHAR(25), IN `PV_APELLIDOS` VARCHAR(25), IN `PV_EMAIL` VARCHAR(35), IN `PV_CONTRASEÑA` VARCHAR(150), IN `PI_ROL` BIGINT(20), IN `PI_STATUS` INT(11), IN `PI_TELEFONO` INT(11), IN `PI_CREADO_POR` BIGINT(20), IN `PI_MODIFICADO_POR` BIGINT(20), IN `PC_MODO` CHAR(1), IN `PI_COD` BIGINT(20))  BEGIN
   START TRANSACTION;

     -- INSERT TABLAS PERSONAS Y CLIENTE
     IF PC_MODO ='I' THEN
     INSERT INTO TBL_PERSONAS(NOMBRES, APELLIDOS, EMAIL, CONTRASEÑA, COD_ROL, COD_STATUS, TELEFONO, CREADO_POR, FECHA_CREACION) 
     VALUES(PV_NOMBRES, PV_APELLIDOS, PV_EMAIL, PV_CONTRASEÑA, PI_ROL, PI_STATUS, PI_TELEFONO, PI_CREADO_POR, NOW());
     
    SELECT MAX(COD_PERSONA) INTO @PERSONA FROM TBL_PERSONAS;
 
     
     INSERT INTO TBL_CLIENTE(COD_PERSONA) 
     VALUES(@PERSONA);


   -- UPDATE TABLAS PERSONAS Y CLIENTE
     ELSEIF PC_MODO='U' THEN
     UPDATE TBL_PERSONAS
     SET NOMBRES=PV_NOMBRES, APELLIDOS=PV_APELLIDOS, EMAIL=PV_EMAIL, CONTRASEÑA=PV_CONTRASEÑA, COD_ROL=PI_ROL, COD_STATUS=PI_STATUS, TELEFONO=PI_TELEFONO,MODIFICADO_POR=PI_MODIFICADO_POR, FECHA_MODIFICACION=NOW() 
     WHERE COD_PERSONA = PI_COD;
    -- UPDATE sin contraseña
     ELSEIF PC_MODO='S' THEN
     UPDATE TBL_PERSONAS
     SET NOMBRES=PV_NOMBRES, APELLIDOS=PV_APELLIDOS, EMAIL=PV_EMAIL, COD_ROL=PI_ROL, COD_STATUS=PI_STATUS, TELEFONO=PI_TELEFONO,MODIFICADO_POR=PI_MODIFICADO_POR, FECHA_MODIFICACION=NOW() 
     WHERE COD_PERSONA = PI_COD;
     
     -- VIEW TABLAS PERSONAS Y CLIENTE
     ELSEIF PC_MODO='V' THEN
     SELECT P.COD_PERSONA, C.COD_CLIENTE, P.NOMBRES, P.APELLIDOS, P.EMAIL, P.TELEFONO, P.COD_STATUS, S.DESCRIPCION AS STATUS, 
			P.COD_ROL, R.DESCRIPCION AS ROL, P.FECHA_CREACION, P.FECHA_MODIFICACION, P.DATE_LOGIN 
			FROM TBL_CLIENTE C 
			INNER JOIN TBL_PERSONAS P ON P.COD_PERSONA=C.COD_PERSONA 
			INNER JOIN TBL_STATUS S ON S.COD_STATUS=P.COD_STATUS 
			INNER JOIN TBL_ROLES R ON R.COD_ROL=P.COD_ROL
			WHERE P.COD_STATUS!= 0;

       -- READ TABLAS PERSONAS Y CLIENTE
     ELSEIF PC_MODO='R' THEN
    SELECT P.COD_PERSONA, C.COD_CLIENTE, P.NOMBRES, P.APELLIDOS, P.EMAIL, P.TELEFONO, P.COD_STATUS, S.DESCRIPCION AS STATUS, P.COD_ROL, R.DESCRIPCION AS ROL, P.FECHA_CREACION, CONCAT(CR.NOMBRES,' ', CR.APELLIDOS) AS "CREADO_POR", P.FECHA_MODIFICACION, CONCAT(MO.NOMBRES,' ', MO.APELLIDOS) AS "MODIFICADO_POR", P.DATE_LOGIN FROM TBL_CLIENTE C INNER JOIN TBL_PERSONAS P ON P.COD_PERSONA=C.COD_PERSONA INNER JOIN TBL_STATUS S ON S.COD_STATUS=P.COD_STATUS INNER JOIN TBL_ROLES R ON R.COD_ROL=P.COD_ROL LEFT JOIN TBL_PERSONAS CR ON P.CREADO_POR=CR.COD_PERSONA LEFT JOIN TBL_PERSONAS MO ON P.MODIFICADO_POR=MO.COD_PERSONA
     WHERE P.COD_PERSONA=PI_COD;

      -- DELETE TABLAS PERSONAS Y CLIENTE (CAMBIA EL STATUS A 0 EN LA TABLA PERSONAS)
     ELSEIF PC_MODO='D' THEN
     UPDATE TBL_PERSONAS
     SET COD_STATUS=0 
     WHERE COD_PERSONA=PI_COD;
     -- VALIDACIÓN
     ELSEIF PC_MODO='A' THEN
     SELECT * FROM TBL_PERSONAS p 
	left join TBL_CLIENTE c on p.COD_PERSONA=c.COD_PERSONA
	WHERE p.email = PV_EMAIL;
    ELSEIF PC_MODO='B' THEN
    SELECT * FROM TBL_PERSONAS p
	LEFT JOIN TBL_CLIENTE c on p.COD_PERSONA=c.COD_PERSONA
	WHERE p.EMAIL = PV_EMAIL AND p.COD_PERSONA !=PI_COD;
    -- sql_cliente
      ELSEIF PC_MODO='C' THEN
      SELECT tp.COD_PERSONA, tp.NOMBRES, tp.APELLIDOS, tp.EMAIL, tp.TELEFONO
      FROM TBL_PERSONAS tp 
      WHERE tp.COD_PERSONA= PI_COD;
   END IF; 
COMMIT;
END$$

CREATE  PROCEDURE `CRUD_DETALLE_COMPRA` (IN `PI_COD_ORDEN` BIGINT(20), IN `PI_COD_PRODUCTO` BIGINT(20), IN `PD_PRECIO` DECIMAL(11,2), IN `PI_CANTIDAD` INT(11), `PC_MODO` CHAR(1), IN `PI_COD` BIGINT(20))  BEGIN
START TRANSACTION;
    -- INSERT DE LA TABLA DETALLE_COMPRA
    IF PC_MODO='I' THEN
     INSERT INTO  TBL_DETALLE_COMPRA(COD_ORDEN,COD_PRODUCTO,PRECIO,CANT_COMPRA) 
	  VALUES (PI_COD_ORDEN,PI_COD_PRODUCTO,PD_PRECIO,PI_CANTIDAD);

	-- UPDATE DE LA TABLA DETALLE_COMPRA

     ELSEIF PC_MODO='U' THEN
		UPDATE TBL_DETALLE_COMPRA
        SET COD_ORDEN=PI_COD_ORDEN,COD_PRODUCTO=PI_COD_PRODUCTO, PRECIO=PD_PRECIO, CANT_COMPRA=PI_CANTIDAD
        WHERE COD_DETALLE= PI_COD;
        
	-- VIEW DE LA TABLA DETALLE_COMPRA

	ELSEIF PC_MODO='V' THEN
	SELECT DC.*, P.NOMBRE
    FROM TBL_DETALLE_COMPRA DC
        INNER JOIN TBL_ORDEN_COMPRA OC ON DC.COD_ORDEN = OC.COD_ORDEN
		INNER JOIN TBL_PRODUCTOS P ON DC.COD_PRODUCTO = P.COD_PRODUCTO
        WHERE P.COD_STATUS != 0;

	-- READ DE LA TABLA DETALLE_COMPRA

    ELSEIF PC_MODO='R' THEN
	SELECT DC.*, P.NOMBRE
    FROM TBL_DETALLE_COMPRA DC
        INNER JOIN TBL_ORDEN_COMPRA OC ON DC.COD_ORDEN = OC.COD_ORDEN
		INNER JOIN TBL_PRODUCTOS P ON DC.COD_PRODUCTO = P.COD_PRODUCTO
        WHERE DC.COD_DETALLE=PI_COD;
          
	-- DELETE DE LA TABLA DETALLE_COMPRA

     ELSEIF PC_MODO='D' THEN
		DELETE FROM TBL_DETALLE_COMPRA WHERE COD_DETALLE =PI_COD; 
	END IF;
    COMMIT;
END$$

CREATE  PROCEDURE `CRUD_DETALLE_PEDIDO` (IN `PI_COD_PEDIDO` BIGINT(20), IN `PI_COD_PRODUCTO` BIGINT(20), IN `PD_PRECIO` DECIMAL(11,2), IN `PI_CANTIDAD` INT(11), IN `MODO` CHAR(1), IN `COD` BIGINT(20))  BEGIN
START TRANSACTION;
    -- INSERT DE LA TABLA DETALLE_PEDIDO
    IF MODO='I' THEN
     INSERT INTO  TBL_DETALLE_PEDIDO(COD_PEDIDO,COD_PRODUCTO,PRECIO,CANTIDAD) 
	  VALUES (PI_COD_PEDIDO,PI_COD_PRODUCTO,PD_PRECIO,PI_CANTIDAD);

	-- UPDATE DE LA TABLA DETALLE_PEDIDO

     ELSEIF MODO='U' THEN
		UPDATE TBL_DETALLE_PEDIDO
        SET COD_PEDIDO=PI_COD_PEDIDO,COD_PRODUCTO=PI_COD_PRODUCTO, PRECIO=PD_PRECIO, CANTIDAD=PI_CANTIDAD
        WHERE COD_DETALLE= COD;
        
	-- VIEW DE LA TABLA DETALLE_PEDIDO

	ELSEIF MODO='V' THEN
	SELECT DP.*, P.NOMBRE
    FROM TBL_DETALLE_PEDIDO DP
        INNER JOIN TBL_PEDIDO PE ON DP.COD_PEDIDO = PE.COD_PEDIDO
		INNER JOIN TBL_PRODUCTOS P ON DP.COD_PRODUCTO = P.COD_PRODUCTO
        WHERE P.COD_STATUS != 0;

	-- READ DE LA TABLA DETALLE_PEDIDO

    ELSEIF MODO='R' THEN
	SELECT DP.*, P.NOMBRE
    FROM TBL_DETALLE_PEDIDO  DP
        INNER JOIN TBL_PRODUCTOS P ON DP.COD_PRODUCTO = P.COD_PRODUCTO
INNER JOIN TBL_PEDIDO PE ON DP.COD_PEDIDO= PE.COD_PEDIDO
        WHERE DP.COD_PEDIDO=PI_COD_PEDIDO;
          
	-- DELETE DE LA TABLA DETALLE_PEDIDO

     ELSEIF MODO='D' THEN
		DELETE FROM TBL_DETALLE_PEDIDO WHERE COD_DETALLE =COD; 
	END IF;
    COMMIT;
END$$

CREATE  PROCEDURE `CRUD_EMPRESA` (IN `PV_NOMBRE_EMPRESA` VARCHAR(20), IN `PV_DIRECCION` VARCHAR(50), IN `PV_RAZON_SOCIAL` VARCHAR(255), IN `PV_EMAIL` VARCHAR(100), IN `PV_GERENTE_GENERAL` VARCHAR(30), IN `PI_COSTO_ENVIO` INT, IN `PV_RTN` VARCHAR(100), IN `PV_EMAIL_PEDIDOS` VARCHAR(100), IN `PV_TEL_EMPRESA` VARCHAR(50), IN `PV_CEL_EMPRESA` VARCHAR(50), IN `PV_CAT_SLIDER` VARCHAR(100), IN `PV_CAT_BANNER` VARCHAR(100), IN `PC_MODO` CHAR(1), IN `PI_COD` BIGINT(20))  BEGIN
START TRANSACTION;
	-- INSERT
    IF PC_MODO='I' THEN
     INSERT INTO TBL_EMPRESA(NOMBRE_EMPRESA,DIRECCION,RAZON_SOCIAL,EMAIL,GERENTE_GENERAL) 
	  VALUES(PV_NOMBRE_EMPRESA,PV_DIRECCION,PV_RAZON_SOCIAL,PV_EMAIL,PV_GERENTE_GENERAL);
	-- UPDATE 
     ELSEIF PC_MODO='U' THEN
		UPDATE TBL_EMPRESA
        SET NOMBRE_EMPRESA=PV_NOMBRE_EMPRESA,DIRECCION_FACTURA=PV_DIRECCION,RAZON_SOCIAL=PV_RAZON_SOCIAL,EMAIL_EMPRESA=PV_EMAIL,GERENTE_GENERAL=PV_GERENTE_GENERAL,
        COSTO_ENVIO=PI_COSTO_ENVIO,RTN=PV_RTN,EMAIL_PEDIDOS=PV_EMAIL_PEDIDOS,TEL_EMPRESA=PV_TEL_EMPRESA,CEL_EMPRESA=PV_CEL_EMPRESA,
        CATEGORIAS_SLIDER=PV_CAT_SLIDER,CATEGORIAS_BANNER=PV_CAT_BANNER
        WHERE COD_EMPRESA = PI_COD;
	-- VIEW
	ELSEIF PC_MODO='V' THEN
	SELECT U.*,T_E.TELEFONO
			FROM TBL_EMPRESA U 
			LEFT JOIN TBL_TELEFONO_EMPRESA T_E ON U.COD_EMPRESA = T_E.COD_EMPRESA;
	-- READ
     ELSEIF PC_MODO='R' THEN
		SELECT U.*,T_E.TELEFONO,R_S.DESCRIPCION,R_S.ENLACE
			FROM TBL_EMPRESA U 
			left JOIN TBL_TELEFONO_EMPRESA T_E ON U.COD_EMPRESA = T_E.COD_EMPRESA
			left JOIN TBL_REDES_SOCIALES R_S ON U.COD_EMPRESA = R_S.COD_EMPRESA
			WHERE U.COD_EMPRESA= PI_COD;
	-- DELETE
     -- ELSEIF MODO='D' THEN
		-- UPDATE EMPRESA SET EMAIL = 0 WHERE PI_COD_EMPRESA =PI_COD; 
	END IF;
COMMIT;
END$$

CREATE  PROCEDURE `CRUD_GENERO` (IN `PV_DESCRIPCION` VARCHAR(10), IN `PI_MODO` CHAR(1), IN `PI_COD` BIGINT(11))  BEGIN
	-- INSERT TABLA PARA GÉNERO
    IF PI_MODO='I' THEN
     INSERT INTO TBL_GENERO(DESCRIPCION) 
	  VALUES(PV_DESCRIPCION);
      -- UPDATE  TABLA PARA GÉNERO
     ELSEIF PI_MODO='U' THEN
		UPDATE TBL_GENERO
        SET DESCRIPCION=PV_DESCRIPCION 
        WHERE COD_GENERO = PI_COD;
        -- VIEW  TABLA PARA GÉNERO
	ELSEIF PI_MODO='V' THEN
		SELECT * FROM TBL_GENERO;
        -- READ  TABLA PARA GÉNERO
     ELSEIF PI_MODO='R' THEN
		SELECT COD_GENERO, DESCRIPCION FROM TBL_GENERO WHERE COD_GENERO=PI_COD;
     -- DELETE  TABLA PARA GÉNERO
     ELSEIF PI_MODO='D' THEN
		DELETE FROM TBL_GENERO WHERE COD_GENERO =PI_COD; 
	END IF;
END$$

CREATE  PROCEDURE `CRUD_IMG_PRODUCTO` (IN `PV_NOMBRE` VARCHAR(255), IN `MODO` CHAR(1), IN `COD` BIGINT(20))  BEGIN
START TRANSACTION;
	-- INSERT EN LA TABLA IMG
    IF MODO='I' THEN
    INSERT INTO TBL_IMG_PRODUCTO(COD_PRODUCTO,IMG) VALUES(COD,PV_NOMBRE);
	-- READ EN LA TABLA IMG
     ELSEIF MODO='R' THEN
		SELECT COD_PRODUCTO,IMG
		FROM TBL_IMG_PRODUCTO
		WHERE COD_PRODUCTO = COD;
	-- DELETE EN LA TABLA IMG 
     ELSEIF MODO='D' THEN
		DELETE FROM TBL_IMG_PRODUCTO 
		WHERE COD_PRODUCTO=COD AND IMG=PV_NOMBRE; 
	END IF;
COMMIT;
END$$

CREATE  PROCEDURE `CRUD_MODULOS` (IN `PV_NOMBRE` VARCHAR(50), IN `PT_DESCRIPCION` TEXT, IN `PI_COD_STATUS` INT(11), IN `PI_COD_ROL` BIGINT(20), IN `PC_MODO` CHAR(1), IN `PI_COD` BIGINT(20))  BEGIN
START TRANSACTION;
   #READ
   IF PC_MODO="R" THEN
      SELECT M.COD_MODULO,
             M.NOMBRE,
             M.DESCRIPCION,
             S.DESCRIPCION AS 'STATUS'
	  FROM TBL_MODULO M
      INNER JOIN TBL_STATUS S
      ON M.COD_STATUS = S.COD_STATUS WHERE M.COD_MODULO=PI_COD;
      
   #VIEW
   ELSEIF PC_MODO="V" THEN
      SELECT M.COD_MODULO,
             M.NOMBRE,
             M.DESCRIPCION,
             S.DESCRIPCION AS 'STATUS'
	  FROM TBL_MODULO M
      INNER JOIN TBL_STATUS S
      ON M.COD_STATUS = S.COD_STATUS WHERE M.COD_STATUS !=0;
      
   #INSERT
   ELSEIF PC_MODO="I" THEN
      INSERT INTO `TBL_MODULO`(NOMBRE,DESCRIPCION,COD_STATUS)
      VALUES(PV_NOMBRE,PT_DESCRIPCION, PI_COD_STATUS);
      
   #DELETE
   ELSEIF PC_MODO="D" THEN
      UPDATE `TBL_MODULO` SET COD_STATUS = 0 WHERE COD_MODULO = PI_COD;
   
   #UPDATE
   ELSEIF  PC_MODO="U" THEN
      UPDATE `TBL_MODULO` SET NOMBRE=PV_NOMBRE, DESCRIPCION = PT_DESCRIPCION, COD_STATUS = PI_COD_STATUS WHERE COD_MODULO =  PI_COD;
   END IF;
COMMIT;
END$$

CREATE  PROCEDURE `CRUD_ORDEN_COMPRA` (IN `PI_COD_PROVEEDOR` BIGINT(20), IN `PD_MONTO` DECIMAL(11,2), IN `PD_ISV` DECIMAL(11,2), IN `PI_FACTURA` INT(11), IN `PC_MODO` CHAR(1), IN `PI_CREADO_POR` BIGINT(20), IN `PI_COD` BIGINT(20))  BEGIN
START TRANSACTION;

	-- ABRE EL IF
	-- INSERT
	IF PC_MODO='I' THEN
		-- INSERTAR EN LA TABLA ORDEN COMPRA
		INSERT INTO TBL_ORDEN_COMPRA(COD_PROVEEDOR, MONTO,ISV, FECHA_COMPRA,CREADO_POR,NO_FACTURA) 
		VALUES(PI_COD_PROVEEDOR,PD_MONTO,PD_ISV, NOW(),PI_CREADO_POR,PI_FACTURA);
	-- UPDATE 
	ELSEIF PC_MODO='U' THEN
		-- ACTUALIZAR TABLA ORDEN COMPRA
		UPDATE TBL_ORDEN_COMPRA
		SET COD_PROVEEDOR=PI_COD_PROVEEDOR, MONTO=@TOTAL, ISV=PD_ISV
		WHERE COD_ORDEN= PI_COD;

		-- ACTUALIZAR TABLA DETALLE COMPRA
		UPDATE TBL_DETALLE_COMPRA
		SET COD_PRODUCTO=PI_COD_PRODUCTO, PRECIO=PD_PRECIO, CANT_COMPRA=PI_CANT_COMPRA
		WHERE COD_ORDEN = PI_COD AND COD_PRODUCTO =PI_COD_PRODUCTO;

	-- VIEW // VER TODOS LOS REGISTROS
	ELSEIF PC_MODO='V' THEN
		
		SELECT oc.*,p.NOMBRE_EMPRESA,date_format( oc.FECHA_COMPRA,'%Y/%m/%d') as "FECHA_COMPRA" FROM TBL_ORDEN_COMPRA oc 
		INNER JOIN TBL_PROVEEDORES p on p.COD_PROVEEDOR=oc.COD_PROVEEDOR;
		

	-- READ // VER ORDEN COMPRA DE ACUERDO AL COD - PI_COD
	ELSEIF PC_MODO='R' THEN
		SELECT dc.*,oc.*,pv.NOMBRE_EMPRESA,date_format( oc.FECHA_COMPRA,'%d-%m-%Y') as "FECHA_COMPRA" , CONCAT(p.NOMBRES,' ', p.APELLIDOS) AS "CREADO_POR",p.EMAIL,pr.NOMBRE as PRODUCTO,c.NOMBRE as CATEGORIA,pr.COD_BARRA from TBL_DETALLE_COMPRA dc
		INNER JOIN TBL_ORDEN_COMPRA oc on dc.COD_ORDEN=oc.COD_ORDEN
		INNER JOIN TBL_PROVEEDORES pv on oc.COD_PROVEEDOR=pv.COD_PROVEEDOR
		INNER JOIN TBL_PERSONAS p on oc.CREADO_POR=p.COD_PERSONA
		INNER JOIN TBL_PRODUCTOS pr on dc.COD_PRODUCTO=pr.COD_PRODUCTO
		INNER JOIN TBL_CATEGORIA c on c.COD_CATEGORIA=pr.COD_CATEGORIA
		where dc.COD_ORDEN=PI_COD;

	-- DELETE ORDEN COMPRA DE ACUERDO AL COD - PI_COD
	ELSEIF PC_MODO='D' THEN
		DELETE FROM TBL_ORDEN_COMPRA WHERE COD_ORDEN=PI_COD;
	 ELSEIF PC_MODO='A' THEN
		SELECT P.*,C.NOMBRE AS'CATEGORÍA',P.NOMBRE,P.DESCRIPCION,P.PRECIO,P.COD_STATUS,I.STOCK,I.CANT_VENTA,I.CANT_COMPRA,C.DESCRIPCION,S.DESCRIPCION AS 'STATUS'
        FROM TBL_PRODUCTOS P 
        INNER JOIN TBL_CATEGORIA C ON P.COD_CATEGORIA = C.COD_CATEGORIA
          INNER JOIN TBL_STATUS S ON P.COD_STATUS = S.COD_STATUS
          INNER JOIN TBL_INVENTARIO I ON P.COD_PRODUCTO= I.COD_PRODUCTO
		     WHERE P.COD_PRODUCTO= PI_COD and P.COD_STATUS!=0;
	END IF; 
	-- CIERRE EL IF
    /*SET @DC_CANTCOMPRADO=0;
    SET @DP_CANTVENDIDO=0;
    -- SUMA DE DE LA CANTIDAD DE PRODUCTOS COMPRADA 
    SELECT SUM(CANT_COMPRA) INTO @DC_CANTCOMPRADO  FROM TBL_DETALLE_COMPRA WHERE COD_PRODUCTO=PI_COD_PRODUCTO;
    
    -- SUMA DE DE LA CANTIDAD DE PRODUCTOS VENDIDA
    SELECT SUM(CANTIDAD) INTO @DP_CANTVENDIDO FROM TBL_DETALLE_PEDIDO WHERE COD_PRODUCTO=PI_COD_PRODUCTO;
    
    -- SI LA CANTIDAD VENDIDA ES NULL SE ASIGNA 0
    IF @DP_CANTVENDIDO IS NULL THEN
		SET @DP_CANTVENDIDO=0;
    END IF;
    
    -- TOTAL STOCK, CANTIDAD COMPRADA - CANTIDAD VENDIDA
	SELECT @DC_CANTCOMPRADO-@DP_CANTVENDIDO INTO @C_STOCK;
    SELECT @DC_CANTCOMPRADO,@DP_CANTVENDIDO, @C_STOCK;
	-- ACTUALIZAR TABLA INVENTARIO 
	UPDATE TBL_INVENTARIO
	SET STOCK=@C_STOCK,CANT_COMPRA=@DC_CANTCOMPRADO, CANT_VENTA=@DP_CANTVENDIDO
	WHERE COD_PRODUCTO=PI_COD_PRODUCTO;*/
COMMIT;
END$$

CREATE  PROCEDURE `CRUD_PEDIDO` (IN `PI_COD_PERSONA` BIGINT(20), IN `PD_MONTO` DECIMAL(11,2), IN `PD_COSTOENVIO` DECIMAL(11,2), IN `PI_COD_TIPO_PAGO` BIGINT(20), IN `PT_DIRECCON_ENVIO` TEXT, IN `PI_COD_ESTADO` INT(11), IN `PV_COD_TR_PAYPAL` VARCHAR(255), IN `PT_DATOS_PAYPAL` TEXT, IN `PI_MODIFICADO_POR` BIGINT(20), IN `PC_MODO` CHAR(1), IN `PI_COD` BIGINT(20))  BEGIN
START TRANSACTION;
   
	-- INSERT EN LA TABLA TBL_PEDIDO
    IF PC_MODO='I' THEN
     INSERT INTO TBL_PEDIDO(COD_PERSONA,MONTO,COSTOENVIO,COD_TIPO_PAGO,DIRECCION_ENVIO,
     COD_ESTADO,COD_TRANSACCION_PAYPAL, DATOS_PAYPAL,FECHA_CREACION)
	  VALUES(PI_COD_PERSONA, PD_MONTO, PD_COSTOENVIO, 
		PI_COD_TIPO_PAGO, PT_DIRECCON_ENVIO,PI_COD_ESTADO, PV_COD_TR_PAYPAL,PT_DATOS_PAYPAL,NOW());
        
-- UPDATE EN LA TABLA TBL_PEDIDO
     ELSEIF PC_MODO='U' THEN
		UPDATE TBL_PEDIDO 
        SET COD_PERSONA = PI_COD_PERSONA,
		 MONTO= @TOTAL, COSTOENVIO= PD_COSTOENVIO, COD_TIPO_PAGO= PI_COD_TIPO_PAGO, DIRECCION_ENVIO= PT_DIRECCON_ENVIO, 
         COD_ESTADO=PI_COD_ESTADO,MODIFICADO_POR= PI_MODIFICADO_POR, FECHA_MODIFICACION=NOW()
        WHERE COD_PEDIDO = PI_COD;
        
        
		-- ACTUALIZAR TABLA DETALLE PEDIDO
		UPDATE TBL_DETALLE_PEDIDO
		SET COD_PRODUCTO=PI_COD_PRODUCTO, PRECIO=@PRECIO, CANTIDAD=PI_CANTIDAD
		WHERE COD_PEDIDO = PI_COD AND COD_PRODUCTO =PI_COD_PRODUCTO;
        
	-- VIEW EN LA TABLA TBL_PEDIDO
	ELSEIF PC_MODO='V' THEN
		SELECT P.COD_PEDIDO, P.FECHA, P.MONTO, P.COSTOENVIO,P.COD_TRANSACCION_PAYPAL,P.REFERENCIA_COBRO, P.DIRECCION_ENVIO, P.CREADO_POR, P.FECHA_CREACION, P.MODIFICADO_POR, P.FECHA_MODIFICACION, PP.NOMBRES, PP.APELLIDOS, TP.COD_TIPO_PAGO,TP.DESCRIPCION AS 'TIPO PAGO' ,TE.DESCRIPCION AS 'TIPO ESTADO'
        FROM TBL_PEDIDO P 
        INNER JOIN TBL_PERSONAS PP ON P.COD_PERSONA = PP.COD_PERSONA 
        INNER JOIN TBL_TIPO_PAGO TP ON P.COD_TIPO_PAGO = TP.COD_TIPO_PAGO 
        INNER JOIN TBL_TIPO_ESTADO TE ON P.COD_ESTADO = TE.COD_ESTADO;

-- READ EN LA TABLA TBL_PEDIDO
     ELSEIF PC_MODO='R' THEN
		SELECT P.COD_PEDIDO, P.FECHA, P.MONTO, P.COSTOENVIO,P.COD_TRANSACCION_PAYPAL,P.REFERENCIA_COBRO,p.COD_TIPO_PAGO, P.DIRECCION_ENVIO, P.CREADO_POR, P.FECHA_CREACION, P.MODIFICADO_POR, P.FECHA_MODIFICACION, PP.NOMBRES, PP.APELLIDOS,TP.DESCRIPCION AS 'TIPO PAGO' ,TE.DESCRIPCION AS 'TIPO ESTADO'
        FROM TBL_PEDIDO P 
        INNER JOIN TBL_PERSONAS PP ON P.COD_PERSONA = PP.COD_PERSONA 
        INNER JOIN TBL_TIPO_PAGO TP ON P.COD_TIPO_PAGO = TP.COD_TIPO_PAGO 
        INNER JOIN TBL_TIPO_ESTADO TE ON P.COD_ESTADO = TE.COD_ESTADO
		WHERE P.COD_PEDIDO= PI_COD;
        
-- ESTADO EN LA TABLA TBL_PEDIDO
     ELSEIF PC_MODO='B' THEN
		UPDATE TBL_PEDIDO SET REFERENCIA_COBRO = PV_COD_TR_PAYPAL, COD_TIPO_PAGO =PI_COD_TIPO_PAGO,COD_ESTADO = PI_COD_ESTADO WHERE COD_PEDIDO = PI_COD; 
        ELSEIF PC_MODO='A' THEN
        UPDATE TBL_PEDIDO SET COD_ESTADO = PI_COD_ESTADO WHERE COD_PEDIDO = PI_COD;
		-- reembolsoPaypal  
		ELSEIF PC_MODO='C' THEN
		SELECT COD_PEDIDO, DATOS_PAYPAL FROM TBL_PEDIDO  
		WHERE COD_TRANSACCION_PAYPAL = PV_COD_TR_PAYPAL;
		-- sql_detalle
		ELSEIF PC_MODO='G' THEN
		SELECT p.COD_PRODUCTO, p.NOMBRE as producto, d.PRECIO, d.CANTIDAD
		FROM TBL_DETALLE_PEDIDO d
		INNER JOIN TBL_PRODUCTOS p ON d.COD_PRODUCTO = p.COD_PRODUCTO
		WHERE d.COD_PEDIDO = PI_COD;
	END IF;
COMMIT;
END$$

CREATE  PROCEDURE `CRUD_PERMISOS` (IN `PI_COD_ROL` BIGINT(20), IN `PI_COD_MODULO` BIGINT(20), IN `PI_R` INT(11), IN `PI_U` INT(11), IN `PI_W` INT(11), IN `PI_D` INT(11), IN `PC_MODO` CHAR(1), IN `PI_COD` BIGINT(20))  BEGIN
START TRANSACTION;
   #INSERT
   IF PC_MODO="I" THEN
      INSERT INTO `TBL_PERMISOS`(COD_ROL,COD_MODULO,R,W,U,D) 
      VALUES(PI_COD_ROL, PI_COD_MODULO, PI_R, PI_U, PI_W, PI_D);
      
   #READ
   ELSEIF PC_MODO="R" THEN
	   SELECT * FROM `TBL_PERMISOS` WHERE COD_ROL = PI_COD_ROL;
  
   #UPDATE
   ELSEIF PC_MODO="D" THEN
       /*DELETE FROM `TBL_PERMISOS` WHERE COD_ROL = PI_COD_ROL AND COD_MODULO = PI_COD_MODULO;
       INSERT INTO `TBL_PERMISOS`(COD_ROL,COD_MODULO,R,W,U,D) 
       VALUES(PI_COD_ROL, PI_COD_MODULO, PI_R, PI_U, PI_W, PI_D);*/
       DELETE FROM TBL_PERMISOS WHERE COD_ROL = PI_COD_ROL;

-- validación
    ELSEIF PC_MODO="A" THEN
    SELECT p.COD_ROL, p.COD_MODULO, m.NOMBRE as modulo, p.r, p.w, p.u, p.d 
    FROM TBL_PERMISOS p 
    INNER JOIN TBL_MODULO m ON p.COD_MODULO = m.COD_MODULO WHERE p.COD_ROL = PI_COD;
   END IF;
   COMMIT;
END$$

CREATE  PROCEDURE `CRUD_PRODUCTOS` (IN `PI_COD_CATEGORIA` BIGINT(20), IN `PV_COD_BARRA` VARCHAR(30), IN `PV_NOMBRE` VARCHAR(20), IN `PT_DESCRIPCION` TEXT, IN `PD_PRECIO` DECIMAL(11,2), IN `PV_RUTA` VARCHAR(255), IN `PI_CREADO_POR` BIGINT(20), IN `PI_MODIFICADO_POR` BIGINT(20), IN `PI_COD_STATUS` INT(11), IN `PI_CANT_MINIMA` INT(11), IN `MODO` CHAR(1), IN `COD` BIGINT(20))  BEGIN
START TRANSACTION;
	-- INSERT DE LA TABLA TBL_PRODUCTOS
     IF MODO='I' THEN
     INSERT INTO TBL_PRODUCTOS(COD_CATEGORIA,COD_BARRA,NOMBRE,DESCRIPCION,PRECIO,RUTA,CREADO_POR,FECHA_CREACION,COD_STATUS) 
	  VALUES(PI_COD_CATEGORIA,PV_COD_BARRA,PV_NOMBRE,PT_DESCRIPCION,PD_PRECIO,PV_RUTA,PI_CREADO_POR,NOW(),PI_COD_STATUS);
	-- INSERT DE LA TABLA TBL_INVENTARIO CON EL NUEVO PRODUCTO
    SELECT MAX(COD_PRODUCTO) INTO @CODPRODUCTO FROM TBL_PRODUCTOS;
	INSERT INTO TBL_INVENTARIO(COD_PRODUCTO,STOCK,CANT_VENTA,CANT_COMPRA,CANT_MINIMA)
    VALUES(@CODPRODUCTO,0,0,0,PI_CANT_MINIMA);
    
	-- UPDATE DE LA TABLA TBL_PRODUCTOS

     ELSEIF MODO='U' THEN
		UPDATE TBL_PRODUCTOS
        SET COD_CATEGORIA=PI_COD_CATEGORIA,COD_BARRA=PV_COD_BARRA,NOMBRE=PV_NOMBRE,DESCRIPCION=PT_DESCRIPCION,PRECIO=PD_PRECIO,RUTA=PV_RUTA,MODIFICADO_POR=PI_MODIFICADO_POR,FECHA_MODIFICACION=(NOW()),COD_STATUS=PI_COD_STATUS 
        WHERE COD_PRODUCTO = COD;
	UPDATE TBL_INVENTARIO
        SET CANT_MINIMA=PI_CANT_MINIMA
        WHERE COD_PRODUCTO=COD;
	-- VIEW DE LA TABLA TBL_PRODUCTOS

	ELSEIF MODO='V' THEN
	SELECT P.*,C.NOMBRE AS'CATEGORÍA',P.PRECIO,P.COD_STATUS,I.STOCK,I.CANT_MINIMA,S.DESCRIPCION AS 'STATUS'
        FROM TBL_PRODUCTOS P 
        INNER JOIN TBL_CATEGORIA C ON P.COD_CATEGORIA = C.COD_CATEGORIA
          INNER JOIN TBL_STATUS S ON P.COD_STATUS = S.COD_STATUS
          INNER JOIN TBL_INVENTARIO I ON P.COD_PRODUCTO = I.COD_PRODUCTO
        WHERE P.COD_STATUS != 0;

	-- READ DE LA TABLA TBL_PRODUCTOS

     ELSEIF MODO='R' THEN
	SELECT P.*,C.NOMBRE AS'CATEGORÍA',P.NOMBRE,P.DESCRIPCION,P.PRECIO,P.COD_STATUS,I.STOCK, I.CANT_MINIMA,C.DESCRIPCION AS 'DESC CATEGORIA',S.DESCRIPCION AS 'STATUS'
        FROM TBL_PRODUCTOS P 
        INNER JOIN TBL_CATEGORIA C ON P.COD_CATEGORIA = C.COD_CATEGORIA
          INNER JOIN TBL_STATUS S ON P.COD_STATUS = S.COD_STATUS
          INNER JOIN TBL_INVENTARIO I ON P.COD_PRODUCTO= I.COD_PRODUCTO
		     WHERE P.COD_PRODUCTO= COD;

	-- DELETE DE LA TABLA TBL_PRODUCTOS

     ELSEIF MODO='D' THEN
		UPDATE TBL_PRODUCTOS SET COD_STATUS = 0 WHERE COD_PRODUCTO =COD; 
	 ELSEIF MODO='A' THEN
     SELECT * FROM TBL_PRODUCTOS 
     WHERE COD_BARRA = PV_COD_BARRA or NOMBRE = PV_NOMBRE;
     ELSEIF MODO='B' THEN
     SELECT * FROM TBL_PRODUCTOS 
     WHERE COD_BARRA = PV_COD_BARRA AND COD_PRODUCTO != COD or NOMBRE = PV_NOMBRE AND COD_PRODUCTO != COD;
     ELSEIF MODO="H" THEN
      SELECT P.*,C.NOMBRE AS'CATEGORÍA',P.PRECIO,P.COD_STATUS,I.STOCK,I.CANT_MINIMA,S.DESCRIPCION AS 'STATUS'
        FROM TBL_PRODUCTOS P 
        INNER JOIN TBL_CATEGORIA C ON P.COD_CATEGORIA = C.COD_CATEGORIA
          INNER JOIN TBL_STATUS S ON P.COD_STATUS = S.COD_STATUS
          INNER JOIN TBL_INVENTARIO I ON P.COD_PRODUCTO = I.COD_PRODUCTO
        WHERE P.COD_STATUS != 0 AND I.STOCK<=I.CANT_MINIMA;
    END IF;
    COMMIT;
END$$

CREATE  PROCEDURE `CRUD_PRODUCTOSTIENDA` (IN `PI_COD_CATEGORIA` BIGINT(20), IN `PI_CANT` BIGINT(20), IN `PV_OPTIONS` VARCHAR(100), IN `PC_MODO` CHAR(1))  BEGIN
START TRANSACTION;
   #READ
   IF PC_MODO="V" THEN
   	IF PV_OPTIONS="r" THEN
      SELECT p.COD_PRODUCTO,
                    p.COD_BARRA,
                    p.NOMBRE,
                    p.DESCRIPCION,
                    p.COD_CATEGORIA,
                    c.NOMBRE as CATEGORIA,
                    p.PRECIO,
                    i.STOCK,
                    p.RUTA
                        FROM TBL_PRODUCTOS p 
                        INNER JOIN TBL_CATEGORIA c ON p.COD_CATEGORIA = c.COD_CATEGORIA
                        INNER JOIN TBL_INVENTARIO i ON p.COD_PRODUCTO = i.COD_PRODUCTO
                        WHERE p.COD_STATUS = 1  AND p.COD_CATEGORIA = PI_COD_CATEGORIA
                        ORDER BY RAND() LIMIT PI_CANT;
                 ELSEIF PV_OPTIONS="a" THEN
                       SELECT p.COD_PRODUCTO,
                    p.COD_BARRA,
                    p.NOMBRE,
                    p.DESCRIPCION,
                    p.COD_CATEGORIA,
                    c.NOMBRE as CATEGORIA,
                    p.PRECIO,
                    i.STOCK,
                    p.RUTA
                        FROM TBL_PRODUCTOS p 
                        INNER JOIN TBL_CATEGORIA c ON p.COD_CATEGORIA = c.COD_CATEGORIA
                        INNER JOIN TBL_INVENTARIO i ON p.COD_PRODUCTO = i.COD_PRODUCTO
                        WHERE p.COD_STATUS = 1  AND p.COD_CATEGORIA = PI_COD_CATEGORIA
                        ORDER BY p.COD_PRODUCTO ASC LIMIT PI_CANT;
                        ELSE
                        SELECT p.COD_PRODUCTO,
                    p.COD_BARRA,
                    p.NOMBRE,
                    p.DESCRIPCION,
                    p.COD_CATEGORIA,
                    c.NOMBRE as CATEGORIA,
                    p.PRECIO,
                    i.STOCK,
                    p.RUTA
                        FROM TBL_PRODUCTOS p 
                        INNER JOIN TBL_CATEGORIA c ON p.COD_CATEGORIA = c.COD_CATEGORIA
                        INNER JOIN TBL_INVENTARIO i ON p.COD_PRODUCTO = i.COD_PRODUCTO
                        WHERE p.COD_STATUS = 1  AND p.COD_CATEGORIA = PI_COD_CATEGORIA
                        ORDER BY p.COD_PRODUCTO DESC LIMIT PI_CANT;
                        END IF;
       END IF;
COMMIT;
END$$

CREATE  PROCEDURE `CRUD_PROVEEDOR` (IN `PV_NOMBRES` VARCHAR(25), IN `PV_APELLIDOS` VARCHAR(25), IN `PV_EMAIL` VARCHAR(35), IN `PI_STATUS` INT(11), IN `PI_ROL` BIGINT(11), IN `PI_TELEFONO` INT(11), IN `PV_NOM_EMPRESA` VARCHAR(50), IN `PI_RTN` INT(20), IN `PV_UBICACION` VARCHAR(50), IN `PI_CREADO_POR` BIGINT(20), IN `PI_MODIFICADO_POR` BIGINT(20), IN `PC_MODO` CHAR(1), IN `PI_COD` BIGINT(20))  BEGIN
START TRANSACTION;
     -- INSERT
    IF PC_MODO='I' THEN
     INSERT INTO TBL_PERSONAS(NOMBRES, APELLIDOS, EMAIL,  COD_STATUS,COD_ROL, TELEFONO,CREADO_POR, FECHA_CREACION) 
	  VALUES(PV_NOMBRES, PV_APELLIDOS, PV_EMAIL, PI_STATUS,PI_ROL, PI_TELEFONO,PI_CREADO_POR, NOW());
     -- SELECCIONAR EL CODIGO MAXIMO INSERTADO
		SELECT MAX(COD_PERSONA) INTO @PERSONA FROM TBL_PERSONAS;
     
     INSERT INTO TBL_PROVEEDORES(COD_PERSONA,NOMBRE_EMPRESA,RTN,UBICACION) 
	  VALUES(@PERSONA,PV_NOM_EMPRESA,PI_RTN,PV_UBICACION);
     
     -- UPDATE 
     ELSEIF PC_MODO='U' THEN
     UPDATE TBL_PERSONAS
     SET NOMBRES=PV_NOMBRES, APELLIDOS=PV_APELLIDOS,COD_ROL=PI_ROL, EMAIL=PV_EMAIL, COD_STATUS=PI_STATUS, TELEFONO=PI_TELEFONO, MODIFICADO_POR=PI_MODIFICADO_POR, FECHA_MODIFICACION=NOW()
     WHERE COD_PERSONA = PI_COD;
     
	UPDATE TBL_PROVEEDORES
     SET NOMBRE_EMPRESA=PV_NOM_EMPRESA, RTN=PI_RTN, UBICACION=PV_UBICACION
     WHERE COD_PERSONA = PI_COD;
     -- VIEW
ELSEIF PC_MODO='V' THEN
    SELECT PR.COD_PERSONA, PR.COD_PROVEEDOR, PR.NOMBRE_EMPRESA,PR.RTN,PR.UBICACION, P.NOMBRES, P.APELLIDOS, P.EMAIL, P.TELEFONO, P.COD_STATUS FROM TBL_PROVEEDORES PR 
      INNER JOIN TBL_PERSONAS P ON            P.COD_PERSONA=PR.COD_PERSONA 
      WHERE P.COD_STATUS>0;
       -- READ
     ELSEIF PC_MODO='R' THEN
SELECT PV.COD_PERSONA, PV.COD_PROVEEDOR, PV.NOMBRE_EMPRESA,PV.RTN,PV.UBICACION, P.NOMBRES, P.APELLIDOS, P.EMAIL, P.TELEFONO, P.COD_STATUS, P.FECHA_CREACION, P.FECHA_MODIFICACION,CONCAT(C.NOMBRES,' ',C.APELLIDOS) AS "CREADO_POR",CONCAT(M.NOMBRES,' ',M.APELLIDOS) AS "MODIFICADO_POR"
 FROM TBL_PROVEEDORES PV 
      INNER JOIN TBL_PERSONAS P ON P.COD_PERSONA=PV.COD_PERSONA 
      INNER JOIN TBL_PERSONAS C on P.CREADO_POR=C.COD_PERSONA 
	  LEFT JOIN TBL_PERSONAS M on P.MODIFICADO_POR=M.COD_PERSONA
      WHERE P.COD_STATUS>0 AND P.COD_PERSONA=PI_COD;
      -- DELETE
     ELSEIF PC_MODO='D' THEN
    UPDATE TBL_PERSONAS
      SET COD_STATUS=0 
      WHERE COD_PERSONA=PI_COD;   
      -- validación insert
      ELSEIF PC_MODO='A' THEN
      SELECT * FROM TBL_PERSONAS p
	  left join TBL_PROVEEDORES pr on p.COD_PERSONA=pr.COD_PERSONA
	  WHERE p.email = PV_EMAIL or pr.RTN = PI_RTN;
      -- validación update
      ELSEIF PC_MODO='B' THEN
      SELECT * FROM TBL_PERSONAS p
	  left join TBL_PROVEEDORES pr on p.COD_PERSONA=pr.COD_PERSONA
	WHERE  p.email =  PV_EMAIL and p.COD_PERSONA != PI_COD or pr.RTN = PI_RTN AND p.COD_PERSONA !=PI_COD; 
      END IF;
COMMIT;
END$$

CREATE  PROCEDURE `CRUD_REDES_SOCIALES` (IN `PI_COD_EMPRESA` BIGINT(20), IN `PC_DESCRIPCION` VARCHAR(15), IN `PC_ENLACE` VARCHAR(100), IN `PC_MODO` CHAR(1), IN `PI_COD` BIGINT(20))  BEGIN
START TRANSACTION;
	-- INSERT
    IF PC_MODO='I' THEN
     INSERT INTO TBL_REDES_SOCIALES(COD_EMPRESA,DESCRIPCION,ENLACE) 
	  VALUES(PI_COD_EMPRESA,PC_DESCRIPCION,PC_ENLACE);
	-- UPDATE 
     ELSEIF PC_MODO='U' THEN
		UPDATE TBL_REDES_SOCIALES 
        SET COD_EMPRESA=PI_COD_EMPRESA,DESCRIPCION=PC_DESCRIPCION,ENLACE=PC_ENLACE 
        WHERE COD_RED_SOCIAL = PI_COD;
	-- VIEW
	ELSEIF PC_MODO='V' THEN
		SELECT U.COD_RED_SOCIAL,U.COD_EMPRESA,U.DESCRIPCION,U.ENLACE,
			E.NOMBRE_EMPRESA
			FROM TBL_REDES_SOCIALES U 
			LEFT JOIN TBL_EMPRESA E ON U.COD_EMPRESA = E.COD_EMPRESA;
			
	-- READ
     ELSEIF PC_MODO='R' THEN
		SELECT U.COD_RED_SOCIAL,U.COD_EMPRESA,U.DESCRIPCION,U.ENLACE,
			E.NOMBRE_EMPRESA
			FROM TBL_REDES_SOCIALES U 
			INNER JOIN TBL_EMPRESA E ON U.COD_EMPRESA = E.COD_EMPRESA
			WHERE U.COD_RED_SOCIAL= PI_COD;
	-- DELETE
	ELSEIF PC_MODO='D' THEN
		  DELETE FROM TBL_REDES_SOCIALES WHERE COD_RED_SOCIAL =PI_COD;
	-- Valida insert
    ELSEIF PC_MODO='A' THEN
    SELECT * from TBL_REDES_SOCIALES 
    where ENLACE =PC_ENLACE or DESCRIPCION=PC_DESCRIPCION;
    END IF;
    COMMIT;
END$$

CREATE  PROCEDURE `CRUD_REEMBOLSO` (IN `PI_COD_PEDIDO` BIGINT(20), IN `PT_OBSERVACION` TEXT, IN `PV_STATUS` VARCHAR(255), IN `PI_COD_TRANSACCION` VARCHAR(255), IN `PT_DATOS_REEMBOLSO` TEXT, IN `PC_MODO` CHAR(1))  BEGIN
START TRANSACTION;
	-- INSERT EN LA TABLA TBL_PEDIDO
    IF PC_MODO='I' THEN
     INSERT INTO TBL_REEMBOLSO(COD_PEDIDO,COD_TRANSACCION,DATOS_REEMBOLSO,OBSERVACION,STATUS)        
     VALUES(PI_COD_PEDIDO,PI_COD_TRANSACCION,PT_DATOS_REEMBOLSO,PT_OBSERVACION,PV_STATUS); 
	END IF;
COMMIT;
END$$

CREATE  PROCEDURE `CRUD_ROLES` (IN `PV_NOM_ROL` VARCHAR(20), IN `PT_DESCRIPCION` TEXT, IN `PI_COD_STATUS` INT(11), IN `PC_MODO` CHAR(1), IN `PI_COD` BIGINT(20))  BEGIN
declare whereAdmin varchar(20);

START TRANSACTION;
set whereAdmin="";
   #INSERT
   IF PC_MODO="I" THEN
	   INSERT INTO `TBL_ROLES`(NOM_ROL, DESCRIPCION, COD_STATUS)

	   VALUES(PV_NOM_ROL, PT_DESCRIPCION, PI_COD_STATUS);
       
   #VIEW ALL
   ELSEIF PC_MODO="V" THEN
		IF PI_COD!=1 then
			SELECT * FROM TBL_ROLES WHERE COD_STATUS != 0 and COD_ROL != 1;
		else
        SELECT * FROM TBL_ROLES WHERE COD_STATUS != 0;
		END IF;
   #READ
   ELSEIF PC_MODO="R" THEN
	 /*SELECT R.COD_ROL,
			R.NOM_ROL,
			R.DESCRIPCION,
			S.DESCRIPCION AS 'STATUS'
	  FROM `TBL_ROLES` R
      INNER JOIN `TBL_STATUS` S
      ON R.COD_STATUS = S.COD_STATUS WHERE R.COD_ROL = PI_COD;*/
      SELECT * FROM TBL_ROLES WHERE COD_ROL = PI_COD;
     
   #UPDATE
   ELSEIF PC_MODO="U" THEN
     UPDATE `TBL_ROLES` SET NOM_ROL = PV_NOM_ROL, DESCRIPCION = PT_DESCRIPCION, COD_STATUS = PI_COD_STATUS WHERE COD_ROL = PI_COD;

   #DELETE
   ELSEIF PC_MODO="D" THEN
     UPDATE `TBL_ROLES` SET COD_STATUS = 0 WHERE COD_ROL = PI_COD;
     
	#CRUD DE INSERT ROL PRIMERA CONDICION DE VERIFICACION
    ELSEIF PC_MODO = "A" THEN
    SELECT * FROM TBL_ROLES WHERE NOM_ROL = PV_NOM_ROL;
    
    #CRUD DE UPDATE ROL PRIMERA CONDICION DE VERIFICACION
    ELSEIF PC_MODO = "B" THEN
    SELECT * FROM TBL_ROLES WHERE NOM_ROL = PV_NOM_ROL AND COD_ROL != PI_COD;
    
    #CRUD DE DELETE ROL PRIMERA CONDICION DE VERIFICACION
    ELSEIF PC_MODO = "C" THEN
    SELECT * FROM TBL_PERSONAS WHERE COD_ROL = PI_COD;
   END IF;
   COMMIT;
END$$

CREATE  PROCEDURE `CRUD_STATUS` (IN `PV_DESCRIPCION` VARCHAR(20), IN `MODO` CHAR(1), IN `COD` BIGINT(20))  BEGIN
START TRANSACTION;
	-- INSERT
    IF MODO='I' THEN
     INSERT INTO TBL_STATUS(DESCRIPCION) 
	  VALUES(PV_DESCRIPCION);
	-- UPDATE 
     ELSEIF MODO='U' THEN
		UPDATE TBL_STATUS 
        SET DESCRIPCION=PV_DESCRIPCION
        WHERE COD_STATUS = COD;
	-- VIEW
	ELSEIF MODO='V' THEN
		SELECT COD_STATUS, DESCRIPCION 
		FROM TBL_STATUS;
	-- READ
    -- READ
     ELSEIF MODO='R' THEN
		SELECT COD_STATUS,DESCRIPCION
        FROM TBL_STATUS 
         WHERE COD_STATUS = COD;
	-- DELETE
     ELSEIF MODO='D' THEN
		DELETE FROM TBL_STATUS WHERE COD_STATUS =COD;
	END IF;
COMMIT;
END$$

CREATE  PROCEDURE `CRUD_SUCURSAL` (IN `PV_NOMBRE` VARCHAR(15), IN `PV_DIRECCION` VARCHAR(50), IN `PC_MODO` CHAR(1), IN `PI_COD` BIGINT(11))  BEGIN
	-- INSERT EN TABLA SUCURSAL
    IF PC_MODO='I' THEN
     INSERT INTO TBL_SUCURSAL(NOMBRE, DIRECCION) 
	  VALUES(PV_NOMBRE, PV_DIRECCION);
      -- UPDATE EN TABLA SUCURSAL 
     ELSEIF PC_MODO='U' THEN
	UPDATE TBL_SUCURSAL
        SET NOMBRE=PV_NOMBRE,DIRECCION=PV_DIRECCION 
        WHERE COD_SUCURSAL = PI_COD;
        -- VIEW EN TABLA SUCURSAL
	ELSEIF PC_MODO='V' THEN
		SELECT * FROM TBL_SUCURSAL;
        -- READ EN TABLA SUCURSAL
     ELSEIF PC_MODO='R' THEN
		SELECT COD_SUCURSAL, NOMBRE, DIRECCION FROM TBL_SUCURSAL WHERE COD_SUCURSAL=PI_COD;
     -- DELETE TBL_SUCURSAL EN TBL_SUCURSAL
     ELSEIF PC_MODO='D' THEN
		DELETE FROM TBL_SUCURSAL WHERE COD_SUCURSAL=PI_COD; 
        -- VALIDA INSERT
      ELSEIF PC_MODO='A' THEN
      SELECT * FROM tbl_SUCURSAL WHERE NOMBRE  = PV_NOMBRE;
	-- valida update
    ELSEIF PC_MODO='B' THEN
    SELECT * FROM TBL_SUCURSAL
	WHERE NOMBRE=PV_NOMBRE and COD_SUCURSAL!=PI_COD;
    END IF;
END$$

CREATE  PROCEDURE `CRUD_TCATEGORIA` (IN `PI_COD_STATUS` INT(11), IN `PV_DESCRIPCION` VARCHAR(100), IN `PV_NOMBRE` VARCHAR(50), IN `PV_PORTADA` VARCHAR(200), IN `PI_CREADO_POR` BIGINT(20), IN `PI_MODIFICADO_POR` BIGINT(20), IN `PV_RUTA` VARCHAR(255), IN `M_CATEGORIAS` INT(10), IN `MODO` CHAR(1), IN `COD` BIGINT(20))  BEGIN
START TRANSACTION;
	-- INSERT EN LA TABLA CATEGORIA
    IF MODO='I' THEN
     INSERT INTO TBL_CATEGORIA(COD_STATUS,DESCRIPCION,NOMBRE,PORTADA,PV_RUTA,CREADO_POR,FECHA_CREACION) 
	  VALUES(PI_COD_STATUS,PV_DESCRIPCION,PV_NOMBRE,PV_PORTADA,RUTA,PI_CREADO_POR,NOW());
	-- UPDATE EN LA TABLA CATEGORIA
     ELSEIF MODO='U' THEN
		UPDATE TBL_CATEGORIA 
        SET COD_STATUS=PI_COD_STATUS,DESCRIPCION=PV_DESCRIPCION, NOMBRE=PV_NOMBRE, PORTADA=PV_PORTADA,RUTA=PV_RUTA, MODIFICADO_POR=PI_MODIFICADO_POR,
        FECHA_MODIFICACION=NOW()
        WHERE COD_CATEGORIA = COD;
	-- VIEW EN LA TABLA CATEGORÍA
	ELSEIF MODO='V' THEN
		SELECT COD_CATEGORIA, NOMBRE, DESCRIPCION, PORTADA,RUTA
	    FROM TBL_CATEGORIA WHERE COD_STATUS=1 AND COD_CATEGORIA IN (M_CATEGORIAS);
            ELSEIF MODO='M' THEN
    SELECT c.COD_CATEGORIA, c.NOMBRE, c.PORTADA, c.RUTA, count(p.COD_CATEGORIA) AS cantidad
				FROM TBL_PRODUCTOS p 
				INNER JOIN TBL_CATEGORIA c
				ON p.COD_CATEGORIA = c.COD_CATEGORIA
				WHERE c.COD_STATUS = 1 and p.COD_STATUS=1
				GROUP BY p.COD_CATEGORIA, c.COD_CATEGORIA;
	-- READ EN LA TABLA CATEGORÍA
     ELSEIF MODO='R' THEN
		SELECT C.COD_CATEGORIA, C.NOMBRE, C.DESCRIPCION, C.PORTADA, C.COD_STATUS, S.DESCRIPCION AS STATUS
        FROM TBL_CATEGORIA C 
        INNER JOIN TBL_STATUS S ON C.COD_STATUS = S. COD_STATUS
         WHERE C.COD_CATEGORIA = COD;
	-- DELETE EN LA TABLA CATEGORÍA (UNICAMENTE SE CAMBIA EL STATUS)
     ELSEIF MODO='D' THEN
		UPDATE TBL_CATEGORIA SET COD_STATUS = 0 WHERE COD_CATEGORIA =COD; 
        -- VIEW EN LA TABLA CATEGORÍA
ELSEIF MODO='J' THEN
    SELECT c.COD_CATEGORIA, c.NOMBRE, c.PORTADA, c.RUTA
				FROM TBL_CATEGORIA c
				WHERE c.COD_STATUS = 1;
	END IF;
COMMIT;
END$$

CREATE  PROCEDURE `CRUD_TELEFONO_EMPRESA` (IN `PI_COD_EMPRESA` BIGINT(20), IN `PV_TELEFONO` VARCHAR(15), IN `PC_MODO` CHAR(1), IN `PI_COD` BIGINT(20))  BEGIN
START TRANSACTION;
	-- INSERT
    IF PC_MODO='I' THEN
     INSERT INTO TBL_TELEFONO_EMPRESA(COD_EMPRESA,TELEFONO) 
	  VALUES(PI_COD_EMPRESA,PV_TELEFONO);
	-- UPDATE 
     ELSEIF PC_MODO='U' THEN
		UPDATE TBL_TELEFONO_EMPRESA 
        SET COD_EMPRESA=PI_COD_EMPRESA,TELEFONO=PV_TELEFONO 
        WHERE COD_TELEFONO_EMPRESA = PI_COD;
	-- VIEW
	ELSEIF PC_MODO='V' THEN
		SELECT U.COD_TELEFONO_EMPRESA,U.COD_EMPRESA,U.TELEFONO,
			I_E.NOMBRE_EMPRESA
			FROM TBL_TELEFONO_EMPRESA U 
			LEFT JOIN TBL_EMPRESA I_E ON U.COD_EMPRESA = I_E.COD_EMPRESA;
			
	-- READ
     ELSEIF PC_MODO='R' THEN
		SELECT U.COD_TELEFONO_EMPRESA,U.COD_EMPRESA,U.TELEFONO,
			I_E.NOMBRE_EMPRESA
			FROM TBL_TELEFONO_EMPRESA U 
			INNER JOIN TBL_EMPRESA I_E ON U.COD_EMPRESA = I_E.COD_EMPRESA
			WHERE U.COD_TELEFONO_EMPRESA= PI_COD;
	 -- DELETE
	ELSEIF PC_MODO='D' THEN
		 DELETE FROM  TBL_TELEFONO_EMPRESA WHERE COD_TELEFONO_EMPRESA =PI_COD; 
     -- VALIDA INSERT
     ELSEIF PC_MODO='A' THEN
     SELECT * from TBL_TELEFONO_EMPRESA 
     where TELEFONO=PV_TELEFONO;
     -- VALIDA UPDATE
     ELSEIF PC_MODO='B' THEN
     SELECT * from TBL_TELEFONO_EMPRESA 
     where TELEFONO =PV_TELEFONO and COD_TELEFONO_EMPRESA!=PI_COD;
	END IF;
COMMIT;
END$$

CREATE  PROCEDURE `CRUD_TIPOESTADO` (IN `PV_DESCRIPCION` VARCHAR(50), IN `PC_MODO` CHAR(1), IN `PI_COD` BIGINT(20))  BEGIN
START TRANSACTION;
	-- INSERT EN LA TABLA TBL_TIPO_ESTADO
    IF PC_MODO='I' THEN
     INSERT INTO TBL_TIPO_ESTADO ( DESCRIPCION) 
	  VALUES(PV_DESCRIPCION);

-- UPDATE EN LA TABLA TBL_TIPO_ESTADO
     ELSEIF PC_MODO='U' THEN
		UPDATE TBL_TIPO_ESTADO 
        SET  DESCRIPCION =PV_DESCRIPCION
        WHERE COD_ESTADO = PI_COD;

	-- VIEW EN LA TABLA TBL_TIPO_ESTADO
	ELSEIF PC_MODO='V' THEN
		SELECT COD_ESTADO, DESCRIPCION
		FROM TBL_TIPO_ESTADO;

-- READ EN LA TABLA TBL_TIPO_ESTADO
     ELSEIF PC_MODO='R' THEN
		SELECT COD_ESTADO, DESCRIPCION
		FROM TBL_TIPO_ESTADO
		WHERE COD_ESTADO=PI_COD;

-- DELETE EN LA TABLA TBL_TIPO_ESTADO
     ELSEIF PC_MODO='D' THEN
		DELETE FROM TBL_TIPO_ESTADO WHERE COD_ESTADO =PI_COD; 
	END IF;
COMMIT;
END$$

CREATE  PROCEDURE `CRUD_TIPOPAGO` (IN `PV_DESCRIPCION` VARCHAR(15), IN `PV_TIPO_PAGO` VARCHAR(100), IN `PI_COD_STATUS` INT(11), IN `PC_MODO` CHAR(1), IN `PI_COD` BIGINT(20))  BEGIN
START TRANSACTION;
	-- INSERT EN LA TABLA TBL_TIPO_PAGO
    IF PC_MODO='I' THEN
     INSERT INTO TBL_TIPO_PAGO (DESCRIPCION, 
		TIPO_PAGO, COD_STATUS) 
			  VALUES(PV_DESCRIPCION, 
		PV_TIPO_PAGO, PI_COD_STATUS);

-- UPDATE EN LA TABLA TBL_TIPO_PAGO
     ELSEIF PC_MODO='U' THEN
		UPDATE TBL_TIPO_PAGO 
        SET  DESCRIPCION =PV_DESCRIPCION ,TIPO_PAGO =PV_TIPO_PAGO, COD_STATUS =PI_COD_STATUS
        WHERE COD_TIPO_PAGO = PI_COD;
	-- VIEW EN LA TABLA TBL_TIPO_PAGO
	ELSEIF PC_MODO='V' THEN
		SELECT TP.COD_TIPO_PAGO, TP.DESCRIPCION, TP.TIPO_PAGO , 
S.DESCRIPCION AS STATUS, TP.COD_STATUS
        FROM TBL_TIPO_PAGO TP 
        INNER JOIN TBL_STATUS S ON TP.COD_STATUS = S. COD_STATUS;

-- READ EN LA TABLA TBL_TIPO_PAGO
     ELSEIF PC_MODO='R' THEN
		SELECT TP.COD_TIPO_PAGO, TP.DESCRIPCION, TP.TIPO_PAGO , 
S.DESCRIPCION AS COD_STATUS
        FROM TBL_TIPO_PAGO TP 
        INNER JOIN TBL_STATUS S ON TP.COD_STATUS = S. COD_STATUS
			WHERE TP.COD_TIPO_PAGO= PI_COD;
            
-- DELETE EN LA TABLA TBL_TIPO_PAGO
     ELSEIF PC_MODO='D' THEN
		UPDATE TBL_TIPO_PAGO SET COD_STATUS = 0 WHERE COD_TIPO_PAGO =PI_COD;
	ELSEIF PC_MODO='A' THEN
        SELECT * FROM TBL_TIPO_PAGO WHERE COD_STATUS != 0;
	END IF;
COMMIT;
END$$

CREATE  PROCEDURE `CRUD_TPRODUCTO` (IN `PI_COD_CATEGORIA` INT(11), IN `PV_RUTA` VARCHAR(255), IN `CANT` INT(11), IN `PV_OPTION` VARCHAR(200), IN `MODO` CHAR(1), IN `COD` BIGINT(20))  BEGIN
START TRANSACTION;
	-- INSERT EN LA TABLA CATEGORIA
    IF MODO='V' THEN
    SELECT p.COD_PRODUCTO,
		p.COD_BARRA,
		p.NOMBRE,
		p.DESCRIPCION,
		p.COD_CATEGORIA,
		c.NOMBRE as CATEGORIA,
		p.PRECIO,
		i.STOCK,
		p.RUTA,
        p.COD_STATUS
FROM TBL_PRODUCTOS p 
INNER JOIN TBL_CATEGORIA c ON p.COD_CATEGORIA = c.COD_CATEGORIA
 INNER JOIN TBL_INVENTARIO i ON p.COD_PRODUCTO = i.COD_PRODUCTO
WHERE p.COD_STATUS = 1 /* and p.stock>0 */ ORDER BY p.COD_PRODUCTO DESC LIMIT 12;
	-- UPDATE EN LA TABLA CATEGORIA
     ELSEIF MODO='C' THEN
		SELECT p.COD_PRODUCTO,
			p.COD_BARRA,
			p.NOMBRE,
			p.DESCRIPCION,
			p.COD_CATEGORIA,
			c.NOMBRE as CATEGORIA,
			p.PRECIO,
			i.STOCK,
			p.RUTA 
            FROM TBL_PRODUCTOS p 
            INNER JOIN TBL_CATEGORIA c
            ON p.COD_CATEGORIA = c.COD_CATEGORIA
            INNER JOIN TBL_INVENTARIO i ON p.COD_PRODUCTO = i.COD_PRODUCTO
            WHERE p.COD_STATUS != 0  AND p.COD_CATEGORIA=PI_COD_CATEGORIA AND c.ruta=PV_RUTA;
	-- VIEW EN LA TABLA CATEGORÍA
	ELSEIF MODO='P' THEN
		SELECT p.COD_PRODUCTO,
			p.COD_BARRA,
			p.NOMBRE,
			p.DESCRIPCION,
			p.COD_CATEGORIA,
			c.NOMBRE as CATEGORIA,
			p.PRECIO,
			i.STOCK,
			p.RUTA,
            
			c.ruta as ruta_categoria
		FROM TBL_PRODUCTOS p 
		INNER JOIN TBL_CATEGORIA c
		ON p.COD_CATEGORIA = c.COD_CATEGORIA
        INNER JOIN TBL_INVENTARIO i ON p.COD_PRODUCTO = i.COD_PRODUCTO
		WHERE p.COD_STATUS = 1 AND p.COD_PRODUCTO = COD AND p.ruta = PV_RUTA;
	-- READ EN LA TABLA CATEGORÍA
     ELSEIF MODO='D' THEN
		SELECT p.COD_PRODUCTO,
			p.COD_BARRA,
			p.NOMBRE,
			p.DESCRIPCION,
			p.COD_CATEGORIA,
			c.NOMBRE as CATEGORIA,
			p.PRECIO,
			i.STOCK,
            i.CANT_VENTA,
            i.CANT_COMPRA,
			p.RUTA 
                FROM TBL_PRODUCTOS p 
               INNER JOIN TBL_CATEGORIA c
            ON p.COD_CATEGORIA = c.COD_CATEGORIA
            INNER JOIN TBL_INVENTARIO i ON p.COD_PRODUCTO = i.COD_PRODUCTO
                WHERE p.COD_STATUS != 0 AND p.COD_PRODUCTO = COD;
		ELSEIF MODO='G' THEN
		SELECT C.COD_CATEGORIA, C.NOMBRE,C.RUTA
		FROM TBL_CATEGORIA  C 
		WHERE C.COD_CATEGORIA = COD;
		-- valida getProductosT
		ELSEIF MODO='H' THEN
		SELECT IP.IMG FROM TBL_IMG_PRODUCTO IP
		WHERE IP.COD_PRODUCTO = COD;
        -- VIEW POR PAGINA EN LA TABLA CATEGORIA
    ELSEIF MODO='F' THEN
		SELECT p.COD_PRODUCTO,
			p.COD_BARRA,
			p.NOMBRE,
			p.DESCRIPCION,
			p.COD_CATEGORIA,
			c.NOMBRE as CATEGORIA,
			p.PRECIO,
			i.STOCK,
			p.RUTA 
	FROM TBL_PRODUCTOS p 
	INNER JOIN TBL_CATEGORIA c ON p.COD_CATEGORIA = c.COD_CATEGORIA
	 INNER JOIN TBL_INVENTARIO i ON p.COD_PRODUCTO = i.COD_PRODUCTO 
	WHERE p.COD_STATUS =1 /* and p.stock>0 */ ORDER BY p.COD_PRODUCTO DESC LIMIT PI_COD_CATEGORIA,CANT;

        
	-- DELETE EN LA TABLA CATEGORÍA (UNICAMENTE SE CAMBIA EL STATUS)
     -- ELSEIF MODO='D' THEN
		-- UPDATE TBL_CATEGORIA SET COD_STATUS = 0 WHERE COD_CATEGORIA =COD; 
	END IF;
COMMIT;
END$$

CREATE  PROCEDURE `CRUD_USUARIO` (IN `PV_NOMBRES` VARCHAR(25), IN `PV_APELLIDOS` VARCHAR(25), IN `PV_EMAIL` VARCHAR(35), IN `PV_CONTRASEÑA` VARCHAR(150), IN `PI_ROL` BIGINT(20), IN `PI_STATUS` INT(11), IN `PI_TELEFONO` INT(11), IN `PI_COD_SUCURSAL` INT(11), IN `PI_COD_GENERO` INT(11), IN `PV_DNI` VARCHAR(15), IN `PI_CREADO_POR` BIGINT(20), IN `PI_MODIFICADO_POR` BIGINT(20), IN `PC_MODO` CHAR(1), IN `PI_COD` BIGINT(20))  BEGIN
    START TRANSACTION;
     -- INSERT TABLAS USUARIOS Y PERSONAS
    IF PC_MODO='I' THEN
     INSERT INTO TBL_PERSONAS(NOMBRES, APELLIDOS, EMAIL, CONTRASEÑA, COD_ROL, COD_STATUS, TELEFONO,CREADO_POR, FECHA_CREACION) 
	  VALUES(PV_NOMBRES, PV_APELLIDOS, PV_EMAIL, PV_CONTRASEÑA, PI_ROL, PI_STATUS, PI_TELEFONO,PI_CREADO_POR, NOW());
     
	SELECT MAX(COD_PERSONA) INTO @PERSONA FROM TBL_PERSONAS;

     INSERT INTO TBL_USUARIOS(COD_PERSONA, COD_SUCURSAL, COD_GENERO, DNI) 
	  VALUES(@PERSONA, PI_COD_SUCURSAL, PI_COD_GENERO, PV_DNI);
     
     -- UPDATE TABLAS USUARIOS Y PERSONAS
     ELSEIF PC_MODO='U' THEN
     UPDATE TBL_PERSONAS
        SET NOMBRES	=PV_NOMBRES, APELLIDOS=PV_APELLIDOS, EMAIL=PV_EMAIL, CONTRASEÑA=PV_CONTRASEÑA, MODIFICADO_POR=PI_MODIFICADO_POR, COD_ROL=PI_ROL,
            COD_STATUS=PI_STATUS, TELEFONO=PI_TELEFONO, FECHA_MODIFICACION=NOW() 
        WHERE COD_PERSONA = PI_COD;
             
       UPDATE TBL_USUARIOS
        SET COD_SUCURSAL=PI_COD_SUCURSAL, COD_GENERO=PI_COD_GENERO, DNI=PV_DNI 
        WHERE COD_PERSONA = PI_COD;
        -- Sin contraseña Actualizar
        ELSEIF PC_MODO='S' THEN
     UPDATE TBL_PERSONAS
        SET NOMBRES	=PV_NOMBRES, APELLIDOS=PV_APELLIDOS, EMAIL=PV_EMAIL, MODIFICADO_POR=PI_MODIFICADO_POR, COD_ROL=PI_ROL,
            COD_STATUS=PI_STATUS, TELEFONO=PI_TELEFONO, FECHA_MODIFICACION=NOW() 
        WHERE COD_PERSONA = PI_COD;
             
       UPDATE TBL_USUARIOS
        SET COD_SUCURSAL=PI_COD_SUCURSAL, COD_GENERO=PI_COD_GENERO, DNI=PV_DNI 
        WHERE COD_PERSONA = PI_COD;
     -- VIEW TABLAS USUARIOS Y PERSONAS
    ELSEIF PC_MODO='V' THEN
       SELECT U.COD_USUARIO, P.COD_PERSONA, P.COD_STATUS, P.COD_ROL, R.NOM_ROL AS ROL, U.DNI, P.NOMBRES, P.APELLIDOS, P.EMAIL,ST.DESCRIPCION AS STATUS , P.TELEFONO, S.NOMBRE AS SUCURSAL, G.DESCRIPCION AS GENERO,
        P.FECHA_CREACION, P.FECHA_MODIFICACION, P.DATE_LOGIN
        FROM TBL_USUARIOS U
        INNER JOIN TBL_PERSONAS P ON P.COD_PERSONA=U.COD_PERSONA
        INNER JOIN TBL_SUCURSAL S ON S.COD_SUCURSAL=U.COD_SUCURSAL
        INNER JOIN TBL_GENERO G ON G.COD_GENERO=U.COD_GENERO
        INNER JOIN TBL_STATUS ST ON ST.COD_STATUS=P.COD_STATUS
        INNER JOIN TBL_ROLES R ON R.COD_ROL=P.COD_ROL
                WHERE P.COD_STATUS!=0;
		
       -- READ TABLAS USUARIOS Y PERSONAS
     ELSEIF PC_MODO='R' THEN
		SELECT P.COD_PERSONA, U.COD_USUARIO, P.COD_ROL, R.NOM_ROL AS ROL, U.DNI, P.NOMBRES, P.APELLIDOS, P.EMAIL,ST.DESCRIPCION AS STATUS , P.TELEFONO, S.NOMBRE AS SUCURSAL,G.COD_GENERO, G.DESCRIPCION AS GENERO,
        P.FECHA_CREACION, CONCAT(CR.NOMBRES, ' ', CR.APELLIDOS) AS "CREADO_POR", P.FECHA_MODIFICACION, CONCAT(MO.NOMBRES, ' ', MO.APELLIDOS) AS "MODIFICADO_POR",  P.DATE_LOGIN,P.COD_STATUS, S.COD_SUCURSAL
        FROM TBL_USUARIOS U
        INNER JOIN TBL_PERSONAS P ON P.COD_PERSONA=U.COD_PERSONA
        INNER JOIN TBL_SUCURSAL S ON S.COD_SUCURSAL=U.COD_SUCURSAL
        INNER JOIN TBL_GENERO G ON G.COD_GENERO=U.COD_GENERO
        INNER JOIN TBL_STATUS ST ON ST.COD_STATUS=P.COD_STATUS
        INNER JOIN TBL_ROLES R ON R.COD_ROL=P.COD_ROL
        INNER JOIN TBL_PERSONAS CR ON P.CREADO_POR=CR.COD_PERSONA
        LEFT JOIN TBL_PERSONAS MO ON P.MODIFICADO_POR=MO.COD_PERSONA
        WHERE P.COD_PERSONA=PI_COD;
      -- DELETE
     ELSEIF PC_MODO='D' THEN
      UPDATE TBL_PERSONAS
      SET COD_STATUS=0 
      WHERE COD_PERSONA=PI_COD;   
	-- Actualizar perfil
	ELSEIF PC_MODO="P" THEN
     UPDATE TBL_PERSONAS
        SET NOMBRES	=PV_NOMBRES, APELLIDOS=PV_APELLIDOS, CONTRASEÑA=PV_CONTRASEÑA, MODIFICADO_POR=PI_MODIFICADO_POR,
           TELEFONO=PI_TELEFONO, FECHA_MODIFICACION=NOW() 
        WHERE COD_PERSONA = PI_COD;
       UPDATE TBL_USUARIOS
        SET COD_SUCURSAL=PI_COD_SUCURSAL, COD_GENERO=PI_COD_GENERO, DNI=PV_DNI 
        WHERE COD_PERSONA = PI_COD;
     -- Actualizar perfil Sin contraseña
	ELSEIF PC_MODO="H" THEN
     UPDATE TBL_PERSONAS
        SET NOMBRES	=PV_NOMBRES, APELLIDOS=PV_APELLIDOS, MODIFICADO_POR=PI_MODIFICADO_POR,
           TELEFONO=PI_TELEFONO, FECHA_MODIFICACION=NOW() 
        WHERE COD_PERSONA = PI_COD;
       UPDATE TBL_USUARIOS
        SET COD_SUCURSAL=PI_COD_SUCURSAL, COD_GENERO=PI_COD_GENERO, DNI=PV_DNI 
        WHERE COD_PERSONA = PI_COD;
  -- Actualizar perfil Cliente
	ELSEIF PC_MODO="C" THEN
     UPDATE TBL_PERSONAS
        SET NOMBRES	=PV_NOMBRES, APELLIDOS=PV_APELLIDOS, CONTRASEÑA=PV_CONTRASEÑA, MODIFICADO_POR=PI_MODIFICADO_POR,
           TELEFONO=PI_TELEFONO, FECHA_MODIFICACION=NOW() 
        WHERE COD_PERSONA = PI_COD;
        -- Actualizar perfil cliente Sin contraseña
    ELSEIF PC_MODO="M" THEN
     UPDATE TBL_PERSONAS
        SET NOMBRES	=PV_NOMBRES, APELLIDOS=PV_APELLIDOS, MODIFICADO_POR=PI_MODIFICADO_POR,
           TELEFONO=PI_TELEFONO, FECHA_MODIFICACION=NOW() 
        WHERE COD_PERSONA = PI_COD;
        -- Valida insert
        ELSEIF PC_MODO="A" THEN
        SELECT * FROM TBL_PERSONAS p
		left join TBL_USUARIOS u on p.COD_PERSONA=u.COD_PERSONA WHERE p.email = PV_EMAIL or u.dni = PV_DNI;
        -- valida actualizar
        ELSEIF PC_MODO="B" THEN
        SELECT * FROM TBL_PERSONAS p
		LEFT JOIN TBL_USUARIOS u on p.COD_PERSONA=u.COD_PERSONA
        WHERE p.EMAIL = PV_EMAIL AND p.COD_PERSONA !=PI_COD OR u.DNI = PV_DNI AND p.COD_PERSONA != PI_COD;
   END IF;
COMMIT;
END$$

CREATE  PROCEDURE `INVENTARIO` (IN `PI_STOCK` INT(20), IN `MODO` CHAR(1), IN `COD` BIGINT(20))  BEGIN
START TRANSACTION;
	IF MODO='V' THEN
       SELECT I.*, P.NOMBRE,P.* FROM TBL_INVENTARIO I 
      INNER JOIN TBL_PRODUCTOS P ON P.COD_PRODUCTO=I.COD_PRODUCTO;

       -- READ
     ELSEIF MODO='R' THEN
		SELECT I.*, P.NOMBRE,P.* FROM TBL_INVENTARIO I 
      INNER JOIN TBL_PRODUCTOS P ON P.COD_PRODUCTO=I.COD_PRODUCTO 
      WHERE I.COD_PRODUCTO=COD;
      
	ELSEIF MODO='U' THEN
		UPDATE TBL_INVENTARIO
        SET STOCK=PI_STOCK
        WHERE COD_PRODUCTO=COD;
	ELSEIF MODO='C' THEN
		UPDATE TBL_INVENTARIO
        SET CANT_COMPRA=PI_STOCK
        WHERE COD_PRODUCTO=COD;
        ELSEIF MODO='A' THEN
		UPDATE TBL_INVENTARIO
        SET CANT_VENTA=PI_STOCK
        WHERE COD_PRODUCTO=COD;
  	 END IF;
   COMMIT;
   END$$

CREATE  PROCEDURE `LOGIN` (IN `PV_USUARIO` VARCHAR(35), IN `PV_CONTRASEÑA` VARCHAR(135), IN `PV_TOKEN` VARCHAR(100), IN `MODO` CHAR(1), IN `COD` BIGINT(20))  BEGIN    
 
	IF MODO='V' THEN
	SELECT COD_PERSONA, COD_STATUS FROM TBL_PERSONAS 
    WHERE email = PV_USUARIO and contraseña = PV_CONTRASEÑA and COD_STATUS !=0;
	ELSEIF MODO='L' THEN
    UPDATE TBL_PERSONAS SET DATE_LOGIN = now() WHERE COD_PERSONA = COD;
    ELSEIF MODO="S" THEN
SELECT p.COD_PERSONA,u.DNI,p.NOMBRES,p.APELLIDOS,p.TELEFONO,date_format(p.FECHA_MODIFICACION,'%d-%m-%Y') as "FECHA_MODIFICACION" ,date_format(p.DATE_LOGIN,'%d-%m-%Y') as "DATE_LOGIN" ,
			p.EMAIL,date_format(p.FECHA_CREACION,'%d-%m-%Y') as "FECHA_CREACION" , DATE_FORMAT(p.FECHA_CREACION,'%d-%m-%Y') as fechaRegistro,
			r.COD_ROL,r.NOM_ROL,u.COD_SUCURSAL,u.COD_GENERO,s.NOMBRE as "Sucursal",s.DIRECCION as "Sucursal Desc"
			FROM TBL_PERSONAS p
            LEFT JOIN TBL_USUARIOS u on p.COD_PERSONA=u.COD_PERSONA
            LEFT JOIN TBL_SUCURSAL s on u.COD_SUCURSAL=s.COD_SUCURSAL
			INNER JOIN TBL_ROLES r ON p.COD_ROL = r.COD_ROL
			WHERE p.COD_PERSONA = COD;
	ELSEIF MODO="R" THEN
    SELECT COD_PERSONA,NOMBRES,APELLIDOS,COD_STATUS FROM TBL_PERSONAS WHERE 
					EMAIL = PV_USUARIO and  
					COD_STATUS = 1;
	elseif MODO="T" THEN
    UPDATE TBL_PERSONAS SET token = PV_TOKEN WHERE COD_PERSONA = COD;
    elseif MODO="C" THEN
    SELECT COD_PERSONA FROM TBL_PERSONAS WHERE 
					EMAIL = PV_USUARIO and 
					TOKEN = PV_TOKEN and 					
					COD_STATUS = 1;
    ELSEIF MODO="P" THEN
   UPDATE TBL_PERSONAS SET CONTRASEÑA = PV_CONTRASEÑA, TOKEN = PV_TOKEN WHERE COD_PERSONA =COD;
   END IF; 
END$$

CREATE  PROCEDURE `P_ORDEN_COMPRA` (IN `PI_COD_PROVEEDOR` BIGINT(20), IN `PI_COD_PRODUCTO` BIGINT(20), IN `PD_PRECIO` DECIMAL(11,2), IN `PI_CANT_COMPRA` INT(11), IN `PD_ISV` DECIMAL(11,2), IN `PC_MODO` CHAR(1), IN `PI_COD` BIGINT(20))  BEGIN
START TRANSACTION;
	-- TOTAL PRECIO * CANTIDAD
	SET @TOTAL:=PD_PRECIO*PI_CANT_COMPRA;
	-- ABRE EL IF
	-- INSERT
	IF PC_MODO='I' THEN
		-- INSERTAR EN LA TABLA ORDEN COMPRA
		INSERT INTO TBL_ORDEN_COMPRA(COD_PROVEEDOR, MONTO,ISV, FECHA_COMPRA) 
		VALUES(PI_COD_PROVEEDOR,@TOTAL,PD_ISV, NOW());

		-- SELECCIONAR EL CODIGO MAXIMO INSERTADO
		SELECT MAX(COD_ORDEN) INTO @MAX_ORDEN FROM TBL_ORDEN_COMPRA;

		-- INSERTAR EN DETALLE COMPRA
		INSERT INTO TBL_DETALLE_COMPRA(COD_ORDEN, COD_PRODUCTO, PRECIO,CANT_COMPRA) 
		VALUES(@MAX_ORDEN, PI_COD_PRODUCTO,PD_PRECIO, PI_CANT_COMPRA);


	-- UPDATE 
	ELSEIF PC_MODO='U' THEN
		-- ACTUALIZAR TABLA ORDEN COMPRA
		UPDATE TBL_ORDEN_COMPRA
		SET COD_PROVEEDOR=PI_COD_PROVEEDOR, MONTO=@TOTAL, ISV=PD_ISV
		WHERE COD_ORDEN= PI_COD;

		-- ACTUALIZAR TABLA DETALLE COMPRA
		UPDATE TBL_DETALLE_COMPRA
		SET COD_PRODUCTO=PI_COD_PRODUCTO, PRECIO=PD_PRECIO, CANT_COMPRA=PI_CANT_COMPRA
		WHERE COD_ORDEN = PI_COD AND COD_PRODUCTO =PI_COD_PRODUCTO;

	-- VIEW // VER TODOS LOS REGISTROS
	ELSEIF PC_MODO='V' THEN
		
		SELECT O.*,PV.NOMBRE_EMPRESA,DC.*,P.NOMBRE AS 'PRODUCTO'  FROM TBL_ORDEN_COMPRA O
		INNER JOIN TBL_PROVEEDORES PV ON PV.COD_PROVEEDOR=O.COD_PROVEEDOR
		INNER JOIN TBL_DETALLE_COMPRA DC ON O.COD_ORDEN=DC.COD_ORDEN
		INNER JOIN TBL_PRODUCTOS P ON P.COD_PRODUCTO = DC.COD_PRODUCTO;

	-- READ // VER ORDEN COMPRA DE ACUERDO AL COD - PI_COD
	ELSEIF PC_MODO='R' THEN
		SELECT O.*,PV.NOMBRE_EMPRESA,DC.*,P.NOMBRE AS 'PRODUCTO'  FROM TBL_ORDEN_COMPRA O
		INNER JOIN TBL_PROVEEDORES PV ON PV.COD_PROVEEDOR=O.COD_PROVEEDOR
		INNER JOIN TBL_DETALLE_COMPRA DC ON O.COD_ORDEN=DC.COD_ORDEN
		INNER JOIN TBL_PRODUCTOS P ON P.COD_PRODUCTO = DC.COD_PRODUCTO
		WHERE O.COD_ORDEN=PI_COD;

	-- DELETE ORDEN COMPRA DE ACUERDO AL COD - PI_COD
	ELSEIF PC_MODO='D' THEN
		DELETE FROM TBL_ORDEN_COMPRA WHERE COD_ORDEN=PI_COD;
        
     ELSEIF PC_MODO='A' THEN
		SELECT P.*,C.NOMBRE AS'CATEGORÍA',P.NOMBRE,P.DESCRIPCION,P.PRECIO,P.COD_STATUS,I.STOCK,C.DESCRIPCION,S.DESCRIPCION AS 'STATUS'
        FROM TBL_PRODUCTOS P 
        INNER JOIN TBL_CATEGORIA C ON P.COD_CATEGORIA = C.COD_CATEGORIA
          INNER JOIN TBL_STATUS S ON P.COD_STATUS = S.COD_STATUS
          INNER JOIN TBL_INVENTARIO I ON P.COD_PRODUCTO= I.COD_PRODUCTO
		     WHERE P.COD_PRODUCTO= PI_COD and P.COD_STATUS!=0; 
	END IF; 
	-- CIERRE EL IF
    SET @DC_CANTCOMPRADO=0;
    SET @DP_CANTVENDIDO=0;
    -- SUMA DE DE LA CANTIDAD DE PRODUCTOS COMPRADA 
    SELECT SUM(CANT_COMPRA) INTO @DC_CANTCOMPRADO  FROM TBL_DETALLE_COMPRA WHERE COD_PRODUCTO=PI_COD_PRODUCTO;
    
    -- SUMA DE DE LA CANTIDAD DE PRODUCTOS VENDIDA
    SELECT SUM(CANTIDAD) INTO @DP_CANTVENDIDO FROM TBL_DETALLE_PEDIDO WHERE COD_PRODUCTO=PI_COD_PRODUCTO;
    
    -- SI LA CANTIDAD VENDIDA ES NULL SE ASIGNA 0
    IF @DP_CANTVENDIDO IS NULL THEN
		SET @DP_CANTVENDIDO=0;
    END IF;
    
    -- TOTAL STOCK, CANTIDAD COMPRADA - CANTIDAD VENDIDA
	SELECT @DC_CANTCOMPRADO-@DP_CANTVENDIDO INTO @C_STOCK;
    -- SELECT @DC_CANTCOMPRADO,@DP_CANTVENDIDO, @C_STOCK;
	-- ACTUALIZAR TABLA INVENTARIO 
	UPDATE TBL_INVENTARIO
	SET STOCK=@C_STOCK,CANT_COMPRA=@DC_CANTCOMPRADO, CANT_VENTA=@DP_CANTVENDIDO
	WHERE COD_PRODUCTO=PI_COD_PRODUCTO;
COMMIT;
END$$

DELIMITER ;

-- --------------------------------------------------------

--
-- Estructura de tabla para la tabla `TBL_CALENDARIO`
--

CREATE TABLE `TBL_CALENDARIO` (
  `COD_CALENDARIO` bigint(20) NOT NULL,
  `COD_PERSONA` bigint(20) NOT NULL,
  `title` varchar(100) COLLATE utf8mb4_swedish_ci NOT NULL,
  `descripcion` text COLLATE utf8mb4_swedish_ci NOT NULL,
  `start` datetime NOT NULL,
  `end` datetime NOT NULL,
  `color` varchar(100) COLLATE utf8mb4_swedish_ci NOT NULL,
  `textColor` varchar(100) COLLATE utf8mb4_swedish_ci NOT NULL,
  `dateCreated` datetime NOT NULL DEFAULT current_timestamp(),
  `dateModificado` datetime NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_swedish_ci;

--
-- Volcado de datos para la tabla `TBL_CALENDARIO`
--

INSERT INTO `TBL_CALENDARIO` (`COD_CALENDARIO`, `COD_PERSONA`, `title`, `descripcion`, `start`, `end`, `color`, `textColor`, `dateCreated`, `dateModificado`) VALUES
(3, 1, 'Semana Santa', 'Semana Santa', '2022-04-11 07:29:00', '2022-04-15 07:29:00', '#fbff00', '#000000', '2022-04-09 04:27:06', '2022-04-09 19:12:28'),
(4, 1, 'Subir Proyecto', 'Subir proyecto al campus virtual esta fecha', '2022-04-25 00:00:00', '2022-04-25 23:59:00', '#0033ff', '#ffffff', '2022-04-09 16:19:30', '2022-04-18 01:54:30'),
(5, 1, 'Realizar Contabilidad', 'Realizar Contabilidad de ingresos y egresos', '2022-04-30 00:00:00', '2022-04-30 23:59:00', '#ff24ed', '#000000', '2022-04-09 16:22:08', '2022-04-09 16:22:49'),
(6, 1, 'Reunión con inversionistas', 'Reunión con inversionistas', '2022-04-04 10:00:00', '2022-04-04 13:00:00', '#dd2cd7', '#000000', '2022-04-09 16:23:59', '2022-04-19 09:25:18'),
(7, 1, 'Fin del Periodo', 'Celebrar', '2022-05-07 00:00:00', '2022-05-07 23:59:00', '#1468f0', '#000000', '2022-04-18 17:33:02', '0000-00-00 00:00:00');

-- --------------------------------------------------------

--
-- Estructura de tabla para la tabla `TBL_CATEGORIA`
--

CREATE TABLE `TBL_CATEGORIA` (
  `COD_CATEGORIA` bigint(20) NOT NULL COMMENT 'CÓDIGO DE CATEGORÍA',
  `COD_STATUS` int(11) DEFAULT NULL COMMENT 'CÓDIGO DEL STATUS',
  `DESCRIPCION` varchar(100) COLLATE utf8mb4_swedish_ci NOT NULL COMMENT 'DESCRIPCIÓN SOBRE LA CATEGORÍA',
  `NOMBRE` varchar(50) COLLATE utf8mb4_swedish_ci NOT NULL COMMENT 'NOMBRE DE LA CATEGORÍA',
  `PORTADA` varchar(255) COLLATE utf8mb4_swedish_ci NOT NULL COMMENT 'UBICACIÓN DE LA IMAGEN UTILIZADA EN LA PORTADA',
  `RUTA` varchar(255) COLLATE utf8mb4_swedish_ci NOT NULL,
  `CREADO_POR` bigint(20) NOT NULL COMMENT 'REGISTRO DEL USUARIO QUE CREÓ LA CATEGORÍA',
  `FECHA_CREACION` datetime NOT NULL DEFAULT current_timestamp() COMMENT 'REGISTRO DE FECHA EN LA QUE SE CREÓ LA CATEGORÍA',
  `MODIFICADO_POR` bigint(20) NOT NULL COMMENT 'REGISTRO DEL ÚLTIMO USUARIO EN MODIFICAR',
  `FECHA_MODIFICACION` datetime NOT NULL COMMENT 'REGISTRO DE LA ÚLTIMA FECHA DE MODIFICACIÓN'
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_swedish_ci;

--
-- Volcado de datos para la tabla `TBL_CATEGORIA`
--

INSERT INTO `TBL_CATEGORIA` (`COD_CATEGORIA`, `COD_STATUS`, `DESCRIPCION`, `NOMBRE`, `PORTADA`, `RUTA`, `CREADO_POR`, `FECHA_CREACION`, `MODIFICADO_POR`, `FECHA_MODIFICACION`) VALUES
(1, 1, 'Lacteos de Honduras', 'Lacteos', 'img_bee4fea75cfa2a6e542b0575ad2516f2.jpg', 'lacteos', 1, '2022-03-20 00:11:48', 1, '2022-04-14 17:40:22'),
(2, 1, 'Extenso Catálogo de Licores', 'Cervezas y Licores', 'img_50ab0b4623f1fb35934750cf73ab51ba.jpg', 'cervezas-y-licores', 1, '2022-02-19 03:19:41', 1, '2022-04-19 00:03:15'),
(3, 1, 'Maquillaje y Cosmeticos', 'Maquillaje', 'img_ff226895a9e920ccb4f395019684731f.jpg', 'maquillaje', 1, '2022-02-12 02:21:20', 1, '2022-04-18 22:32:24'),
(4, 1, 'Artículos del Hogar', 'Artículos del Hogar', 'img_5b59bd9c8985f1165a14152df943a677.jpg', 'articulos-del-hogar', 1, '2022-04-18 00:34:38', 1, '2022-04-19 09:48:21'),
(5, 1, 'Frescas Y Deliciosas', 'Frutas Y Vegetales', 'img_67bcce3e9c78193a009e25370785791f.jpg', 'frutas-y-vegetales', 1, '2022-04-18 23:47:11', 0, '0000-00-00 00:00:00'),
(6, 1, 'Pastas de Buena Calidad', 'Pastas', 'img_eec94374e5ecd6f1f4da86682cfbedba.jpg', 'pastas', 1, '2022-04-18 23:57:01', 0, '0000-00-00 00:00:00'),
(7, 1, 'Productos para Mascotas', 'Mascotas', 'img_bec798b8d653225977def8bfd99557df.jpg', 'mascotas', 1, '2022-04-19 00:02:50', 0, '0000-00-00 00:00:00'),
(8, 1, 'Cortes de Carne Exquisitos', 'Carnes', 'img_bae3f79bb7cb93684e0630b8583f0758.jpg', 'carnes', 1, '2022-04-19 01:55:20', 0, '0000-00-00 00:00:00');

-- --------------------------------------------------------

--
-- Estructura de tabla para la tabla `TBL_CLIENTE`
--

CREATE TABLE `TBL_CLIENTE` (
  `COD_CLIENTE` bigint(20) NOT NULL COMMENT 'CÓDIGO DE CLIENTE',
  `COD_PERSONA` bigint(20) NOT NULL COMMENT 'CÓDIGO DE LA PERSONA'
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_swedish_ci;

--
-- Volcado de datos para la tabla `TBL_CLIENTE`
--

INSERT INTO `TBL_CLIENTE` (`COD_CLIENTE`, `COD_PERSONA`) VALUES
(1, 2),
(2, 14),
(3, 19),
(12, 62);

-- --------------------------------------------------------

--
-- Estructura de tabla para la tabla `TBL_DETALLE_COMPRA`
--

CREATE TABLE `TBL_DETALLE_COMPRA` (
  `COD_DETALLE` bigint(20) NOT NULL COMMENT 'CÓDIGO DEL DETALLE DE COMPRA',
  `COD_ORDEN` bigint(20) NOT NULL COMMENT 'CÓDIGO DE LA ORDEN DE COMPRA',
  `COD_PRODUCTO` bigint(20) NOT NULL COMMENT 'CÓDIGO DEL PRODUCTO QUE SE ESTÁ COMPRANDO',
  `PRECIO` decimal(11,2) NOT NULL COMMENT 'PRECIO DEL PRODUCTO A INGRESAR',
  `CANT_COMPRA` int(11) NOT NULL COMMENT 'CANTIDAD DEL PRODUCTO A INGRESAR'
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_swedish_ci;

--
-- Volcado de datos para la tabla `TBL_DETALLE_COMPRA`
--

INSERT INTO `TBL_DETALLE_COMPRA` (`COD_DETALLE`, `COD_ORDEN`, `COD_PRODUCTO`, `PRECIO`, `CANT_COMPRA`) VALUES
(7, 5, 12, '18.00', 48),
(8, 5, 2, '10.00', 10),
(9, 6, 1, '10.00', 10),
(10, 7, 1, '10.00', 10),
(11, 8, 1, '20.00', 100),
(12, 9, 15, '20.00', 100),
(13, 10, 15, '10.00', 10),
(14, 11, 15, '10.00', 10),
(15, 12, 15, '10.00', 10),
(16, 13, 15, '15.00', 15),
(17, 14, 1, '10.00', 10),
(18, 15, 1, '50.00', 100),
(19, 15, 2, '20.00', 150),
(20, 15, 15, '25.00', 500),
(21, 15, 14, '10.00', 200),
(22, 16, 1, '10.00', 100),
(23, 18, 1, '10.00', 100),
(24, 18, 15, '25.00', 200),
(25, 19, 2, '25.00', 48),
(26, 19, 13, '12.00', 20),
(27, 19, 15, '23.00', 20),
(28, 20, 1, '25.00', 100),
(29, 20, 2, '20.00', 24),
(30, 21, 1, '25.00', 100),
(31, 21, 2, '20.00', 24),
(32, 25, 1, '25.60', 100),
(33, 25, 2, '20.12', 24),
(34, 26, 1, '25.60', 100),
(35, 26, 2, '20.12', 24),
(36, 27, 1, '20.00', 10),
(37, 27, 2, '50.00', 100),
(38, 28, 15, '50.00', 10),
(39, 29, 17, '20.00', 20),
(40, 30, 1, '20.00', 10);

-- --------------------------------------------------------

--
-- Estructura de tabla para la tabla `TBL_DETALLE_PEDIDO`
--

CREATE TABLE `TBL_DETALLE_PEDIDO` (
  `COD_DETALLE` bigint(20) NOT NULL COMMENT 'CÓDIGO DEL DETALLE PEDIDO',
  `COD_PEDIDO` bigint(20) NOT NULL COMMENT 'CÓDIGO DEL PEDIDO AL CUAL SE ASIGNA EL PRODUCTO',
  `COD_PRODUCTO` bigint(20) NOT NULL COMMENT 'CÓDIGO DEL PRODUCTO AGREGADO AL PEDIDO',
  `PRECIO` decimal(11,2) NOT NULL COMMENT 'PRECIO DEL PRODUCTO A VENDER',
  `CANTIDAD` int(11) NOT NULL COMMENT 'CANTIDAD DEL PRODUCTO A VENDER'
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_swedish_ci;

--
-- Volcado de datos para la tabla `TBL_DETALLE_PEDIDO`
--

INSERT INTO `TBL_DETALLE_PEDIDO` (`COD_DETALLE`, `COD_PEDIDO`, `COD_PRODUCTO`, `PRECIO`, `CANTIDAD`) VALUES
(10, 15, 1, '25.00', 4),
(11, 16, 1, '25.00', 10),
(12, 17, 1, '25.00', 4),
(13, 20, 1, '25.00', 3),
(14, 20, 12, '25.00', 1),
(15, 20, 2, '19.00', 1),
(16, 21, 13, '65.00', 10),
(17, 22, 13, '65.00', 10),
(18, 22, 12, '25.00', 3),
(19, 23, 13, '65.00', 10),
(20, 23, 12, '25.00', 3),
(21, 24, 13, '65.00', 10),
(22, 24, 12, '25.00', 5),
(23, 25, 13, '65.00', 5),
(24, 25, 12, '25.00', 10),
(25, 26, 1, '25.00', 2),
(26, 27, 1, '25.00', 2),
(27, 28, 13, '65.00', 10),
(28, 29, 2, '19.00', 3),
(29, 29, 13, '65.00', 4),
(30, 30, 2, '19.00', 3),
(31, 30, 13, '65.00', 4),
(32, 31, 2, '19.00', 3),
(33, 31, 13, '65.00', 4),
(34, 32, 2, '19.00', 3),
(35, 32, 13, '65.00', 4),
(36, 33, 1, '25.00', 4),
(37, 33, 2, '19.00', 5),
(38, 34, 12, '25.00', 1),
(39, 35, 12, '25.00', 1),
(40, 36, 1, '25.00', 1),
(41, 37, 1, '25.00', 1),
(42, 38, 1, '25.00', 1),
(50, 46, 1, '25.00', 3),
(51, 46, 2, '19.00', 6),
(52, 46, 13, '65.00', 1),
(53, 47, 12, '25.00', 3),
(54, 47, 2, '19.00', 3),
(55, 48, 12, '25.00', 6),
(56, 49, 13, '65.00', 10),
(57, 50, 12, '25.00', 1),
(58, 51, 1, '25.00', 5),
(59, 52, 13, '65.00', 3),
(63, 56, 13, '65.00', 3),
(64, 57, 1, '25.00', 5),
(65, 58, 12, '25.00', 2),
(66, 59, 13, '65.00', 2),
(67, 60, 12, '25.00', 2),
(68, 61, 12, '25.00', 2),
(69, 62, 12, '25.00', 10),
(70, 67, 14, '15.00', 5),
(72, 69, 14, '15.00', 13),
(73, 70, 14, '15.00', 5),
(74, 71, 14, '15.99', 5);

-- --------------------------------------------------------

--
-- Estructura de tabla para la tabla `TBL_EMPRESA`
--

CREATE TABLE `TBL_EMPRESA` (
  `COD_EMPRESA` bigint(20) NOT NULL COMMENT 'CÓDIGO DE EMPRESA',
  `NOMBRE_EMPRESA` varchar(20) NOT NULL COMMENT 'NOMBRE DE LA EMPRESA',
  `RAZON_SOCIAL` varchar(255) NOT NULL COMMENT 'RAZÓN SOCIAL DE LA EMPRESA',
  `GERENTE_GENERAL` varchar(30) NOT NULL COMMENT 'NOMBRE DEL GERENTE GENERAL DE LA EMPRESA',
  `COSTO_ENVIO` int(11) NOT NULL,
  `RTN` varchar(100) NOT NULL,
  `EMAIL_PEDIDOS` varchar(100) NOT NULL,
  `EMAIL_EMPRESA` varchar(100) NOT NULL,
  `TEL_EMPRESA` varchar(100) NOT NULL,
  `CEL_EMPRESA` varchar(100) NOT NULL,
  `DIRECCION_FACTURA` varchar(255) NOT NULL,
  `CATEGORIAS_SLIDER` varchar(100) NOT NULL,
  `CATEGORIAS_BANNER` varchar(100) NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_swedish_ci;

--
-- Volcado de datos para la tabla `TBL_EMPRESA`
--

INSERT INTO `TBL_EMPRESA` (`COD_EMPRESA`, `NOMBRE_EMPRESA`, `RAZON_SOCIAL`, `GERENTE_GENERAL`, `COSTO_ENVIO`, `RTN`, `EMAIL_PEDIDOS`, `EMAIL_EMPRESA`, `TEL_EMPRESA`, `CEL_EMPRESA`, `DIRECCION_FACTURA`, `CATEGORIAS_SLIDER`, `CATEGORIAS_BANNER`) VALUES
(1, 'Estacion Route 77', 'Ser Los Mejores De Honduras', 'Saúl Zepeda', 100, '03011972007227', 'estacionroutehn@gmail.com', 'estacionroutehn@gmail.com', '+504 22634806', '+504 9643-2601', 'Col. Los Laureles Calle Principal', '3,1,5,4,7', '2,6,8');

-- --------------------------------------------------------

--
-- Estructura de tabla para la tabla `TBL_GENERO`
--

CREATE TABLE `TBL_GENERO` (
  `COD_GENERO` int(11) NOT NULL COMMENT 'CÓDIGO DE GÉNERO',
  `DESCRIPCION` varchar(10) NOT NULL COMMENT 'DESCRIPCIÓN DEL GÉNERO DEL USUARIO A REGISTRAR'
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_swedish_ci;

--
-- Volcado de datos para la tabla `TBL_GENERO`
--

INSERT INTO `TBL_GENERO` (`COD_GENERO`, `DESCRIPCION`) VALUES
(1, 'MASCULINO'),
(2, 'FEMENINO'),
(12, 'OTRO');

-- --------------------------------------------------------

--
-- Estructura de tabla para la tabla `TBL_IMG_PRODUCTO`
--

CREATE TABLE `TBL_IMG_PRODUCTO` (
  `COD_IMAGEN` bigint(20) NOT NULL COMMENT 'CÓDIGO DE IMAGEN',
  `COD_PRODUCTO` bigint(20) NOT NULL COMMENT 'CÓDIGO DE LOS PRODUCTOS ALMACENADOS',
  `IMG` varchar(100) COLLATE utf8mb4_swedish_ci NOT NULL COMMENT 'UBICACIÓN DE LA IMAGEN GUARDADA'
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_swedish_ci;

--
-- Volcado de datos para la tabla `TBL_IMG_PRODUCTO`
--

INSERT INTO `TBL_IMG_PRODUCTO` (`COD_IMAGEN`, `COD_PRODUCTO`, `IMG`) VALUES
(27, 14, 'pro_75b1b8a1a4a640ff3273d97413664dfa.jpg'),
(28, 14, 'pro_1f0e9d3cd16b6c5767a2dd29eee682c7.jpg'),
(29, 13, 'pro_270072dcdabbc969d1587f1f1ccf9ebc.jpg'),
(30, 13, 'pro_d4d6a065aa30ec9207767f7833e5f538.jpg'),
(31, 12, 'pro_666c58bc5899035ff737b14c70a25f47.jpg'),
(45, 1, 'pro_5e383c4706812480701b9ec344731756.jpg'),
(46, 2, 'pro_fa7e60289ee36a76673148cd33d04594.jpg'),
(47, 3, 'pro_937a5ffaf6dd64899736a69affafebf7.jpg'),
(48, 12, 'pro_6b8bb843d7f8fa06fb2451a3c8750d70.jpg'),
(49, 4, 'pro_6243190ce1066357434a0c25455f877a.jpg'),
(50, 15, 'pro_bc464e65189d4e6024eeb4c3d958f8cf.jpg'),
(52, 6, 'pro_2599de94254a7e9918d7322de75ba120.jpg'),
(53, 10, 'pro_2d29fe34277340b97df4678251c77fb7.jpg'),
(54, 11, 'pro_ee49a9463e15fddc76d4817b1f397661.jpg'),
(55, 16, 'pro_54e37d92516d2010f293d42d2145f99c.jpg'),
(56, 9, 'pro_fe8f78ec194e2fc6570e30d5fdcf43d5.jpg'),
(57, 5, 'pro_65f90863c18fa94d85a062c817ef21f4.jpg'),
(58, 17, 'pro_8e10dce9d3cc9db30533b7b53b41a6ac.jpg'),
(59, 18, 'pro_642d6d80e5577885cad6df5a9af581dc.jpg');

-- --------------------------------------------------------

--
-- Estructura de tabla para la tabla `TBL_INVENTARIO`
--

CREATE TABLE `TBL_INVENTARIO` (
  `COD_INVENTARIO` bigint(20) NOT NULL COMMENT 'CÓDIGO DE INVENTARIO',
  `COD_PRODUCTO` bigint(20) NOT NULL COMMENT 'CÓDIGO DEL PRODUCTO ALMACENADO',
  `STOCK` int(11) NOT NULL COMMENT 'CANTIDAD DE PRODUCTO EN INVENTARIO',
  `CANT_VENTA` int(11) NOT NULL COMMENT 'CANTIDAD DE PRODUCTOS VENDIDOS',
  `CANT_COMPRA` int(11) NOT NULL COMMENT 'CANTIDAD DE PRODUCTO INGRESADO',
  `CANT_MINIMA` int(11) NOT NULL COMMENT 'CANTIDAD MÍNIMA PARA ENVIAR ADVERTENCIA'
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_swedish_ci;

--
-- Volcado de datos para la tabla `TBL_INVENTARIO`
--

INSERT INTO `TBL_INVENTARIO` (`COD_INVENTARIO`, `COD_PRODUCTO`, `STOCK`, `CANT_VENTA`, `CANT_COMPRA`, `CANT_MINIMA`) VALUES
(1, 2, 1024, 5, 1047, 24),
(2, 1, 735, 90, 744, 30),
(3, 3, 20, 0, 20, 24),
(4, 4, 0, 0, 0, 20),
(5, 5, 0, 0, 0, 0),
(6, 6, 0, 0, 0, 10),
(9, 9, 0, 0, 0, 10),
(10, 10, 0, 0, 0, 10),
(11, 11, 0, 0, 0, 5),
(12, 12, 13, 19, 2, 20),
(13, 13, 92, 0, 22, 100),
(14, 14, 172, 23, 200, 50),
(15, 15, 755, 0, 745, 10),
(16, 16, 0, 0, 0, 50),
(17, 17, 20, 0, 20, 20),
(18, 18, 0, 0, 0, 10);

-- --------------------------------------------------------

--
-- Estructura de tabla para la tabla `TBL_MODULO`
--

CREATE TABLE `TBL_MODULO` (
  `COD_MODULO` bigint(20) NOT NULL COMMENT 'CÓDIGO DEL MÓDULO',
  `NOMBRE` varchar(50) NOT NULL COMMENT 'NOMBRE DEL MÓDULO',
  `DESCRIPCION` text NOT NULL COMMENT 'DESCRIPCIÓN DE LA FUNCIÓN QUE TIENE EL MÓDULO',
  `COD_STATUS` int(11) NOT NULL COMMENT 'CÓDIGO DEL ESTATUS DEL MÓDULO'
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_swedish_ci;

--
-- Volcado de datos para la tabla `TBL_MODULO`
--

INSERT INTO `TBL_MODULO` (`COD_MODULO`, `NOMBRE`, `DESCRIPCION`, `COD_STATUS`) VALUES
(1, 'DASHBOARD', 'DASHBOARD', 1),
(2, 'USUARIOS', 'USUARIOS ADMINISTRATIVOS DEL SISTEMA', 1),
(3, 'CLIENTES ', 'CLIENTES DE TIENDA', 1),
(4, 'PRODUCTOS', 'TODOS LOS PRODUCTO', 1),
(5, 'PEDIDOS', 'PEDIDOS DE COMPRA', 1),
(6, 'CATEGORÍAS', 'CATEGORÍAS TBL_PRODUCTOS', 1),
(9, 'INVENTARIO', 'INVENTARIO PRODUCTOS ROUTE', 1),
(13, 'Calendario', 'Calendario en la empresa route77', 1),
(14, 'Empresa', 'asdasdasd', 1),
(15, 'Proveedores', '12131223', 1),
(16, 'Sucursales', 'Sucursales', 1),
(17, 'Orden Compra', 'Orden Compra', 1),
(18, 'Suscripciones', 'Registro de suscripciones de la empresa', 1);

-- --------------------------------------------------------

--
-- Estructura de tabla para la tabla `TBL_ORDEN_COMPRA`
--

CREATE TABLE `TBL_ORDEN_COMPRA` (
  `COD_ORDEN` bigint(20) NOT NULL COMMENT 'CÓDIGO DE LA ORDEN DE COMPRA',
  `COD_PROVEEDOR` bigint(20) NOT NULL COMMENT 'CÓDIGO DEL PROOVEDOR DE LOS PRODUCTOS',
  `FECHA_COMPRA` datetime NOT NULL COMMENT 'FECHA EN LA CUAL SE HACE LA ORDEN',
  `MONTO` decimal(11,2) NOT NULL COMMENT 'SUMA TOTAL DE TODOS LOS PRODUCTOS EN LA ORDEN',
  `ISV` decimal(11,2) NOT NULL COMMENT 'IMPUESTO SOBRE VENTAS',
  `CREADO_POR` bigint(20) NOT NULL,
  `NO_FACTURA` int(11) NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_swedish_ci;

--
-- Volcado de datos para la tabla `TBL_ORDEN_COMPRA`
--

INSERT INTO `TBL_ORDEN_COMPRA` (`COD_ORDEN`, `COD_PROVEEDOR`, `FECHA_COMPRA`, `MONTO`, `ISV`, `CREADO_POR`, `NO_FACTURA`) VALUES
(5, 4, '2022-03-01 16:45:03', '964.00', '15.00', 1, 312213),
(6, 1, '2022-03-14 17:11:34', '100.00', '15.00', 1, 0),
(7, 1, '2022-04-14 17:13:51', '100.00', '15.00', 1, 123),
(8, 1, '2022-04-14 17:15:10', '2.00', '15.00', 1, 123),
(9, 1, '2022-04-14 17:43:30', '2.00', '15.00', 1, 122131),
(10, 1, '2022-04-14 18:46:54', '100.00', '15.00', 1, 1234),
(11, 1, '2022-04-14 18:48:01', '100.00', '15.00', 1, 123),
(12, 1, '2022-04-14 18:48:51', '100.00', '15.00', 1, 10),
(13, 1, '2022-04-14 18:50:40', '225.00', '15.00', 1, 123),
(14, 1, '2022-04-14 18:53:30', '100.00', '15.00', 1, 2313),
(15, 1, '2022-04-15 02:19:07', '22.00', '3375.00', 1, 41341314),
(16, 1, '2022-04-15 02:28:50', '1.00', '150.00', 1, 41412414),
(17, 1, '2022-04-15 02:32:55', '6.00', '900.00', 1, 414124145),
(18, 1, '2022-04-15 02:38:57', '6000.00', '900.00', 1, 123412213),
(19, 1, '2022-04-15 03:03:57', '1921.20', '288.00', 1, 123123123),
(20, 1, '2022-04-15 03:07:37', '3042.88', '456.00', 1, 3131313),
(21, 1, '2022-04-15 03:15:23', '3042.88', '456.00', 1, 3131313),
(22, 1, '2022-04-15 03:19:38', '3042.88', '456.00', 1, 3131313),
(23, 1, '2022-04-15 03:20:05', '3042.88', '456.00', 1, 3131313),
(24, 1, '2022-04-15 03:20:22', '3042.88', '456.00', 1, 3131313),
(25, 1, '2022-04-15 03:20:32', '3042.88', '456.00', 1, 3131313),
(26, 1, '2022-04-30 00:23:56', '3042.88', '456.00', 1, 2147483647),
(27, 1, '2022-04-17 01:21:01', '5200.00', '780.00', 1, 12231131),
(28, 1, '2022-04-17 23:36:55', '500.00', '75.00', 1, 1231231231),
(29, 1, '2022-04-18 13:51:52', '400.00', '60.00', 1, 12123123),
(30, 1, '2022-04-18 17:32:10', '200.00', '30.00', 1, 3121231);

-- --------------------------------------------------------

--
-- Estructura de tabla para la tabla `TBL_PEDIDO`
--

CREATE TABLE `TBL_PEDIDO` (
  `COD_PEDIDO` bigint(20) NOT NULL COMMENT 'CÓDIGO DEL PEDIDO',
  `COD_PERSONA` bigint(20) NOT NULL COMMENT 'CÓDIGO DE LA PERSONA QUE REGISTRÓ EL PEDIDO',
  `FECHA` datetime NOT NULL DEFAULT current_timestamp() COMMENT 'FECHA EN LA QUE SE REGISTRÓ EL PEDIDO',
  `MONTO` decimal(11,2) NOT NULL COMMENT 'SUMA TOTAL DE TODOS LOS PRODUCTOS EN EL PEDIDO',
  `COSTOENVIO` decimal(11,2) NOT NULL COMMENT 'COSTO DE ENVIÓ',
  `COD_TIPO_PAGO` bigint(20) NOT NULL COMMENT 'CÓDIGO DE LAS OPCIONES PARA RECIBIR EL PAGO',
  `DIRECCION_ENVIO` text NOT NULL COMMENT 'DIRECCIÓN DE ENTREGA',
  `COD_ESTADO` int(11) NOT NULL COMMENT 'CÓDIGO DE ESTADO DEL PEDIDO',
  `REFERENCIA_COBRO` varchar(255) CHARACTER SET utf8 COLLATE utf8_swedish_ci DEFAULT NULL,
  `COD_TRANSACCION_PAYPAL` varchar(255) CHARACTER SET utf8 COLLATE utf8_swedish_ci DEFAULT NULL,
  `DATOS_PAYPAL` text CHARACTER SET utf8 COLLATE utf8_swedish_ci DEFAULT NULL,
  `CREADO_POR` bigint(20) NOT NULL COMMENT 'USUARIO QUE CREO EL PEDIDO',
  `FECHA_CREACION` datetime NOT NULL DEFAULT current_timestamp() COMMENT 'FECHA EN LA QUE SE CREÓ EL PEDIDO',
  `MODIFICADO_POR` bigint(20) NOT NULL COMMENT 'REGISTRO DE EL ÚLTIMO USUARIO EN MODIFICAR',
  `FECHA_MODIFICACION` datetime NOT NULL COMMENT 'FECHA DE LA ÚLTIMA MODIFICACIÓN'
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_swedish_ci;

--
-- Volcado de datos para la tabla `TBL_PEDIDO`
--

INSERT INTO `TBL_PEDIDO` (`COD_PEDIDO`, `COD_PERSONA`, `FECHA`, `MONTO`, `COSTOENVIO`, `COD_TIPO_PAGO`, `DIRECCION_ENVIO`, `COD_ESTADO`, `REFERENCIA_COBRO`, `COD_TRANSACCION_PAYPAL`, `DATOS_PAYPAL`, `CREADO_POR`, `FECHA_CREACION`, `MODIFICADO_POR`, `FECHA_MODIFICACION`) VALUES
(15, 1, '2022-03-20 22:50:23', '100.00', '10.00', 2, 'Tangamandapio', 3, '', '', '', 0, '2022-03-20 22:50:23', 0, '2022-03-20 22:53:31'),
(16, 1, '2022-03-20 23:16:07', '250.00', '199.00', 1, 'La Vecindad del Chavo', 1, '', '', '', 0, '2022-03-20 23:16:07', 0, '0000-00-00 00:00:00'),
(17, 1, '2022-03-22 18:39:32', '100.00', '10.00', 2, 'Florencia Norte', 3, '', '', '', 0, '2022-03-22 18:39:32', 0, '2022-03-22 18:40:25'),
(18, 1, '2022-04-01 22:21:31', '35.00', '10.00', 1, 'Flor del campo Zona 2, Mi casa', 1, NULL, NULL, NULL, 0, '2022-04-01 22:21:31', 0, '0000-00-00 00:00:00'),
(19, 1, '2022-04-01 22:27:12', '35.00', '10.00', 1, 'Flor del campo Zona 3, Otra casa mia', 1, NULL, NULL, NULL, 0, '2022-04-01 22:27:12', 0, '0000-00-00 00:00:00'),
(20, 1, '2022-04-01 22:33:15', '129.00', '10.00', 1, 'Col. el hato de enmedio, casa 3', 1, NULL, NULL, NULL, 0, '2022-04-01 22:33:15', 0, '0000-00-00 00:00:00'),
(21, 1, '2022-04-01 22:36:39', '650.00', '0.00', 2, 'Col. Las torres, El matadero', 1, NULL, NULL, NULL, 0, '2022-04-01 22:36:39', 0, '0000-00-00 00:00:00'),
(22, 1, '2022-04-01 22:46:31', '725.00', '0.00', 2, 'Flor del campo Zona 2, 11101', 1, NULL, NULL, NULL, 0, '2022-04-01 22:46:31', 0, '0000-00-00 00:00:00'),
(23, 1, '2022-04-01 22:47:03', '725.00', '0.00', 1, 'Col. Flor del Campo, 504', 1, NULL, NULL, NULL, 0, '2022-04-01 22:47:03', 0, '0000-00-00 00:00:00'),
(24, 1, '2022-04-01 22:48:27', '775.00', '0.00', 1, 'Flor del campo Zona 2, 11101', 1, NULL, NULL, NULL, 0, '2022-04-01 22:48:27', 0, '0000-00-00 00:00:00'),
(25, 1, '2022-04-01 22:51:18', '575.00', '0.00', 1, 'Flor del campo Zona 2, 11101', 1, NULL, NULL, NULL, 0, '2022-04-01 22:51:18', 0, '0000-00-00 00:00:00'),
(26, 1, '2022-04-01 22:53:57', '60.00', '10.00', 1, 'Col. Flor del Campo, 11101', 1, NULL, NULL, NULL, 0, '2022-04-01 22:53:57', 0, '0000-00-00 00:00:00'),
(27, 1, '2022-04-01 22:54:11', '60.00', '10.00', 1, 'Flor del campo Zona 2, 11101', 1, NULL, NULL, NULL, 0, '2022-04-01 22:54:11', 0, '0000-00-00 00:00:00'),
(28, 1, '2022-04-01 23:03:01', '650.00', '0.00', 1, 'Col. Flor del Campo, 11101', 2, NULL, '8YM43723DX3011454', '{\"id\":\"7A7450099E898960Y\",\"intent\":\"CAPTURE\",\"status\":\"COMPLETED\",\"purchase_units\":[{\"reference_id\":\"default\",\"amount\":{\"currency_code\":\"USD\",\"value\":\"26.67\"},\"payee\":{\"email_address\":\"sb-wredv8287762@business.example.com\",\"merchant_id\":\"5E2T43PBCLZWQ\"},\"description\":\"Compra de articulos en Route 77 por  L650\",\"shipping\":{\"name\":{\"full_name\":\"John Doe\"},\"address\":{\"address_line_1\":\"Free Trade Zone\",\"admin_area_2\":\"Tegucigalpa\",\"admin_area_1\":\"Tegucigalpa\",\"postal_code\":\"12345\",\"country_code\":\"HN\"}},\"payments\":{\"captures\":[{\"id\":\"8YM43723DX3011454\",\"status\":\"COMPLETED\",\"amount\":{\"currency_code\":\"USD\",\"value\":\"26.67\"},\"final_capture\":true,\"seller_protection\":{\"status\":\"ELIGIBLE\",\"dispute_categories\":[\"ITEM_NOT_RECEIVED\",\"UNAUTHORIZED_TRANSACTION\"]},\"create_time\":\"2022-04-02T05:03:01Z\",\"update_time\":\"2022-04-02T05:03:01Z\"}]}}],\"payer\":{\"name\":{\"given_name\":\"John\",\"surname\":\"Doe\"},\"email_address\":\"sb-lrh2t8250598@personal.example.com\",\"payer_id\":\"3KDQTSC5T4SJJ\",\"address\":{\"country_code\":\"HN\"}},\"create_time\":\"2022-04-02T05:00:55Z\",\"update_time\":\"2022-04-02T05:03:01Z\",\"links\":[{\"href\":\"https://api.sandbox.paypal.com/v2/checkout/orders/7A7450099E898960Y\",\"rel\":\"self\",\"method\":\"GET\"}]}', 0, '2022-04-01 23:03:01', 0, '0000-00-00 00:00:00'),
(29, 1, '2022-04-01 23:27:52', '327.00', '10.00', 2, 'Col. Flor del Campo, 11101', 1, NULL, NULL, NULL, 0, '2022-04-01 23:27:52', 0, '0000-00-00 00:00:00'),
(30, 1, '2022-04-01 23:28:08', '327.00', '10.00', 2, 'Col. Flor del Campo, 504', 1, NULL, NULL, NULL, 0, '2022-04-01 23:28:08', 0, '0000-00-00 00:00:00'),
(31, 1, '2022-04-01 23:29:02', '327.00', '10.00', 2, 'Col. Flor del Campo, 504', 1, NULL, NULL, NULL, 0, '2022-04-01 23:29:02', 0, '0000-00-00 00:00:00'),
(32, 1, '2022-04-01 23:33:58', '327.00', '10.00', 2, 'Flor del campo Zona 2, 11101', 1, NULL, NULL, NULL, 0, '2022-04-01 23:33:58', 0, '0000-00-00 00:00:00'),
(33, 1, '2022-04-01 23:35:07', '205.00', '10.00', 2, 'Flor del campo Zona 2, Mi casa', 1, NULL, NULL, NULL, 0, '2022-04-01 23:35:07', 0, '0000-00-00 00:00:00'),
(34, 1, '2022-04-01 23:39:57', '35.00', '10.00', 2, 'Col. Flor del Campo, 11101', 1, NULL, NULL, NULL, 0, '2022-04-01 23:39:57', 0, '0000-00-00 00:00:00'),
(35, 1, '2022-04-01 23:41:40', '35.00', '10.00', 2, 'Col. Flor del Campo, 11101', 1, NULL, NULL, NULL, 0, '2022-04-01 23:41:40', 0, '0000-00-00 00:00:00'),
(36, 1, '2022-04-01 23:44:17', '35.00', '10.00', 2, 'Col. Flor del Campo, 11101', 1, NULL, NULL, NULL, 0, '2022-04-01 23:44:17', 0, '0000-00-00 00:00:00'),
(37, 1, '2022-04-01 23:46:27', '35.00', '10.00', 2, 'Col. Flor del Campo, 11101', 1, NULL, NULL, NULL, 0, '2022-04-01 23:46:27', 0, '0000-00-00 00:00:00'),
(38, 1, '2022-04-01 23:47:38', '35.00', '10.00', 2, 'Col. Flor del Campo, 11101', 1, NULL, NULL, NULL, 0, '2022-04-01 23:47:38', 0, '0000-00-00 00:00:00'),
(39, 1, '2022-04-01 23:51:47', '35.00', '10.00', 2, 'Col. Flor del Campo, 11101', 1, NULL, NULL, NULL, 0, '2022-04-01 23:51:47', 0, '0000-00-00 00:00:00'),
(40, 1, '2022-04-01 23:52:27', '35.00', '10.00', 2, 'Col. Flor del Campo, 11101', 1, NULL, NULL, NULL, 0, '2022-04-01 23:52:27', 0, '0000-00-00 00:00:00'),
(41, 1, '2022-04-01 23:56:44', '205.00', '10.00', 2, 'Flor del campo Zona 2, 11101', 1, NULL, NULL, NULL, 0, '2022-04-01 23:56:44', 0, '0000-00-00 00:00:00'),
(42, 1, '2022-04-02 00:00:49', '85.00', '10.00', 1, 'Col. Flor del Campo, 11101', 1, NULL, NULL, NULL, 0, '2022-04-02 00:00:49', 0, '0000-00-00 00:00:00'),
(43, 1, '2022-04-02 00:01:25', '85.00', '10.00', 2, 'Col. Flor del Campo, 11101', 1, NULL, NULL, NULL, 0, '2022-04-02 00:01:25', 0, '0000-00-00 00:00:00'),
(45, 1, '2022-04-02 01:10:48', '86.00', '10.00', 1, 'Flor del campo Zona 2, 11101', 2, NULL, '641590789F655810D', '{\"id\":\"0GG102024S275645U\",\"intent\":\"CAPTURE\",\"status\":\"COMPLETED\",\"purchase_units\":[{\"reference_id\":\"default\",\"amount\":{\"currency_code\":\"USD\",\"value\":\"3.53\"},\"payee\":{\"email_address\":\"sb-wredv8287762@business.example.com\",\"merchant_id\":\"5E2T43PBCLZWQ\"},\"description\":\"Compra de articulos en Route 77 por  L86\",\"shipping\":{\"name\":{\"full_name\":\"John Doe\"},\"address\":{\"address_line_1\":\"Free Trade Zone\",\"admin_area_2\":\"Tegucigalpa\",\"admin_area_1\":\"Tegucigalpa\",\"postal_code\":\"12345\",\"country_code\":\"HN\"}},\"payments\":{\"captures\":[{\"id\":\"641590789F655810D\",\"status\":\"COMPLETED\",\"amount\":{\"currency_code\":\"USD\",\"value\":\"3.53\"},\"final_capture\":true,\"seller_protection\":{\"status\":\"ELIGIBLE\",\"dispute_categories\":[\"ITEM_NOT_RECEIVED\",\"UNAUTHORIZED_TRANSACTION\"]},\"create_time\":\"2022-04-02T07:10:48Z\",\"update_time\":\"2022-04-02T07:10:48Z\"}]}}],\"payer\":{\"name\":{\"given_name\":\"John\",\"surname\":\"Doe\"},\"email_address\":\"sb-lrh2t8250598@personal.example.com\",\"payer_id\":\"3KDQTSC5T4SJJ\",\"address\":{\"country_code\":\"HN\"}},\"create_time\":\"2022-04-02T07:10:29Z\",\"update_time\":\"2022-04-02T07:10:48Z\",\"links\":[{\"href\":\"https://api.sandbox.paypal.com/v2/checkout/orders/0GG102024S275645U\",\"rel\":\"self\",\"method\":\"GET\"}]}', 0, '2022-04-02 01:10:48', 0, '0000-00-00 00:00:00'),
(46, 1, '2022-04-05 15:13:48', '264.00', '10.00', 1, 'USA, Miami', 4, NULL, '1KD91627VM8744945', '{\"id\":\"709582511C7326134\",\"intent\":\"CAPTURE\",\"status\":\"COMPLETED\",\"purchase_units\":[{\"reference_id\":\"default\",\"amount\":{\"currency_code\":\"USD\",\"value\":\"10.82\"},\"payee\":{\"email_address\":\"sb-wredv8287762@business.example.com\",\"merchant_id\":\"5E2T43PBCLZWQ\"},\"description\":\"Compra de articulos en Route 77 por  L264\",\"shipping\":{\"name\":{\"full_name\":\"John Doe\"},\"address\":{\"address_line_1\":\"Free Trade Zone\",\"admin_area_2\":\"Tegucigalpa\",\"admin_area_1\":\"Tegucigalpa\",\"postal_code\":\"12345\",\"country_code\":\"HN\"}},\"payments\":{\"captures\":[{\"id\":\"1KD91627VM8744945\",\"status\":\"COMPLETED\",\"amount\":{\"currency_code\":\"USD\",\"value\":\"10.82\"},\"final_capture\":true,\"seller_protection\":{\"status\":\"ELIGIBLE\",\"dispute_categories\":[\"ITEM_NOT_RECEIVED\",\"UNAUTHORIZED_TRANSACTION\"]},\"create_time\":\"2022-04-05T21:13:48Z\",\"update_time\":\"2022-04-05T21:13:48Z\"}]}}],\"payer\":{\"name\":{\"given_name\":\"John\",\"surname\":\"Doe\"},\"email_address\":\"sb-lrh2t8250598@personal.example.com\",\"payer_id\":\"3KDQTSC5T4SJJ\",\"address\":{\"country_code\":\"HN\"}},\"create_time\":\"2022-04-05T21:13:23Z\",\"update_time\":\"2022-04-05T21:13:48Z\",\"links\":[{\"href\":\"https://api.sandbox.paypal.com/v2/checkout/orders/709582511C7326134\",\"rel\":\"self\",\"method\":\"GET\"}]}', 0, '2022-04-05 15:13:48', 0, '0000-00-00 00:00:00'),
(47, 1, '2022-04-06 01:16:24', '142.00', '10.00', 1, 'QQ, WW', 4, NULL, '4C372163YS110874S', '{\"create_time\":\"2022-04-06T07:15:37Z\",\"update_time\":\"2022-04-06T07:16:23Z\",\"id\":\"7F538361R17420226\",\"intent\":\"CAPTURE\",\"status\":\"COMPLETED\",\"payer\":{\"email_address\":\"sb-lrh2t8250598@personal.example.com\",\"payer_id\":\"3KDQTSC5T4SJJ\",\"address\":{\"country_code\":\"HN\"},\"name\":{\"given_name\":\"John\",\"surname\":\"Doe\"}},\"purchase_units\":[{\"description\":\"Compra de articulos en Route 77 por  L142\",\"reference_id\":\"default\",\"amount\":{\"value\":\"5.75\",\"currency_code\":\"USD\"},\"payee\":{\"email_address\":\"sb-wredv8287762@business.example.com\",\"merchant_id\":\"5E2T43PBCLZWQ\"},\"shipping\":{\"name\":{\"full_name\":\"John Doe\"},\"address\":{\"address_line_1\":\"Free Trade Zone\",\"admin_area_2\":\"Tegucigalpa\",\"admin_area_1\":\"Tegucigalpa\",\"postal_code\":\"12345\",\"country_code\":\"HN\"}},\"payments\":{\"captures\":[{\"status\":\"COMPLETED\",\"id\":\"4C372163YS110874S\",\"final_capture\":true,\"create_time\":\"2022-04-06T07:16:23Z\",\"update_time\":\"2022-04-06T07:16:23Z\",\"amount\":{\"value\":\"5.75\",\"currency_code\":\"USD\"},\"seller_protection\":{\"status\":\"ELIGIBLE\",\"dispute_categories\":[\"ITEM_NOT_RECEIVED\",\"UNAUTHORIZED_TRANSACTION\"]},\"links\":[{\"href\":\"https://api.sandbox.paypal.com/v2/payments/captures/4C372163YS110874S\",\"rel\":\"self\",\"method\":\"GET\",\"title\":\"GET\"},{\"href\":\"https://api.sandbox.paypal.com/v2/payments/captures/4C372163YS110874S/refund\",\"rel\":\"refund\",\"method\":\"POST\",\"title\":\"POST\"},{\"href\":\"https://api.sandbox.paypal.com/v2/checkout/orders/7F538361R17420226\",\"rel\":\"up\",\"method\":\"GET\",\"title\":\"GET\"}]}]}}],\"links\":[{\"href\":\"https://api.sandbox.paypal.com/v2/checkout/orders/7F538361R17420226\",\"rel\":\"self\",\"method\":\"GET\",\"title\":\"GET\"}]}', 0, '2022-04-06 01:16:24', 0, '0000-00-00 00:00:00'),
(48, 19, '2022-04-06 01:47:51', '160.00', '10.00', 1, 'LAS HADAS, VALLE', 4, NULL, '4GE28682PD2061717', '{\"id\":\"24250260CH2702632\",\"intent\":\"CAPTURE\",\"status\":\"COMPLETED\",\"purchase_units\":[{\"reference_id\":\"default\",\"amount\":{\"currency_code\":\"USD\",\"value\":\"6.47\"},\"payee\":{\"email_address\":\"sb-wredv8287762@business.example.com\",\"merchant_id\":\"5E2T43PBCLZWQ\"},\"description\":\"Compra de articulos en Route 77 por  L160\",\"shipping\":{\"name\":{\"full_name\":\"John Doe\"},\"address\":{\"address_line_1\":\"Free Trade Zone\",\"admin_area_2\":\"Tegucigalpa\",\"admin_area_1\":\"Tegucigalpa\",\"postal_code\":\"12345\",\"country_code\":\"HN\"}},\"payments\":{\"captures\":[{\"id\":\"4GE28682PD2061717\",\"status\":\"COMPLETED\",\"amount\":{\"currency_code\":\"USD\",\"value\":\"6.47\"},\"final_capture\":true,\"seller_protection\":{\"status\":\"ELIGIBLE\",\"dispute_categories\":[\"ITEM_NOT_RECEIVED\",\"UNAUTHORIZED_TRANSACTION\"]},\"create_time\":\"2022-04-06T07:47:51Z\",\"update_time\":\"2022-04-06T07:47:51Z\"}]}}],\"payer\":{\"name\":{\"given_name\":\"John\",\"surname\":\"Doe\"},\"email_address\":\"sb-lrh2t8250598@personal.example.com\",\"payer_id\":\"3KDQTSC5T4SJJ\",\"address\":{\"country_code\":\"HN\"}},\"create_time\":\"2022-04-06T07:47:28Z\",\"update_time\":\"2022-04-06T07:47:51Z\",\"links\":[{\"href\":\"https://api.sandbox.paypal.com/v2/checkout/orders/24250260CH2702632\",\"rel\":\"self\",\"method\":\"GET\"}]}', 0, '2022-04-06 01:47:51', 0, '0000-00-00 00:00:00'),
(49, 19, '2022-04-06 01:51:48', '650.00', '0.00', 1, 'Col. Los Laureles, BARRIO #2', 2, NULL, '5AH52430S5824271V', '{\"id\":\"2YK86895VJ883910P\",\"intent\":\"CAPTURE\",\"status\":\"COMPLETED\",\"purchase_units\":[{\"reference_id\":\"default\",\"amount\":{\"currency_code\":\"USD\",\"value\":\"26.30\"},\"payee\":{\"email_address\":\"sb-wredv8287762@business.example.com\",\"merchant_id\":\"5E2T43PBCLZWQ\"},\"description\":\"Compra de articulos en Route 77 por  L650\",\"shipping\":{\"name\":{\"full_name\":\"John Doe\"},\"address\":{\"address_line_1\":\"Free Trade Zone\",\"admin_area_2\":\"Tegucigalpa\",\"admin_area_1\":\"Tegucigalpa\",\"postal_code\":\"12345\",\"country_code\":\"HN\"}},\"payments\":{\"captures\":[{\"id\":\"5AH52430S5824271V\",\"status\":\"COMPLETED\",\"amount\":{\"currency_code\":\"USD\",\"value\":\"26.30\"},\"final_capture\":true,\"seller_protection\":{\"status\":\"ELIGIBLE\",\"dispute_categories\":[\"ITEM_NOT_RECEIVED\",\"UNAUTHORIZED_TRANSACTION\"]},\"create_time\":\"2022-04-06T07:51:47Z\",\"update_time\":\"2022-04-06T07:51:47Z\"}]}}],\"payer\":{\"name\":{\"given_name\":\"John\",\"surname\":\"Doe\"},\"email_address\":\"sb-lrh2t8250598@personal.example.com\",\"payer_id\":\"3KDQTSC5T4SJJ\",\"address\":{\"country_code\":\"HN\"}},\"create_time\":\"2022-04-06T07:51:40Z\",\"update_time\":\"2022-04-06T07:51:47Z\",\"links\":[{\"href\":\"https://api.sandbox.paypal.com/v2/checkout/orders/2YK86895VJ883910P\",\"rel\":\"self\",\"method\":\"GET\"}]}', 0, '2022-04-06 01:51:48', 0, '0000-00-00 00:00:00'),
(50, 19, '2022-04-06 01:55:32', '35.00', '10.00', 1, 'FLOR DEL CAMPO, LA CANTERA', 2, NULL, '0NE94464Y1916112C', '{\"id\":\"40J16266M5069691J\",\"intent\":\"CAPTURE\",\"status\":\"COMPLETED\",\"purchase_units\":[{\"reference_id\":\"default\",\"amount\":{\"currency_code\":\"USD\",\"value\":\"1.42\"},\"payee\":{\"email_address\":\"sb-wredv8287762@business.example.com\",\"merchant_id\":\"5E2T43PBCLZWQ\"},\"description\":\"Compra de articulos en Route 77 por  L35\",\"shipping\":{\"name\":{\"full_name\":\"John Doe\"},\"address\":{\"address_line_1\":\"Free Trade Zone\",\"admin_area_2\":\"Tegucigalpa\",\"admin_area_1\":\"Tegucigalpa\",\"postal_code\":\"12345\",\"country_code\":\"HN\"}},\"payments\":{\"captures\":[{\"id\":\"0NE94464Y1916112C\",\"status\":\"COMPLETED\",\"amount\":{\"currency_code\":\"USD\",\"value\":\"1.42\"},\"final_capture\":true,\"seller_protection\":{\"status\":\"ELIGIBLE\",\"dispute_categories\":[\"ITEM_NOT_RECEIVED\",\"UNAUTHORIZED_TRANSACTION\"]},\"create_time\":\"2022-04-06T07:55:31Z\",\"update_time\":\"2022-04-06T07:55:31Z\"}]}}],\"payer\":{\"name\":{\"given_name\":\"John\",\"surname\":\"Doe\"},\"email_address\":\"sb-lrh2t8250598@personal.example.com\",\"payer_id\":\"3KDQTSC5T4SJJ\",\"address\":{\"country_code\":\"HN\"}},\"create_time\":\"2022-04-06T07:55:24Z\",\"update_time\":\"2022-04-06T07:55:31Z\",\"links\":[{\"href\":\"https://api.sandbox.paypal.com/v2/checkout/orders/40J16266M5069691J\",\"rel\":\"self\",\"method\":\"GET\"}]}', 0, '2022-04-06 01:55:32', 0, '0000-00-00 00:00:00'),
(51, 19, '2022-04-06 02:20:13', '135.00', '10.00', 1, 'VALLE DE SULA, EL CC', 4, NULL, '4VD94482T8502422N', '{\"id\":\"7TK423171U7143208\",\"intent\":\"CAPTURE\",\"status\":\"COMPLETED\",\"purchase_units\":[{\"reference_id\":\"default\",\"amount\":{\"currency_code\":\"USD\",\"value\":\"5.46\"},\"payee\":{\"email_address\":\"sb-wredv8287762@business.example.com\",\"merchant_id\":\"5E2T43PBCLZWQ\"},\"description\":\"Compra de articulos en Route 77 por  L135\",\"shipping\":{\"name\":{\"full_name\":\"John Doe\"},\"address\":{\"address_line_1\":\"Free Trade Zone\",\"admin_area_2\":\"Tegucigalpa\",\"admin_area_1\":\"Tegucigalpa\",\"postal_code\":\"12345\",\"country_code\":\"HN\"}},\"payments\":{\"captures\":[{\"id\":\"4VD94482T8502422N\",\"status\":\"COMPLETED\",\"amount\":{\"currency_code\":\"USD\",\"value\":\"5.46\"},\"final_capture\":true,\"seller_protection\":{\"status\":\"ELIGIBLE\",\"dispute_categories\":[\"ITEM_NOT_RECEIVED\",\"UNAUTHORIZED_TRANSACTION\"]},\"create_time\":\"2022-04-06T08:20:12Z\",\"update_time\":\"2022-04-06T08:20:12Z\"}]}}],\"payer\":{\"name\":{\"given_name\":\"John\",\"surname\":\"Doe\"},\"email_address\":\"sb-lrh2t8250598@personal.example.com\",\"payer_id\":\"3KDQTSC5T4SJJ\",\"address\":{\"country_code\":\"HN\"}},\"create_time\":\"2022-04-06T08:19:58Z\",\"update_time\":\"2022-04-06T08:20:12Z\",\"links\":[{\"href\":\"https://api.sandbox.paypal.com/v2/checkout/orders/7TK423171U7143208\",\"rel\":\"self\",\"method\":\"GET\"}]}', 0, '2022-04-06 02:20:13', 0, '0000-00-00 00:00:00'),
(52, 1, '2022-04-06 23:04:27', '205.00', '10.00', 3, 'PPP, OOO', 3, '333', NULL, NULL, 0, '2022-04-06 23:04:27', 0, '0000-00-00 00:00:00'),
(56, 1, '2022-04-09 17:29:30', '205.00', '10.00', 2, 'Flor del campo Zona 2, 11101', 1, NULL, NULL, NULL, 0, '2022-04-09 17:29:30', 0, '0000-00-00 00:00:00'),
(57, 1, '2022-04-14 17:18:22', '135.00', '10.00', 2, 'Flor del campo Zona 2, 11101', 1, NULL, NULL, NULL, 0, '2022-04-14 17:18:22', 0, '0000-00-00 00:00:00'),
(58, 1, '2022-04-14 19:01:29', '60.00', '10.00', 2, 'Flor del campo Zona 2, 11101', 1, NULL, NULL, NULL, 0, '2022-04-14 19:01:29', 0, '0000-00-00 00:00:00'),
(59, 1, '2022-04-14 19:03:02', '140.00', '10.00', 2, 'Col. Flor del Campo, 11101', 1, NULL, NULL, NULL, 0, '2022-04-14 19:03:02', 0, '0000-00-00 00:00:00'),
(60, 1, '2022-04-14 19:03:52', '60.00', '10.00', 2, 'Flor del campo Zona 2, 11101', 1, NULL, NULL, NULL, 0, '2022-04-14 19:03:52', 0, '0000-00-00 00:00:00'),
(61, 1, '2022-04-14 19:04:42', '60.00', '10.00', 1, 'Flor del campo Zona 2, 11101', 3, '123', NULL, NULL, 0, '2022-04-14 19:04:42', 0, '0000-00-00 00:00:00'),
(62, 1, '2022-04-17 17:23:43', '260.00', '10.00', 2, 'Col. Flor del Campo, 11101', 1, NULL, NULL, NULL, 0, '2022-04-17 17:23:43', 0, '0000-00-00 00:00:00'),
(67, 1, '2022-04-17 23:15:39', '85.00', '10.00', 2, 'Flor del campo Zona 2, 11101', 1, NULL, NULL, NULL, 0, '2022-04-17 23:15:39', 0, '0000-00-00 00:00:00'),
(69, 1, '2022-04-18 02:40:51', '225.00', '30.00', 2, 'Flor del campo Zona 2, 11101', 1, NULL, NULL, NULL, 0, '2022-04-18 02:40:51', 0, '0000-00-00 00:00:00'),
(70, 1, '2022-04-18 21:50:44', '85.00', '10.00', 1, 'Flor del campo Zona 2, 11101', 2, NULL, '13Y94839UA610281D', '{\"id\":\"13X72570A96577145\",\"intent\":\"CAPTURE\",\"status\":\"COMPLETED\",\"purchase_units\":[{\"reference_id\":\"default\",\"amount\":{\"currency_code\":\"USD\",\"value\":\"3.42\"},\"payee\":{\"email_address\":\"sb-wredv8287762@business.example.com\",\"merchant_id\":\"5E2T43PBCLZWQ\"},\"description\":\"Compra de articulos en Route 77 por  L85\",\"shipping\":{\"name\":{\"full_name\":\"John Doe\"},\"address\":{\"address_line_1\":\"Free Trade Zone\",\"admin_area_2\":\"Tegucigalpa\",\"admin_area_1\":\"Tegucigalpa\",\"postal_code\":\"12345\",\"country_code\":\"HN\"}},\"payments\":{\"captures\":[{\"id\":\"13Y94839UA610281D\",\"status\":\"COMPLETED\",\"amount\":{\"currency_code\":\"USD\",\"value\":\"3.42\"},\"final_capture\":true,\"seller_protection\":{\"status\":\"ELIGIBLE\",\"dispute_categories\":[\"ITEM_NOT_RECEIVED\",\"UNAUTHORIZED_TRANSACTION\"]},\"create_time\":\"2022-04-19T03:50:43Z\",\"update_time\":\"2022-04-19T03:50:43Z\"}]}}],\"payer\":{\"name\":{\"given_name\":\"John\",\"surname\":\"Doe\"},\"email_address\":\"sb-tpf3v1494486@personal.example.com\",\"payer_id\":\"66G328FZP4H4N\",\"address\":{\"country_code\":\"HN\"}},\"create_time\":\"2022-04-19T03:50:32Z\",\"update_time\":\"2022-04-19T03:50:43Z\",\"links\":[{\"href\":\"https://api.sandbox.paypal.com/v2/checkout/orders/13X72570A96577145\",\"rel\":\"self\",\"method\":\"GET\"}]}', 0, '2022-04-18 21:50:44', 0, '0000-00-00 00:00:00'),
(71, 1, '2022-04-19 03:19:43', '179.95', '100.00', 3, 'Flor del campo Zona 2, 11101', 1, NULL, NULL, NULL, 0, '2022-04-19 03:19:43', 0, '0000-00-00 00:00:00');

-- --------------------------------------------------------

--
-- Estructura de tabla para la tabla `TBL_PERMISOS`
--

CREATE TABLE `TBL_PERMISOS` (
  `COD_PERMISO` bigint(20) NOT NULL COMMENT 'CÓDIGO DE PERMISO',
  `COD_ROL` bigint(20) NOT NULL COMMENT 'CÓDIGO DE ROL DEL USUARIO ',
  `COD_MODULO` bigint(20) NOT NULL COMMENT 'CÓDIGO DEL MÓDULO AL CUAL SE OTORGA O QUITA EL PERMISO',
  `R` int(11) NOT NULL COMMENT 'LECTURA',
  `W` int(11) NOT NULL COMMENT 'ESCRITURA',
  `U` int(11) NOT NULL COMMENT 'MODIFICAR',
  `D` int(11) NOT NULL COMMENT 'ELIMINAR'
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_swedish_ci;

--
-- Volcado de datos para la tabla `TBL_PERMISOS`
--

INSERT INTO `TBL_PERMISOS` (`COD_PERMISO`, `COD_ROL`, `COD_MODULO`, `R`, `W`, `U`, `D`) VALUES
(322, 3, 1, 0, 0, 0, 0),
(323, 3, 2, 0, 0, 0, 0),
(324, 3, 3, 0, 0, 0, 0),
(325, 3, 4, 0, 0, 0, 0),
(326, 3, 5, 0, 0, 0, 0),
(327, 3, 6, 0, 0, 0, 0),
(623, 4, 3, 0, 0, 0, 0),
(625, 4, 4, 0, 0, 0, 0),
(728, 8, 1, 1, 1, 1, 1),
(729, 8, 2, 1, 1, 1, 1),
(730, 8, 3, 0, 0, 0, 0),
(731, 8, 4, 0, 0, 0, 0),
(732, 8, 5, 0, 0, 0, 0),
(733, 8, 6, 0, 0, 0, 0),
(734, 8, 14, 0, 0, 0, 0),
(735, 8, 15, 0, 0, 0, 0),
(736, 8, 16, 0, 0, 0, 0),
(1042, 2, 1, 0, 0, 0, 0),
(1043, 2, 2, 0, 0, 0, 0),
(1044, 2, 3, 0, 0, 0, 0),
(1045, 2, 4, 0, 0, 0, 0),
(1046, 2, 5, 1, 0, 0, 0),
(1047, 2, 6, 0, 0, 0, 0),
(1048, 2, 9, 0, 0, 0, 0),
(1049, 2, 13, 0, 0, 0, 0),
(1050, 2, 14, 0, 0, 0, 0),
(1051, 2, 15, 0, 0, 0, 0),
(1052, 2, 16, 0, 0, 0, 0),
(1053, 2, 17, 0, 0, 0, 0),
(1067, 1, 1, 1, 1, 1, 1),
(1068, 1, 2, 1, 1, 1, 1),
(1069, 1, 3, 1, 1, 1, 1),
(1070, 1, 4, 1, 1, 1, 1),
(1071, 1, 5, 1, 1, 1, 1),
(1072, 1, 6, 1, 1, 1, 1),
(1073, 1, 9, 1, 1, 1, 1),
(1074, 1, 13, 1, 1, 1, 1),
(1075, 1, 14, 1, 1, 1, 1),
(1076, 1, 15, 1, 1, 1, 1),
(1077, 1, 16, 1, 1, 1, 1),
(1078, 1, 17, 1, 1, 1, 1),
(1079, 1, 18, 1, 1, 1, 1);

-- --------------------------------------------------------

--
-- Estructura de tabla para la tabla `TBL_PERSONAS`
--

CREATE TABLE `TBL_PERSONAS` (
  `COD_PERSONA` bigint(20) NOT NULL COMMENT 'CÓDIGO DE PERSONA',
  `NOMBRES` varchar(25) CHARACTER SET utf8mb4 COLLATE utf8mb4_swedish_ci NOT NULL COMMENT 'NOMBRE DE LA PERSONA',
  `APELLIDOS` varchar(25) CHARACTER SET utf8mb4 COLLATE utf8mb4_swedish_ci NOT NULL COMMENT 'APELLIDO DE LA PERSONA',
  `EMAIL` varchar(35) CHARACTER SET utf8mb4 COLLATE utf8mb4_swedish_ci NOT NULL COMMENT 'CORREO DE LA PERSONA',
  `CONTRASEÑA` varchar(150) CHARACTER SET utf8mb4 COLLATE utf8mb4_swedish_ci NOT NULL COMMENT 'CONTRASEÑA DE LA PERSONA',
  `COD_ROL` bigint(20) NOT NULL COMMENT 'CÓDIGO DEL ROL DE LA PERSONA',
  `COD_STATUS` int(11) NOT NULL COMMENT 'CÓDIGO DEL ESTADO DE LA PERSONA',
  `TELEFONO` int(11) NOT NULL COMMENT 'TELÉFONO DE LA PERSONA',
  `TOKEN` varchar(100) CHARACTER SET utf8mb4 COLLATE utf8mb4_swedish_ci NOT NULL COMMENT 'UTILIZADO PARA ENVIAR AL USUARIO POR SI OLVIDA LA CONTRASEÑA',
  `CREADO_POR` bigint(20) DEFAULT NULL COMMENT 'USUARIO QUE HIZO REGISTRO',
  `FECHA_CREACION` datetime NOT NULL DEFAULT current_timestamp() COMMENT 'FECHA EN LA QUE SE REGISTRÓ A LA PERSONA',
  `MODIFICADO_POR` bigint(20) NOT NULL COMMENT 'REGISTRO DEL ÚLTIMO USUARIO EN MODIFICAR',
  `FECHA_MODIFICACION` datetime NOT NULL COMMENT 'REGISTRO DE LA ÚLTIMA FECHA DE MODIFICACIÓN',
  `DATE_LOGIN` datetime NOT NULL COMMENT 'FECHA EN LA QUE LA PERSONA INICIO SESIÓN'
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_swedish_ci;

--
-- Volcado de datos para la tabla `TBL_PERSONAS`
--

INSERT INTO `TBL_PERSONAS` (`COD_PERSONA`, `NOMBRES`, `APELLIDOS`, `EMAIL`, `CONTRASEÑA`, `COD_ROL`, `COD_STATUS`, `TELEFONO`, `TOKEN`, `CREADO_POR`, `FECHA_CREACION`, `MODIFICADO_POR`, `FECHA_MODIFICACION`, `DATE_LOGIN`) VALUES
(1, 'José Fernando', 'Ortiz Santos', 'josefortizsantos@gmail.com', '5994471abb01112afcc18159f6cc74b4f511b99806da59b3caf5a9c173cacfc5', 1, 1, 98912132, '', 51, '2022-02-12 02:22:51', 1, '2022-04-17 20:38:47', '2022-04-18 21:48:53'),
(2, 'PEDRO', 'LOPEZ', 'plopez@gmail.com', 'a665a45920422f9d417e4867efdc4fb8a04a1f3fff1fa07e998e86f7f7a27ae3', 2, 1, 98912132, '', 51, '2022-02-12 02:23:15', 1, '2022-04-16 22:43:51', '2022-03-25 01:42:11'),
(5, 'FRANCISCA', 'LAGOS', 'flagoss@gmail.com', '123', 3, 1, 98912132, '', 1, '2022-02-12 02:25:44', 1, '2022-04-09 02:53:28', '2022-02-12 02:23:22'),
(6, 'MARIO', 'PEREZ', 'MPEREZ@GMAIL.COM', '', 1, 0, 9898131, '', 0, '2022-02-15 21:25:36', 0, '0000-00-00 00:00:00', '0000-00-00 00:00:00'),
(13, 'Leonela', 'Pineda', 'lypineda@unah.hn', 'a665a45920422f9d417e4867efdc4fb8a04a1f3fff1fa07e998e86f7f7a27ae3', 1, 1, 97737659, '', 1, '2022-02-17 19:53:21', 1, '2022-04-12 17:07:45', '2022-04-12 17:07:56'),
(14, 'LD', 'LJHBS', 'G@GMAIL.COM', '100', 2, 1, 98795600, '', 1, '2022-02-17 21:24:30', 1, '2022-02-17 21:25:06', '0000-00-00 00:00:00'),
(18, 'CRISTIANO', 'IZAGUIRRE', 'czaguire@gmail.com', '', 3, 1, 9898989, '', 1, '2022-02-18 23:33:55', 1, '2022-04-04 02:18:25', '0000-00-00 00:00:00'),
(19, 'CARLOS', 'ALMENDAREZ', 'ALMENDAREZC@GMAIL.COM', '100', 2, 1, 98103650, '', 1, '2022-02-19 00:30:39', 1, '2022-02-19 00:32:11', '0000-00-00 00:00:00'),
(20, 'CAROLINA FRANCISCA', 'GONZALES', 'cgonz@gmail.com', 'a665a45920422f9d417e4867efdc4fb8a04a1f3fff1fa07e998e86f7f7a27ae3', 1, 2, 91006354, '', 1, '2022-02-19 00:34:29', 1, '2022-03-24 01:12:55', '0000-00-00 00:00:00'),
(32, 'Hugo', 'Paz', 'hugo.paz@unah.hn', 'a665a45920422f9d417e4867efdc4fb8a04a1f3fff1fa07e998e86f7f7a27ae3', 4, 1, 98142814, '', 1, '2022-03-22 18:24:11', 1, '2022-04-13 14:57:57', '0000-00-00 00:00:00'),
(49, 'Kevin', 'Rodriguez', 'karodriguezz@unah.hn', 'a665a45920422f9d417e4867efdc4fb8a04a1f3fff1fa07e998e86f7f7a27ae3', 8, 1, 32301533, '', 1, '2022-03-24 17:37:43', 1, '2022-04-19 10:35:36', '2022-04-03 01:27:16'),
(50, 'Fernando', 'Ortiz', 'josefortizsan121os@gmail.com', 'a665a45920422f9d417e4867efdc4fb8a04a1f3fff1fa07e998e86f7f7a27ae3', 1, 0, 505050574, '', 1, '2022-03-24 17:48:10', 0, '0000-00-00 00:00:00', '0000-00-00 00:00:00'),
(51, 'DARLIN YOHANA', 'MARTEL', 'darlin.matamoros123@unah.hn', 'a665a45920422f9d417e4867efdc4fb8a04a1f3fff1fa07e998e86f7f7a27ae3', 1, 0, 505050574, '', 1, '2022-03-24 22:39:44', 0, '0000-00-00 00:00:00', '0000-00-00 00:00:00'),
(52, 'Pedro', 'Gomez', 'pgomez@gmail.com', 'a665a45920422f9d417e4867efdc4fb8a04a1f3fff1fa07e998e86f7f7a27ae3', 1, 0, 9898998, '', 1, '2022-03-24 22:41:53', 1, '2022-03-25 00:56:56', '0000-00-00 00:00:00'),
(53, 'HUIG', 'PIZA', 'ffernandada@gmail.com', '', 3, 1, 123123123, '', 1, '2022-04-04 02:10:56', 1, '2022-04-18 17:31:38', '0000-00-00 00:00:00'),
(62, 'Pedro Enrique', 'Bustillo', 'josefortizsantos2000@gmail.com', '95e56aa6c537557c35ed141fc054822fdd050187fa161e7da186abda2871bed3', 2, 1, 94877564, '', NULL, '2022-04-18 14:06:02', 0, '0000-00-00 00:00:00', '2022-04-18 14:07:22');

-- --------------------------------------------------------

--
-- Estructura de tabla para la tabla `TBL_PRODUCTOS`
--

CREATE TABLE `TBL_PRODUCTOS` (
  `COD_PRODUCTO` bigint(20) NOT NULL COMMENT 'CÓDIGO DE LOS PRODUCTOS',
  `COD_CATEGORIA` bigint(20) NOT NULL COMMENT 'CÓDIGO DE LAS CATEGORÍAS ALMACENADAS',
  `COD_BARRA` varchar(30) COLLATE utf8mb4_swedish_ci NOT NULL COMMENT 'CÓDIGO DE BARRA DEL PRODUCTO',
  `NOMBRE` varchar(100) COLLATE utf8mb4_swedish_ci NOT NULL COMMENT 'NOMBRE DEL PRODUCTO A REGISTRAR',
  `DESCRIPCION` text COLLATE utf8mb4_swedish_ci NOT NULL COMMENT 'DESCRIPCIÓN DEL PRODUCTO A REGISTRAR',
  `PRECIO` decimal(11,2) NOT NULL COMMENT 'PRECIO DEL PRODUCTO A REGISTRAR',
  `RUTA` varchar(255) COLLATE utf8mb4_swedish_ci NOT NULL,
  `CREADO_POR` bigint(20) NOT NULL COMMENT 'REGISTRO DE USUARIO QUE REGISTRÓ EL PRODUCTO',
  `FECHA_CREACION` datetime NOT NULL DEFAULT current_timestamp() COMMENT 'FECHA EN LA QUE SE REGISTRÓ EL PRODUCTO',
  `MODIFICADO_POR` bigint(20) NOT NULL COMMENT 'REGISTRO DEL ÚLTIMO USUARIO QUE SE REGISTRÓ',
  `FECHA_MODIFICACION` datetime NOT NULL COMMENT 'REGISTRO DE LA ÚLTIMA FECHA DE MODIFICACIÓN',
  `COD_STATUS` int(11) NOT NULL COMMENT 'CÓDIGO DEL ESTADO DEL PRODUCTO'
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_swedish_ci;

--
-- Volcado de datos para la tabla `TBL_PRODUCTOS`
--

INSERT INTO `TBL_PRODUCTOS` (`COD_PRODUCTO`, `COD_CATEGORIA`, `COD_BARRA`, `NOMBRE`, `DESCRIPCION`, `PRECIO`, `RUTA`, `CREADO_POR`, `FECHA_CREACION`, `MODIFICADO_POR`, `FECHA_MODIFICACION`, `COD_STATUS`) VALUES
(1, 4, '123123123123', 'Pasta Colgate', '<p>ARTICULOS PARA EL HOGAR</p>', '25.00', 'pasta-colgate', 1, '2022-02-12 02:39:56', 1, '2022-04-19 10:01:12', 1),
(2, 2, '32141545322', 'Salvavida', '<h1>PRIMOS!!</h1>', '19.00', 'salvavida', 1, '2022-02-12 02:39:56', 1, '2022-04-19 02:14:18', 1),
(3, 2, '12345643234', 'Cerveza Imperial', '<p>Cerveza Imperial 100% Hecha en Casa&nbsp;<span style=\"text-decoration: underline;\">HONDURAS</span></p>', '20.00', 'cerveza-imperial', 1, '2022-02-20 01:33:57', 1, '2022-04-19 02:16:59', 1),
(4, 1, '123456786', 'Leche Leyde', '<p>Leche Leyde</p><ul><li>Deliciosa</li><li>Nutritiva</li><li>Barata</li></ul>', '25.00', 'leche-leyde', 1, '2022-02-27 22:57:46', 1, '2022-04-19 03:15:16', 1),
(5, 3, '12345612378', 'Sombras Victoria Sec', '<p>Paleta de sombras rosa marca Victoria Secret</p><p>20 colores&nbsp;</p>', '25.00', 'sombras-victoria-secret', 0, '2022-03-18 00:01:59', 1, '2022-04-19 10:19:16', 1),
(6, 4, '123456787', 'Cubiertos', '<p>Cubiertos de acero inoxidable de buena calidad</p>', '50.00', 'cubiertos', 0, '2022-03-18 00:11:11', 1, '2022-04-19 02:41:47', 1),
(9, 7, '12345678', 'Dog Chow', '<p>5 Libras de Dog Chow para esos <strong>perros </strong>que andan detr&aacute;s de ti mi amor.</p><p>&nbsp;</p>', '95.00', 'dog-chow', 0, '2022-03-22 18:34:21', 1, '2022-04-19 09:31:16', 1),
(10, 4, '1234567898765000', 'Microondas', '<p>muebles de todo tipo</p>', '1500.00', 'microondas', 1, '2022-03-31 14:25:55', 1, '2022-04-19 03:11:12', 1),
(11, 4, '2345654545', 'Regleta', '<p>&iquest;Estas sin lugar para conectar tus aparatos?</p><h3>No te preocupes m&aacute;s! ROUTE 77 tiene la soluci&oacute;n</h3><p>Regleta a solo 80 lempiras</p>', '80.00', 'regleta', 1, '2022-03-31 14:37:23', 1, '2022-04-19 03:12:48', 1),
(12, 2, '2345665676', 'Cerveza Barena', '<p>Cerveza Barena, Refrescante</p>', '22.00', 'cerveza-barena', 1, '2022-03-31 17:50:25', 1, '2022-04-19 02:18:05', 1),
(13, 6, '43141341', 'Espaguetti', '<p>Espaguetti para comer en familia&nbsp;</p>', '65.00', 'espaguetti', 1, '2022-03-31 21:27:57', 1, '2022-04-19 03:14:49', 1),
(14, 5, '12231223131', 'Manzana', '<p>Porque a Newton le cayo una en la cabeza, no desaproveches la oprtunidad y comete una deliciosa manzana recien cortada del &aacute;rbol.</p><h2>&nbsp;</h2>', '15.99', 'manzana', 1, '2022-04-06 17:41:05', 1, '2022-04-19 03:20:05', 1),
(15, 1, '1234512123', 'Leche Sula', '<p>Leche Sula:&nbsp;</p><p>No busques m&aacute;s la leche que m&aacute;s le gusta a los Hondure&ntilde;os es Leche Sula</p>', '23.00', 'leche-sula', 1, '2022-04-14 17:41:12', 1, '2022-04-19 02:22:17', 1),
(16, 1, '21312312', 'Malteada Sula', '<p>Malteada Sula</p>', '12.00', 'malteada-sula', 1, '2022-04-18 00:32:52', 1, '2022-04-19 08:45:41', 1),
(17, 3, '321321321', 'Estuche para maquill', '<p>Estuche para maquillaje tipo maletin con espejo y luces</p>', '20.00', 'estuche-para-maquill', 1, '2022-04-18 00:35:04', 1, '2022-04-19 10:24:00', 1),
(18, 3, '234235235', 'Labial', '<p>Labial rojo&nbsp;</p>', '80.00', 'labial', 1, '2022-04-19 10:27:13', 0, '0000-00-00 00:00:00', 1);

-- --------------------------------------------------------

--
-- Estructura de tabla para la tabla `TBL_PROVEEDORES`
--

CREATE TABLE `TBL_PROVEEDORES` (
  `COD_PROVEEDOR` bigint(20) NOT NULL COMMENT 'CÓDIGO DE PROVEEDOR',
  `COD_PERSONA` bigint(20) NOT NULL COMMENT 'CÓDIGO PERSONA DEL PROOVEDOR',
  `NOMBRE_EMPRESA` varchar(50) NOT NULL COMMENT 'NOMBRE DE LA EMPRESA',
  `RTN` int(20) NOT NULL COMMENT 'REGISTRO TRUBUTARIO NACIONAL NUMÉRICO',
  `UBICACION` varchar(50) NOT NULL COMMENT 'UBICACIÓN DEL PROVEEDOR'
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_swedish_ci;

--
-- Volcado de datos para la tabla `TBL_PROVEEDORES`
--

INSERT INTO `TBL_PROVEEDORES` (`COD_PROVEEDOR`, `COD_PERSONA`, `NOMBRE_EMPRESA`, `RTN`, `UBICACION`) VALUES
(1, 5, 'PRICEMART', 98908908, 'LAS UVAS'),
(2, 6, 'LA COLONIA2', 98909809, 'LA FLOR'),
(4, 18, 'CERVECERIA HONDUREÑA SA', 9989123, 'LA GRANJA'),
(5, 53, 'No Se', 123123, 'Por Ahi En La Calle');

-- --------------------------------------------------------

--
-- Estructura de tabla para la tabla `TBL_REDES_SOCIALES`
--

CREATE TABLE `TBL_REDES_SOCIALES` (
  `COD_RED_SOCIAL` bigint(20) NOT NULL COMMENT 'CÓDIGO DE RED SOCIAL',
  `COD_EMPRESA` bigint(20) NOT NULL COMMENT 'CÓDIGO DE LA EMPRESA',
  `DESCRIPCION` varchar(15) COLLATE utf8mb4_swedish_ci NOT NULL COMMENT 'DESCRIPCIÓN DE LA RED SOCIAL',
  `ENLACE` varchar(100) COLLATE utf8mb4_swedish_ci NOT NULL COMMENT 'ENLACE DE LA RED SOCIAL DE LA EMPRESA'
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_swedish_ci;

--
-- Volcado de datos para la tabla `TBL_REDES_SOCIALES`
--

INSERT INTO `TBL_REDES_SOCIALES` (`COD_RED_SOCIAL`, `COD_EMPRESA`, `DESCRIPCION`, `ENLACE`) VALUES
(6, 1, 'FACEBOOK', 'FACEBOOK@.COM'),
(12, 1, 'whatsapp', 'whatsapp.com');

-- --------------------------------------------------------

--
-- Estructura de tabla para la tabla `TBL_REEMBOLSO`
--

CREATE TABLE `TBL_REEMBOLSO` (
  `COD_REEMBOLSO` bigint(20) NOT NULL,
  `COD_PEDIDO` bigint(20) NOT NULL,
  `COD_TRANSACCION` varchar(255) COLLATE utf8_swedish_ci NOT NULL,
  `DATOS_REEMBOLSO` text COLLATE utf8_swedish_ci NOT NULL,
  `OBSERVACION` text COLLATE utf8_swedish_ci NOT NULL,
  `STATUS` varchar(150) COLLATE utf8_swedish_ci NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_swedish_ci;

--
-- Volcado de datos para la tabla `TBL_REEMBOLSO`
--

INSERT INTO `TBL_REEMBOLSO` (`COD_REEMBOLSO`, `COD_PEDIDO`, `COD_TRANSACCION`, `DATOS_REEMBOLSO`, `OBSERVACION`, `STATUS`) VALUES
(1, 47, '36X95954BP875211P', '{\"id\":\"36X95954BP875211P\",\"status\":\"COMPLETED\",\"links\":[{\"href\":\"https:\\/\\/api.sandbox.paypal.com\\/v2\\/payments\\/refunds\\/36X95954BP875211P\",\"rel\":\"self\",\"method\":\"GET\"},{\"href\":\"https:\\/\\/api.sandbox.paypal.com\\/v2\\/payments\\/captures\\/4C372163YS110874S\",\"rel\":\"up\",\"method\":\"GET\"}]}', 'AAA', 'COMPLETED'),
(2, 48, '9DA84135UY4368923', '{\"id\":\"9DA84135UY4368923\",\"status\":\"COMPLETED\",\"links\":[{\"href\":\"https:\\/\\/api.sandbox.paypal.com\\/v2\\/payments\\/refunds\\/9DA84135UY4368923\",\"rel\":\"self\",\"method\":\"GET\"},{\"href\":\"https:\\/\\/api.sandbox.paypal.com\\/v2\\/payments\\/captures\\/4GE28682PD2061717\",\"rel\":\"up\",\"method\":\"GET\"}]}', 'PRODUCTO VENCIDO', 'COMPLETED'),
(3, 51, '8VA964105R132590V', '{\"id\":\"8VA964105R132590V\",\"status\":\"COMPLETED\",\"links\":[{\"href\":\"https:\\/\\/api.sandbox.paypal.com\\/v2\\/payments\\/refunds\\/8VA964105R132590V\",\"rel\":\"self\",\"method\":\"GET\"},{\"href\":\"https:\\/\\/api.sandbox.paypal.com\\/v2\\/payments\\/captures\\/4VD94482T8502422N\",\"rel\":\"up\",\"method\":\"GET\"}]}', 'BARRIO PELIGROSO', 'COMPLETED');

-- --------------------------------------------------------

--
-- Estructura de tabla para la tabla `TBL_ROLES`
--

CREATE TABLE `TBL_ROLES` (
  `COD_ROL` bigint(20) NOT NULL COMMENT 'CÓDIGO DE ROL',
  `NOM_ROL` varchar(20) COLLATE utf8mb4_swedish_ci NOT NULL COMMENT 'NOMBRE DEL ROL DEL USUARIO',
  `DESCRIPCION` text COLLATE utf8mb4_swedish_ci NOT NULL COMMENT 'DESCRIPCIÓN DEL TIPO DE ROL AL CUAL PERTENECE EL USUARIO',
  `COD_STATUS` int(11) NOT NULL COMMENT 'CODIGO DEL STATUS DEL ROL'
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_swedish_ci;

--
-- Volcado de datos para la tabla `TBL_ROLES`
--

INSERT INTO `TBL_ROLES` (`COD_ROL`, `NOM_ROL`, `DESCRIPCION`, `COD_STATUS`) VALUES
(1, 'ADMINISTRADOR', '	RNADMINISTRADORRN', 1),
(2, 'CLIENTE', 'CLIENTE', 1),
(3, 'PROVEEDOR', 'PROVEEDOR', 1),
(4, 'Encargado', 'Encargado de Tienda', 1),
(5, 'FINANZAS', 'TESORA FINANZAS EMPRESA', 0),
(7, 'REPARTIDOR', 'REPARTE PRODUCTO', 0),
(8, 'Supervisor', 'Supervisor de la tienda', 1),
(10, 'Motorista', 'Motorista de la tienda', 0);

-- --------------------------------------------------------

--
-- Estructura de tabla para la tabla `TBL_STATUS`
--

CREATE TABLE `TBL_STATUS` (
  `COD_STATUS` int(11) NOT NULL COMMENT 'CÓDIGO DEL STATUS',
  `DESCRIPCION` varchar(20) NOT NULL COMMENT 'DESCRIPCIÓN DEL STATUS'
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_swedish_ci;

--
-- Volcado de datos para la tabla `TBL_STATUS`
--

INSERT INTO `TBL_STATUS` (`COD_STATUS`, `DESCRIPCION`) VALUES
(0, 'ELIMINADO'),
(1, 'ACTIVO'),
(2, 'INACTIVO');

-- --------------------------------------------------------

--
-- Estructura de tabla para la tabla `TBL_SUCURSAL`
--

CREATE TABLE `TBL_SUCURSAL` (
  `COD_SUCURSAL` int(11) NOT NULL COMMENT 'CÓDIGO DE LA SUCURSAL',
  `NOMBRE` varchar(25) COLLATE utf8mb4_swedish_ci NOT NULL COMMENT 'NOMBRE DE LA SUCURSAL',
  `DIRECCION` varchar(50) COLLATE utf8mb4_swedish_ci NOT NULL COMMENT 'DESCRIPCIÓN DE LA SUCURSAL'
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_swedish_ci;

--
-- Volcado de datos para la tabla `TBL_SUCURSAL`
--

INSERT INTO `TBL_SUCURSAL` (`COD_SUCURSAL`, `NOMBRE`, `DIRECCION`) VALUES
(1, 'LOS LAURELES', 'LOS LAURELES'),
(11, 'La Rosa', 'La Rosa');

-- --------------------------------------------------------

--
-- Estructura de tabla para la tabla `TBL_SUSCRIPCIONES`
--

CREATE TABLE `TBL_SUSCRIPCIONES` (
  `COD_SUSCRIPCION` bigint(20) NOT NULL,
  `NOMBRE` varchar(200) COLLATE utf8mb4_swedish_ci NOT NULL,
  `EMAIL` varchar(200) COLLATE utf8mb4_swedish_ci NOT NULL,
  `FECHA_CREACION` datetime NOT NULL DEFAULT current_timestamp() COMMENT 'FECHA EN LA QUE SE REGISTRO EL PRODUCTO'
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_swedish_ci;

--
-- Volcado de datos para la tabla `TBL_SUSCRIPCIONES`
--

INSERT INTO `TBL_SUSCRIPCIONES` (`COD_SUSCRIPCION`, `NOMBRE`, `EMAIL`, `FECHA_CREACION`) VALUES
(1, 'Kevin Zuniga', 'kazro@gmail.com', '2022-04-18 15:24:53'),
(3, 'Hola', 'prueba@gmail.com', '2022-04-18 15:35:20'),
(4, 'Kevin', 'prueba@gmail.coom', '2022-04-18 15:36:41'),
(5, 'Fer', 'fer@gmail.com', '2022-04-18 15:38:18'),
(6, 'Reynaldo De Funes', 'ryn@gmail.com', '2022-04-18 15:43:48'),
(9, 'Jafet De Montoya', 'reyluz@gmail.com', '2022-04-18 15:47:36'),
(10, 'Leonela', 'chinos@gmail.com', '2022-04-18 15:52:00'),
(11, 'Alejandra', 'ale@gmail.com', '2022-04-18 17:33:28'),
(12, 'Jairo', 'jairo@gmail.com', '2022-04-18 21:27:52');

-- --------------------------------------------------------

--
-- Estructura de tabla para la tabla `TBL_TELEFONO_EMPRESA`
--

CREATE TABLE `TBL_TELEFONO_EMPRESA` (
  `COD_TELEFONO_EMPRESA` bigint(20) NOT NULL COMMENT 'CÓDIGO DEL TELÉFONO EMPRESARIAL',
  `COD_EMPRESA` bigint(20) NOT NULL COMMENT 'CÓDIGO DE LA EMPRESA',
  `TELEFONO` varchar(15) COLLATE utf8mb4_swedish_ci NOT NULL COMMENT 'TELÉFONO DE LA EMPRESA'
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_swedish_ci;

--
-- Volcado de datos para la tabla `TBL_TELEFONO_EMPRESA`
--

INSERT INTO `TBL_TELEFONO_EMPRESA` (`COD_TELEFONO_EMPRESA`, `COD_EMPRESA`, `TELEFONO`) VALUES
(2, 1, '98990087');

-- --------------------------------------------------------

--
-- Estructura de tabla para la tabla `TBL_TIPO_ESTADO`
--

CREATE TABLE `TBL_TIPO_ESTADO` (
  `COD_ESTADO` int(11) NOT NULL COMMENT 'CÓDIGO DE ESTADO',
  `DESCRIPCION` varchar(50) NOT NULL COMMENT 'DESCRIPCIÓN DEL ESTADO'
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_swedish_ci;

--
-- Volcado de datos para la tabla `TBL_TIPO_ESTADO`
--

INSERT INTO `TBL_TIPO_ESTADO` (`COD_ESTADO`, `DESCRIPCION`) VALUES
(1, 'PENDIENTE'),
(2, 'APROBADO'),
(3, 'COMPLETO'),
(4, 'REEMBOLSADO'),
(5, 'CANCELADO'),
(6, 'ENTREGADO');

-- --------------------------------------------------------

--
-- Estructura de tabla para la tabla `TBL_TIPO_PAGO`
--

CREATE TABLE `TBL_TIPO_PAGO` (
  `COD_TIPO_PAGO` bigint(20) NOT NULL COMMENT 'CÓDIGO DEL TIPO DE PAGO',
  `DESCRIPCION` varchar(100) NOT NULL COMMENT 'DESCRIPCIÓN DEL TIPO DE PAGO',
  `TIPO_PAGO` varchar(25) DEFAULT NULL COMMENT 'NOMBRE DEL TIPO DE PAGO',
  `COD_STATUS` int(11) NOT NULL COMMENT 'ESTADO DEL TIPO DE PAGO'
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_swedish_ci;

--
-- Volcado de datos para la tabla `TBL_TIPO_PAGO`
--

INSERT INTO `TBL_TIPO_PAGO` (`COD_TIPO_PAGO`, `DESCRIPCION`, `TIPO_PAGO`, `COD_STATUS`) VALUES
(1, 'PAYPAL', 'PAYPAL', 1),
(2, 'EFECTIVO', 'EFECTIVO', 1),
(3, 'CHEQUE', 'BANCO', 1);

-- --------------------------------------------------------

--
-- Estructura de tabla para la tabla `TBL_USUARIOS`
--

CREATE TABLE `TBL_USUARIOS` (
  `COD_USUARIO` bigint(20) NOT NULL COMMENT 'CÓDIGO DEL USUARIO',
  `COD_PERSONA` bigint(20) NOT NULL COMMENT 'CODIGO DE PERSONA',
  `COD_SUCURSAL` int(11) NOT NULL COMMENT 'CÓDIGO DE LA SUCURSAL DONDE PERTENECE EL USUARIO',
  `DNI` varchar(15) COLLATE utf8mb4_swedish_ci NOT NULL COMMENT 'IDENTIDAD DEL USUARIO',
  `COD_GENERO` int(11) NOT NULL COMMENT 'CÓDIGO DEL GÉNERO'
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_swedish_ci;

--
-- Volcado de datos para la tabla `TBL_USUARIOS`
--

INSERT INTO `TBL_USUARIOS` (`COD_USUARIO`, `COD_PERSONA`, `COD_SUCURSAL`, `DNI`, `COD_GENERO`) VALUES
(1, 1, 1, '90980890', 1),
(4, 13, 1, '21652652', 2),
(17, 32, 1, '33895426', 1),
(33, 49, 1, '0801123989878', 1),
(34, 50, 1, '909808905', 1),
(35, 51, 1, '08011239894124', 1),
(36, 52, 1, '1234455667', 1);

--
-- Índices para tablas volcadas
--

--
-- Indices de la tabla `TBL_CALENDARIO`
--
ALTER TABLE `TBL_CALENDARIO`
  ADD PRIMARY KEY (`COD_CALENDARIO`),
  ADD KEY `COD_PERSONA` (`COD_PERSONA`);

--
-- Indices de la tabla `TBL_CATEGORIA`
--
ALTER TABLE `TBL_CATEGORIA`
  ADD PRIMARY KEY (`COD_CATEGORIA`),
  ADD KEY `COD_STATUS` (`COD_STATUS`);

--
-- Indices de la tabla `TBL_CLIENTE`
--
ALTER TABLE `TBL_CLIENTE`
  ADD PRIMARY KEY (`COD_CLIENTE`),
  ADD KEY `COD_PERSONA` (`COD_PERSONA`);

--
-- Indices de la tabla `TBL_DETALLE_COMPRA`
--
ALTER TABLE `TBL_DETALLE_COMPRA`
  ADD PRIMARY KEY (`COD_DETALLE`),
  ADD KEY `COD_ORDEN` (`COD_ORDEN`),
  ADD KEY `COD_PRODUCTO` (`COD_PRODUCTO`);

--
-- Indices de la tabla `TBL_DETALLE_PEDIDO`
--
ALTER TABLE `TBL_DETALLE_PEDIDO`
  ADD PRIMARY KEY (`COD_DETALLE`),
  ADD KEY `COD_PEDIDO` (`COD_PEDIDO`),
  ADD KEY `COD_PRODUCTO` (`COD_PRODUCTO`);

--
-- Indices de la tabla `TBL_EMPRESA`
--
ALTER TABLE `TBL_EMPRESA`
  ADD PRIMARY KEY (`COD_EMPRESA`);

--
-- Indices de la tabla `TBL_GENERO`
--
ALTER TABLE `TBL_GENERO`
  ADD PRIMARY KEY (`COD_GENERO`);

--
-- Indices de la tabla `TBL_IMG_PRODUCTO`
--
ALTER TABLE `TBL_IMG_PRODUCTO`
  ADD PRIMARY KEY (`COD_IMAGEN`),
  ADD KEY `COD_PRODUCTO` (`COD_PRODUCTO`);

--
-- Indices de la tabla `TBL_INVENTARIO`
--
ALTER TABLE `TBL_INVENTARIO`
  ADD PRIMARY KEY (`COD_INVENTARIO`),
  ADD KEY `COD_PRODUCTO` (`COD_PRODUCTO`);

--
-- Indices de la tabla `TBL_MODULO`
--
ALTER TABLE `TBL_MODULO`
  ADD PRIMARY KEY (`COD_MODULO`),
  ADD KEY `COD_STATUS` (`COD_STATUS`);

--
-- Indices de la tabla `TBL_ORDEN_COMPRA`
--
ALTER TABLE `TBL_ORDEN_COMPRA`
  ADD PRIMARY KEY (`COD_ORDEN`),
  ADD KEY `COD_PROVEEDOR` (`COD_PROVEEDOR`);

--
-- Indices de la tabla `TBL_PEDIDO`
--
ALTER TABLE `TBL_PEDIDO`
  ADD PRIMARY KEY (`COD_PEDIDO`),
  ADD KEY `COD_USUARIO` (`COD_PERSONA`),
  ADD KEY `COD_TIPO_PAGO` (`COD_TIPO_PAGO`),
  ADD KEY `COD_ESTADO` (`COD_ESTADO`);

--
-- Indices de la tabla `TBL_PERMISOS`
--
ALTER TABLE `TBL_PERMISOS`
  ADD PRIMARY KEY (`COD_PERMISO`),
  ADD KEY `COD_ROL` (`COD_ROL`),
  ADD KEY `COD_MODULO` (`COD_MODULO`);

--
-- Indices de la tabla `TBL_PERSONAS`
--
ALTER TABLE `TBL_PERSONAS`
  ADD PRIMARY KEY (`COD_PERSONA`),
  ADD UNIQUE KEY `EMAIL` (`EMAIL`),
  ADD KEY `COD_ROL` (`COD_ROL`),
  ADD KEY `COD_ROL_2` (`COD_ROL`),
  ADD KEY `COD_STATUS` (`COD_STATUS`);

--
-- Indices de la tabla `TBL_PRODUCTOS`
--
ALTER TABLE `TBL_PRODUCTOS`
  ADD PRIMARY KEY (`COD_PRODUCTO`),
  ADD KEY `COD_CATEGORIA` (`COD_CATEGORIA`),
  ADD KEY `COD_STATUS` (`COD_STATUS`);

--
-- Indices de la tabla `TBL_PROVEEDORES`
--
ALTER TABLE `TBL_PROVEEDORES`
  ADD PRIMARY KEY (`COD_PROVEEDOR`),
  ADD KEY `COD_PERSONA` (`COD_PERSONA`);

--
-- Indices de la tabla `TBL_REDES_SOCIALES`
--
ALTER TABLE `TBL_REDES_SOCIALES`
  ADD PRIMARY KEY (`COD_RED_SOCIAL`),
  ADD KEY `COD_EMPRESA` (`COD_EMPRESA`);

--
-- Indices de la tabla `TBL_REEMBOLSO`
--
ALTER TABLE `TBL_REEMBOLSO`
  ADD PRIMARY KEY (`COD_REEMBOLSO`),
  ADD KEY `COD_PEDIDO` (`COD_PEDIDO`);

--
-- Indices de la tabla `TBL_ROLES`
--
ALTER TABLE `TBL_ROLES`
  ADD PRIMARY KEY (`COD_ROL`),
  ADD KEY `COD_STATUS` (`COD_STATUS`),
  ADD KEY `COD_STATUS_2` (`COD_STATUS`);

--
-- Indices de la tabla `TBL_STATUS`
--
ALTER TABLE `TBL_STATUS`
  ADD PRIMARY KEY (`COD_STATUS`);

--
-- Indices de la tabla `TBL_SUCURSAL`
--
ALTER TABLE `TBL_SUCURSAL`
  ADD PRIMARY KEY (`COD_SUCURSAL`);

--
-- Indices de la tabla `TBL_SUSCRIPCIONES`
--
ALTER TABLE `TBL_SUSCRIPCIONES`
  ADD PRIMARY KEY (`COD_SUSCRIPCION`);

--
-- Indices de la tabla `TBL_TELEFONO_EMPRESA`
--
ALTER TABLE `TBL_TELEFONO_EMPRESA`
  ADD PRIMARY KEY (`COD_TELEFONO_EMPRESA`),
  ADD KEY `COD_EMPRESA` (`COD_EMPRESA`);

--
-- Indices de la tabla `TBL_TIPO_ESTADO`
--
ALTER TABLE `TBL_TIPO_ESTADO`
  ADD PRIMARY KEY (`COD_ESTADO`);

--
-- Indices de la tabla `TBL_TIPO_PAGO`
--
ALTER TABLE `TBL_TIPO_PAGO`
  ADD PRIMARY KEY (`COD_TIPO_PAGO`),
  ADD KEY `COD_STATUS` (`COD_STATUS`);

--
-- Indices de la tabla `TBL_USUARIOS`
--
ALTER TABLE `TBL_USUARIOS`
  ADD PRIMARY KEY (`COD_USUARIO`),
  ADD UNIQUE KEY `DNI` (`DNI`),
  ADD KEY `COD_PERSONA` (`COD_PERSONA`),
  ADD KEY `COD_SUCURSAL` (`COD_SUCURSAL`),
  ADD KEY `COD_GENERO` (`COD_GENERO`);

--
-- AUTO_INCREMENT de las tablas volcadas
--

--
-- AUTO_INCREMENT de la tabla `TBL_CALENDARIO`
--
ALTER TABLE `TBL_CALENDARIO`
  MODIFY `COD_CALENDARIO` bigint(20) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=8;

--
-- AUTO_INCREMENT de la tabla `TBL_CATEGORIA`
--
ALTER TABLE `TBL_CATEGORIA`
  MODIFY `COD_CATEGORIA` bigint(20) NOT NULL AUTO_INCREMENT COMMENT 'CÓDIGO DE CATEGORÍA', AUTO_INCREMENT=9;

--
-- AUTO_INCREMENT de la tabla `TBL_CLIENTE`
--
ALTER TABLE `TBL_CLIENTE`
  MODIFY `COD_CLIENTE` bigint(20) NOT NULL AUTO_INCREMENT COMMENT 'CÓDIGO DE CLIENTE', AUTO_INCREMENT=13;

--
-- AUTO_INCREMENT de la tabla `TBL_DETALLE_COMPRA`
--
ALTER TABLE `TBL_DETALLE_COMPRA`
  MODIFY `COD_DETALLE` bigint(20) NOT NULL AUTO_INCREMENT COMMENT 'CÓDIGO DEL DETALLE DE COMPRA', AUTO_INCREMENT=41;

--
-- AUTO_INCREMENT de la tabla `TBL_DETALLE_PEDIDO`
--
ALTER TABLE `TBL_DETALLE_PEDIDO`
  MODIFY `COD_DETALLE` bigint(20) NOT NULL AUTO_INCREMENT COMMENT 'CÓDIGO DEL DETALLE PEDIDO', AUTO_INCREMENT=75;

--
-- AUTO_INCREMENT de la tabla `TBL_EMPRESA`
--
ALTER TABLE `TBL_EMPRESA`
  MODIFY `COD_EMPRESA` bigint(20) NOT NULL AUTO_INCREMENT COMMENT 'CÓDIGO DE EMPRESA', AUTO_INCREMENT=7;

--
-- AUTO_INCREMENT de la tabla `TBL_GENERO`
--
ALTER TABLE `TBL_GENERO`
  MODIFY `COD_GENERO` int(11) NOT NULL AUTO_INCREMENT COMMENT 'CÓDIGO DE GÉNERO', AUTO_INCREMENT=14;

--
-- AUTO_INCREMENT de la tabla `TBL_IMG_PRODUCTO`
--
ALTER TABLE `TBL_IMG_PRODUCTO`
  MODIFY `COD_IMAGEN` bigint(20) NOT NULL AUTO_INCREMENT COMMENT 'CÓDIGO DE IMAGEN', AUTO_INCREMENT=60;

--
-- AUTO_INCREMENT de la tabla `TBL_INVENTARIO`
--
ALTER TABLE `TBL_INVENTARIO`
  MODIFY `COD_INVENTARIO` bigint(20) NOT NULL AUTO_INCREMENT COMMENT 'CÓDIGO DE INVENTARIO', AUTO_INCREMENT=19;

--
-- AUTO_INCREMENT de la tabla `TBL_MODULO`
--
ALTER TABLE `TBL_MODULO`
  MODIFY `COD_MODULO` bigint(20) NOT NULL AUTO_INCREMENT COMMENT 'CÓDIGO DEL MÓDULO', AUTO_INCREMENT=19;

--
-- AUTO_INCREMENT de la tabla `TBL_ORDEN_COMPRA`
--
ALTER TABLE `TBL_ORDEN_COMPRA`
  MODIFY `COD_ORDEN` bigint(20) NOT NULL AUTO_INCREMENT COMMENT 'CÓDIGO DE LA ORDEN DE COMPRA', AUTO_INCREMENT=31;

--
-- AUTO_INCREMENT de la tabla `TBL_PEDIDO`
--
ALTER TABLE `TBL_PEDIDO`
  MODIFY `COD_PEDIDO` bigint(20) NOT NULL AUTO_INCREMENT COMMENT 'CÓDIGO DEL PEDIDO', AUTO_INCREMENT=72;

--
-- AUTO_INCREMENT de la tabla `TBL_PERMISOS`
--
ALTER TABLE `TBL_PERMISOS`
  MODIFY `COD_PERMISO` bigint(20) NOT NULL AUTO_INCREMENT COMMENT 'CÓDIGO DE PERMISO', AUTO_INCREMENT=1080;

--
-- AUTO_INCREMENT de la tabla `TBL_PERSONAS`
--
ALTER TABLE `TBL_PERSONAS`
  MODIFY `COD_PERSONA` bigint(20) NOT NULL AUTO_INCREMENT COMMENT 'CÓDIGO DE PERSONA', AUTO_INCREMENT=63;

--
-- AUTO_INCREMENT de la tabla `TBL_PRODUCTOS`
--
ALTER TABLE `TBL_PRODUCTOS`
  MODIFY `COD_PRODUCTO` bigint(20) NOT NULL AUTO_INCREMENT COMMENT 'CÓDIGO DE LOS PRODUCTOS', AUTO_INCREMENT=19;

--
-- AUTO_INCREMENT de la tabla `TBL_PROVEEDORES`
--
ALTER TABLE `TBL_PROVEEDORES`
  MODIFY `COD_PROVEEDOR` bigint(20) NOT NULL AUTO_INCREMENT COMMENT 'CÓDIGO DE PROVEEDOR', AUTO_INCREMENT=6;

--
-- AUTO_INCREMENT de la tabla `TBL_REDES_SOCIALES`
--
ALTER TABLE `TBL_REDES_SOCIALES`
  MODIFY `COD_RED_SOCIAL` bigint(20) NOT NULL AUTO_INCREMENT COMMENT 'CÓDIGO DE RED SOCIAL', AUTO_INCREMENT=13;

--
-- AUTO_INCREMENT de la tabla `TBL_REEMBOLSO`
--
ALTER TABLE `TBL_REEMBOLSO`
  MODIFY `COD_REEMBOLSO` bigint(20) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=10;

--
-- AUTO_INCREMENT de la tabla `TBL_ROLES`
--
ALTER TABLE `TBL_ROLES`
  MODIFY `COD_ROL` bigint(20) NOT NULL AUTO_INCREMENT COMMENT 'CÓDIGO DE ROL', AUTO_INCREMENT=11;

--
-- AUTO_INCREMENT de la tabla `TBL_STATUS`
--
ALTER TABLE `TBL_STATUS`
  MODIFY `COD_STATUS` int(11) NOT NULL AUTO_INCREMENT COMMENT 'CÓDIGO DEL STATUS', AUTO_INCREMENT=7;

--
-- AUTO_INCREMENT de la tabla `TBL_SUCURSAL`
--
ALTER TABLE `TBL_SUCURSAL`
  MODIFY `COD_SUCURSAL` int(11) NOT NULL AUTO_INCREMENT COMMENT 'CÓDIGO DE LA SUCURSAL', AUTO_INCREMENT=12;

--
-- AUTO_INCREMENT de la tabla `TBL_SUSCRIPCIONES`
--
ALTER TABLE `TBL_SUSCRIPCIONES`
  MODIFY `COD_SUSCRIPCION` bigint(20) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=13;

--
-- AUTO_INCREMENT de la tabla `TBL_TELEFONO_EMPRESA`
--
ALTER TABLE `TBL_TELEFONO_EMPRESA`
  MODIFY `COD_TELEFONO_EMPRESA` bigint(20) NOT NULL AUTO_INCREMENT COMMENT 'CÓDIGO DEL TELÉFONO EMPRESARIAL', AUTO_INCREMENT=5;

--
-- AUTO_INCREMENT de la tabla `TBL_TIPO_ESTADO`
--
ALTER TABLE `TBL_TIPO_ESTADO`
  MODIFY `COD_ESTADO` int(11) NOT NULL AUTO_INCREMENT COMMENT 'CÓDIGO DE ESTADO', AUTO_INCREMENT=8;

--
-- AUTO_INCREMENT de la tabla `TBL_TIPO_PAGO`
--
ALTER TABLE `TBL_TIPO_PAGO`
  MODIFY `COD_TIPO_PAGO` bigint(20) NOT NULL AUTO_INCREMENT COMMENT 'CÓDIGO DEL TIPO DE PAGO', AUTO_INCREMENT=7;

--
-- AUTO_INCREMENT de la tabla `TBL_USUARIOS`
--
ALTER TABLE `TBL_USUARIOS`
  MODIFY `COD_USUARIO` bigint(20) NOT NULL AUTO_INCREMENT COMMENT 'CÓDIGO DEL USUARIO', AUTO_INCREMENT=37;

--
-- Restricciones para tablas volcadas
--

--
-- Filtros para la tabla `TBL_CALENDARIO`
--
ALTER TABLE `TBL_CALENDARIO`
  ADD CONSTRAINT `TBL_CALENDARIO_ibfk_1` FOREIGN KEY (`COD_PERSONA`) REFERENCES `TBL_PERSONAS` (`COD_PERSONA`) ON DELETE CASCADE ON UPDATE CASCADE;

--
-- Filtros para la tabla `TBL_CATEGORIA`
--
ALTER TABLE `TBL_CATEGORIA`
  ADD CONSTRAINT `TBL_CATEGORIA_IBFK_1` FOREIGN KEY (`COD_STATUS`) REFERENCES `TBL_STATUS` (`COD_STATUS`) ON DELETE CASCADE ON UPDATE CASCADE;

--
-- Filtros para la tabla `TBL_CLIENTE`
--
ALTER TABLE `TBL_CLIENTE`
  ADD CONSTRAINT `CLIENTE_IBFK_1` FOREIGN KEY (`COD_PERSONA`) REFERENCES `TBL_PERSONAS` (`COD_PERSONA`) ON DELETE CASCADE ON UPDATE CASCADE;

--
-- Filtros para la tabla `TBL_DETALLE_COMPRA`
--
ALTER TABLE `TBL_DETALLE_COMPRA`
  ADD CONSTRAINT `TBL_DETALLE_COMPRA_IBFK_1` FOREIGN KEY (`COD_ORDEN`) REFERENCES `TBL_ORDEN_COMPRA` (`COD_ORDEN`) ON DELETE CASCADE ON UPDATE CASCADE,
  ADD CONSTRAINT `TBL_DETALLE_COMPRA_IBFK_2` FOREIGN KEY (`COD_PRODUCTO`) REFERENCES `TBL_PRODUCTOS` (`COD_PRODUCTO`) ON DELETE CASCADE ON UPDATE CASCADE;

--
-- Filtros para la tabla `TBL_DETALLE_PEDIDO`
--
ALTER TABLE `TBL_DETALLE_PEDIDO`
  ADD CONSTRAINT `TBL_DETALLE_PEDIDO_IBFK_1` FOREIGN KEY (`COD_PRODUCTO`) REFERENCES `TBL_PRODUCTOS` (`COD_PRODUCTO`) ON DELETE CASCADE ON UPDATE CASCADE,
  ADD CONSTRAINT `TBL_DETALLE_PEDIDO_IBFK_2` FOREIGN KEY (`COD_PEDIDO`) REFERENCES `TBL_PEDIDO` (`COD_PEDIDO`) ON DELETE CASCADE ON UPDATE CASCADE;

--
-- Filtros para la tabla `TBL_IMG_PRODUCTO`
--
ALTER TABLE `TBL_IMG_PRODUCTO`
  ADD CONSTRAINT `TBL_IMG_PRODUCTO_IBFK_1` FOREIGN KEY (`COD_PRODUCTO`) REFERENCES `TBL_PRODUCTOS` (`COD_PRODUCTO`) ON DELETE CASCADE ON UPDATE CASCADE;

--
-- Filtros para la tabla `TBL_INVENTARIO`
--
ALTER TABLE `TBL_INVENTARIO`
  ADD CONSTRAINT `TBL_INVENTARIO_IBFK_1` FOREIGN KEY (`COD_PRODUCTO`) REFERENCES `TBL_PRODUCTOS` (`COD_PRODUCTO`) ON DELETE CASCADE ON UPDATE CASCADE;

--
-- Filtros para la tabla `TBL_MODULO`
--
ALTER TABLE `TBL_MODULO`
  ADD CONSTRAINT `TBL_MODULO_IBFK_1` FOREIGN KEY (`COD_STATUS`) REFERENCES `TBL_STATUS` (`COD_STATUS`) ON DELETE CASCADE ON UPDATE CASCADE;

--
-- Filtros para la tabla `TBL_ORDEN_COMPRA`
--
ALTER TABLE `TBL_ORDEN_COMPRA`
  ADD CONSTRAINT `TBL_ORDEN_COMPRA_IBFK_1` FOREIGN KEY (`COD_PROVEEDOR`) REFERENCES `TBL_PROVEEDORES` (`COD_PROVEEDOR`) ON DELETE CASCADE ON UPDATE CASCADE;

--
-- Filtros para la tabla `TBL_PEDIDO`
--
ALTER TABLE `TBL_PEDIDO`
  ADD CONSTRAINT `TBL_PEDIDO_IBFK_1` FOREIGN KEY (`COD_PERSONA`) REFERENCES `TBL_PERSONAS` (`COD_PERSONA`) ON DELETE CASCADE ON UPDATE CASCADE,
  ADD CONSTRAINT `TBL_PEDIDO_IBFK_3` FOREIGN KEY (`COD_TIPO_PAGO`) REFERENCES `TBL_TIPO_PAGO` (`COD_TIPO_PAGO`) ON DELETE CASCADE ON UPDATE CASCADE,
  ADD CONSTRAINT `TBL_PEDIDO_IBFK_4` FOREIGN KEY (`COD_ESTADO`) REFERENCES `TBL_TIPO_ESTADO` (`COD_ESTADO`) ON DELETE CASCADE ON UPDATE CASCADE;

--
-- Filtros para la tabla `TBL_PERMISOS`
--
ALTER TABLE `TBL_PERMISOS`
  ADD CONSTRAINT `TBL_PERMISOS_IBFK_1` FOREIGN KEY (`COD_ROL`) REFERENCES `TBL_ROLES` (`COD_ROL`) ON DELETE CASCADE ON UPDATE CASCADE,
  ADD CONSTRAINT `TBL_PERMISOS_IBFK_2` FOREIGN KEY (`COD_MODULO`) REFERENCES `TBL_MODULO` (`COD_MODULO`) ON DELETE CASCADE ON UPDATE CASCADE;

--
-- Filtros para la tabla `TBL_PERSONAS`
--
ALTER TABLE `TBL_PERSONAS`
  ADD CONSTRAINT `TBL_PERSONAS_IBFK_4` FOREIGN KEY (`COD_ROL`) REFERENCES `TBL_ROLES` (`COD_ROL`) ON DELETE CASCADE ON UPDATE CASCADE,
  ADD CONSTRAINT `TBL_PERSONAS_IBFK_6` FOREIGN KEY (`COD_STATUS`) REFERENCES `TBL_STATUS` (`COD_STATUS`) ON DELETE CASCADE ON UPDATE CASCADE;

--
-- Filtros para la tabla `TBL_PRODUCTOS`
--
ALTER TABLE `TBL_PRODUCTOS`
  ADD CONSTRAINT `TBL_PRODUCTOS_IBFK_1` FOREIGN KEY (`COD_CATEGORIA`) REFERENCES `TBL_CATEGORIA` (`COD_CATEGORIA`) ON DELETE CASCADE ON UPDATE CASCADE,
  ADD CONSTRAINT `TBL_PRODUCTOS_IBFK_2` FOREIGN KEY (`COD_STATUS`) REFERENCES `TBL_STATUS` (`COD_STATUS`) ON DELETE CASCADE ON UPDATE CASCADE;

--
-- Filtros para la tabla `TBL_PROVEEDORES`
--
ALTER TABLE `TBL_PROVEEDORES`
  ADD CONSTRAINT `TBL_PROVEEDORES_IBFK_1` FOREIGN KEY (`COD_PERSONA`) REFERENCES `TBL_PERSONAS` (`COD_PERSONA`) ON DELETE CASCADE ON UPDATE CASCADE;

--
-- Filtros para la tabla `TBL_REDES_SOCIALES`
--
ALTER TABLE `TBL_REDES_SOCIALES`
  ADD CONSTRAINT `TBL_REDES_SOCIALES_IBFK_1` FOREIGN KEY (`COD_EMPRESA`) REFERENCES `TBL_EMPRESA` (`COD_EMPRESA`) ON UPDATE CASCADE;

--
-- Filtros para la tabla `TBL_REEMBOLSO`
--
ALTER TABLE `TBL_REEMBOLSO`
  ADD CONSTRAINT `TBL_REEMBOLSO_ibfk_1` FOREIGN KEY (`COD_PEDIDO`) REFERENCES `TBL_PEDIDO` (`COD_PEDIDO`) ON DELETE CASCADE ON UPDATE CASCADE;

--
-- Filtros para la tabla `TBL_ROLES`
--
ALTER TABLE `TBL_ROLES`
  ADD CONSTRAINT `TBL_ROLES_IBFK_1` FOREIGN KEY (`COD_STATUS`) REFERENCES `TBL_STATUS` (`COD_STATUS`) ON DELETE CASCADE ON UPDATE CASCADE;

--
-- Filtros para la tabla `TBL_TELEFONO_EMPRESA`
--
ALTER TABLE `TBL_TELEFONO_EMPRESA`
  ADD CONSTRAINT `TBL_TELEFONO_EMPRESA_IBFK_1` FOREIGN KEY (`COD_EMPRESA`) REFERENCES `TBL_EMPRESA` (`COD_EMPRESA`) ON UPDATE CASCADE;

--
-- Filtros para la tabla `TBL_TIPO_PAGO`
--
ALTER TABLE `TBL_TIPO_PAGO`
  ADD CONSTRAINT `TBL_TIPO_PAGO_IBFK_1` FOREIGN KEY (`COD_STATUS`) REFERENCES `TBL_STATUS` (`COD_STATUS`) ON DELETE CASCADE ON UPDATE CASCADE;

--
-- Filtros para la tabla `TBL_USUARIOS`
--
ALTER TABLE `TBL_USUARIOS`
  ADD CONSTRAINT `TBL_USUARIOS_IBFK_1` FOREIGN KEY (`COD_PERSONA`) REFERENCES `TBL_PERSONAS` (`COD_PERSONA`) ON DELETE CASCADE ON UPDATE CASCADE,
  ADD CONSTRAINT `TBL_USUARIOS_IBFK_2` FOREIGN KEY (`COD_SUCURSAL`) REFERENCES `TBL_SUCURSAL` (`COD_SUCURSAL`) ON DELETE CASCADE ON UPDATE CASCADE,
  ADD CONSTRAINT `TBL_USUARIOS_IBFK_3` FOREIGN KEY (`COD_GENERO`) REFERENCES `TBL_GENERO` (`COD_GENERO`) ON DELETE CASCADE ON UPDATE CASCADE;
COMMIT;

/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
